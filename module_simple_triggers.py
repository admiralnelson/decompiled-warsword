# -*- coding: UTF-8 -*-
####################################################################################################################
# Generated by Warband Module Decompiler
# All rights of the module belong to their respective owners
####################################################################################################################

from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *
from header_music import *

from module_constants import *

####################################################################################################################
# Simple triggers are the alternative to old style triggers. They do not preserve state, and thus simpler to maintain.
#
#  Each simple trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Operation block: This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

simple_triggers = [
  (ti_on_party_encounter,
  []),

  (ti_simulate_battle,
  []),

  (0,
  [
    (this_or_next|gt, "$restricted_bodyarmor", -1),
    (this_or_next|gt, "$restricted_handarmor", -1),
    (this_or_next|gt, "$restricted_headarmor", -1),
    (this_or_next|gt, "$restricted_slot1", -1),
    (this_or_next|gt, "$restricted_slot2", -1),
    (this_or_next|gt, "$restricted_slot3", -1),
    (this_or_next|gt, "$restricted_slot4", -1),
    (gt, "$restricted_footarmor", -1),
    (assign, ":var0", 0),
    (try_begin),
      (gt, "$restricted_bodyarmor", -1),
      (troop_get_inventory_slot, ":var1", "$restricted_bodyarmor", ek_body),
      (call_script, "script_adjust_race", "$restricted_bodyarmor"),
      (assign, ":var2", reg0),
      (is_between, ":var1", "itm_pilgrim_disguise", "itm_gor_rok_axe"),
      (try_begin),
        (this_or_next|eq, ":var2", 0),
        (this_or_next|eq, ":var2", 5),
        (this_or_next|eq, ":var2", 9),
        (this_or_next|eq, ":var2", 18),
        (this_or_next|eq, ":var2", 17),
        (eq, ":var2", 1),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 6),
        (is_between, ":var1", "itm_chaoswarrior_armor", "itm_ungor_head"),
      (else_try),
        (this_or_next|eq, ":var2", 8),
        (eq, ":var2", 16),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 2),
        (this_or_next|is_between, ":var1", "itm_mummy_body", "itm_dwarf_tunic"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 10),
        (is_between, ":var1", "itm_saurus_head", "itm_skink_hand"),
      (else_try),
        (this_or_next|eq, ":var2", 3),
        (eq, ":var2", 4),
        (is_between, ":var1", "itm_dwarf_tunic", "itm_orc_armour"),
      (else_try),
        (eq, ":var2", 12),
        (is_between, ":var1", "itm_orc_armour", "itm_ogre_head"),
      (else_try),
        (eq, ":var2", 14),
        (this_or_next|is_between, ":var1", "itm_gob_feather", "itm_pygmies_fur"),
        (is_between, ":var1", "itm_skink_hand", "itm_mummy_body"),
      (else_try),
        (eq, ":var2", 15),
        (is_between, ":var1", "itm_skaven_head", "itm_gor_rok_axe"),
      (else_try),
        (eq, ":var2", 7),
        (is_between, ":var1", "itm_ogre_head", "itm_marauder_body"),
      (else_try),
        (eq, ":var2", 11),
        (is_between, ":var1", "itm_halfling_feet", "itm_skaven_head"),
      (else_try),
        (eq, ":var2", 13),
        (is_between, ":var1", "itm_ungor_head", "itm_gob_feather"),
      (else_try),
        (troop_get_inventory_slot_modifier, ":var3", "$restricted_bodyarmor", ek_body),
        (troop_set_inventory_slot, "$restricted_bodyarmor", ek_body, -1),
        (store_free_inventory_capacity, ":var4", "trp_player"),
        (try_begin),
          (ge, ":var4", 1),
          (troop_add_item, "trp_player", ":var1", ":var3"),
        (else_try),
          (display_message, "@No inventory space! Restricted body armor destroyed."),
        (try_end),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_handarmor", -1),
      (troop_get_inventory_slot, ":var1", "$restricted_handarmor", ek_gloves),
      (troop_get_type, ":var2", "$restricted_handarmor"),
      (is_between, ":var1", "itm_pilgrim_disguise", "itm_gor_rok_axe"),
      (try_begin),
        (this_or_next|eq, ":var2", 0),
        (this_or_next|eq, ":var2", 5),
        (this_or_next|eq, ":var2", 9),
        (this_or_next|eq, ":var2", 18),
        (this_or_next|eq, ":var2", 17),
        (eq, ":var2", 1),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 6),
        (is_between, ":var1", "itm_chaoswarrior_armor", "itm_ungor_head"),
      (else_try),
        (this_or_next|eq, ":var2", 8),
        (eq, ":var2", 16),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 2),
        (this_or_next|is_between, ":var1", "itm_mummy_body", "itm_dwarf_tunic"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 10),
        (is_between, ":var1", "itm_saurus_head", "itm_skink_hand"),
      (else_try),
        (this_or_next|eq, ":var2", 3),
        (eq, ":var2", 4),
        (is_between, ":var1", "itm_dwarf_tunic", "itm_orc_armour"),
      (else_try),
        (eq, ":var2", 12),
        (is_between, ":var1", "itm_orc_armour", "itm_ogre_head"),
      (else_try),
        (eq, ":var2", 14),
        (is_between, ":var1", "itm_gob_feather", "itm_pygmies_fur"),
      (else_try),
        (eq, ":var2", 20),
        (is_between, ":var1", "itm_skink_hand", "itm_mummy_body"),
      (else_try),
        (eq, ":var2", 15),
        (is_between, ":var1", "itm_skaven_head", "itm_gor_rok_axe"),
      (else_try),
        (eq, ":var2", 7),
        (is_between, ":var1", "itm_ogre_head", "itm_marauder_body"),
      (else_try),
        (eq, ":var2", 11),
        (is_between, ":var1", "itm_halfling_feet", "itm_skaven_head"),
      (else_try),
        (eq, ":var2", 13),
        (is_between, ":var1", "itm_ungor_head", "itm_gob_feather"),
      (else_try),
        (troop_get_inventory_slot_modifier, ":var3", "$restricted_handarmor", ek_gloves),
        (troop_set_inventory_slot, "$restricted_handarmor", ek_gloves, -1),
        (store_free_inventory_capacity, ":var4", "trp_player"),
        (try_begin),
          (ge, ":var4", 1),
          (troop_add_item, "trp_player", ":var1", ":var3"),
        (else_try),
          (display_message, "@No inventory space! Restricted hand armor destroyed."),
        (try_end),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_headarmor", -1),
      (troop_get_inventory_slot, ":var1", "$restricted_headarmor", ek_head),
      (troop_get_type, ":var2", "$restricted_headarmor"),
      (is_between, ":var1", "itm_pilgrim_disguise", "itm_gor_rok_axe"),
      (try_begin),
        (this_or_next|eq, ":var2", 0),
        (this_or_next|eq, ":var2", 5),
        (this_or_next|eq, ":var2", 9),
        (this_or_next|eq, ":var2", 18),
        (this_or_next|eq, ":var2", 17),
        (eq, ":var2", 1),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 6),
        (is_between, ":var1", "itm_chaoswarrior_armor", "itm_ungor_head"),
      (else_try),
        (this_or_next|eq, ":var2", 8),
        (eq, ":var2", 16),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 2),
        (this_or_next|is_between, ":var1", "itm_mummy_body", "itm_dwarf_tunic"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 10),
        (is_between, ":var1", "itm_saurus_head", "itm_skink_hand"),
      (else_try),
        (this_or_next|eq, ":var2", 3),
        (eq, ":var2", 4),
        (is_between, ":var1", "itm_dwarf_tunic", "itm_orc_armour"),
      (else_try),
        (eq, ":var2", 12),
        (is_between, ":var1", "itm_orc_armour", "itm_ogre_head"),
      (else_try),
        (eq, ":var2", 14),
        (this_or_next|is_between, ":var1", "itm_gob_feather", "itm_pygmies_fur"),
        (is_between, ":var1", "itm_skink_hand", "itm_mummy_body"),
      (else_try),
        (eq, ":var2", 15),
        (is_between, ":var1", "itm_skaven_head", "itm_gor_rok_axe"),
      (else_try),
        (eq, ":var2", 7),
        (is_between, ":var1", "itm_ogre_head", "itm_marauder_body"),
      (else_try),
        (eq, ":var2", 11),
        (is_between, ":var1", "itm_halfling_feet", "itm_skaven_head"),
      (else_try),
        (eq, ":var2", 13),
        (is_between, ":var1", "itm_ungor_head", "itm_gob_feather"),
      (else_try),
        (troop_get_inventory_slot_modifier, ":var3", "$restricted_headarmor", ek_head),
        (troop_set_inventory_slot, "$restricted_headarmor", ek_head, -1),
        (store_free_inventory_capacity, ":var4", "trp_player"),
        (try_begin),
          (ge, ":var4", 1),
          (troop_add_item, "trp_player", ":var1", ":var3"),
        (else_try),
          (display_message, "@No inventory space! Restricted head armor destroyed."),
        (try_end),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_footarmor", -1),
      (troop_get_inventory_slot, ":var1", "$restricted_footarmor", ek_foot),
      (troop_get_type, ":var2", "$restricted_footarmor"),
      (is_between, ":var1", "itm_pilgrim_disguise", "itm_gor_rok_axe"),
      (try_begin),
        (this_or_next|eq, ":var2", 0),
        (this_or_next|eq, ":var2", 5),
        (this_or_next|eq, ":var2", 9),
        (this_or_next|eq, ":var2", 18),
        (this_or_next|eq, ":var2", 17),
        (eq, ":var2", 1),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 6),
        (is_between, ":var1", "itm_chaoswarrior_armor", "itm_ungor_head"),
      (else_try),
        (this_or_next|eq, ":var2", 8),
        (eq, ":var2", 16),
        (this_or_next|is_between, ":var1", "itm_brigandine_felix", "itm_saurus_head"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 2),
        (this_or_next|is_between, ":var1", "itm_mummy_body", "itm_dwarf_tunic"),
        (is_between, ":var1", "itm_pilgrim_disguise", "itm_brigandine_felix"),
      (else_try),
        (eq, ":var2", 10),
        (is_between, ":var1", "itm_saurus_head", "itm_skink_hand"),
      (else_try),
        (this_or_next|eq, ":var2", 3),
        (eq, ":var2", 4),
        (is_between, ":var1", "itm_dwarf_tunic", "itm_orc_armour"),
      (else_try),
        (eq, ":var2", 12),
        (is_between, ":var1", "itm_orc_armour", "itm_ogre_head"),
      (else_try),
        (eq, ":var2", 14),
        (is_between, ":var1", "itm_gob_feather", "itm_pygmies_fur"),
      (else_try),
        (eq, ":var2", 20),
        (is_between, ":var1", "itm_skink_hand", "itm_mummy_body"),
      (else_try),
        (eq, ":var2", 15),
        (is_between, ":var1", "itm_skaven_head", "itm_gor_rok_axe"),
      (else_try),
        (eq, ":var2", 7),
        (is_between, ":var1", "itm_ogre_head", "itm_marauder_body"),
      (else_try),
        (eq, ":var2", 11),
        (is_between, ":var1", "itm_halfling_feet", "itm_skaven_head"),
      (else_try),
        (eq, ":var2", 13),
        (is_between, ":var1", "itm_ungor_head", "itm_gob_feather"),
      (else_try),
        (troop_get_inventory_slot_modifier, ":var3", "$restricted_footarmor", ek_foot),
        (troop_set_inventory_slot, "$restricted_footarmor", ek_foot, -1),
        (store_free_inventory_capacity, ":var4", "trp_player"),
        (try_begin),
          (ge, ":var4", 1),
          (troop_add_item, "trp_player", ":var1", ":var3"),
        (else_try),
          (display_message, "@No inventory space! Restricted foot armor destroyed."),
        (try_end),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_slot1", -1),
      (troop_slot_eq, "trp_player", 257, 1),
      (troop_get_inventory_slot, ":var5", "$restricted_slot1", ek_item_0),
      (this_or_next|is_between, ":var5", "itm_musket", "itm_warplock_pistol"),
      (this_or_next|is_between, ":var5", "itm_cartridges", "itm_small_bolts"),
      (troop_get_inventory_slot_modifier, ":var3", "$restricted_slot1", ek_item_0),
      (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
      (troop_set_inventory_slot, "$restricted_slot1", ek_item_0, -1),
      (store_free_inventory_capacity, ":var4", "trp_player"),
      (try_begin),
        (ge, ":var4", 1),
        (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
        (troop_add_item, "trp_player", ":var5", ":var3"),
      (else_try),
        (display_message, "@No inventory space! Restricted item destroyed."),
      (try_end),
      (store_current_hours, ":var6"),
      (try_begin),
        (gt, ":var6", 1),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_slot2", -1),
      (troop_slot_eq, "trp_player", 257, 1),
      (troop_get_inventory_slot, ":var5", "$restricted_slot2", ek_item_1),
      (this_or_next|is_between, ":var5", "itm_musket", "itm_warplock_pistol"),
      (this_or_next|is_between, ":var5", "itm_cartridges", "itm_small_bolts"),
      (is_between, ":var5", "itm_warplock_pistol", "itm_pilgrim_disguise"),
      (troop_get_inventory_slot_modifier, ":var3", "$restricted_slot2", ek_item_1),
      (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
      (troop_set_inventory_slot, "$restricted_slot2", ek_item_1, -1),
      (store_free_inventory_capacity, ":var4", "trp_player"),
      (try_begin),
        (ge, ":var4", 1),
        (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
        (troop_add_item, "trp_player", ":var5", ":var3"),
      (else_try),
        (display_message, "@No inventory space! Restricted item destroyed."),
      (try_end),
      (store_current_hours, ":var6"),
      (try_begin),
        (gt, ":var6", 1),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_slot3", -1),
      (troop_slot_eq, "trp_player", 257, 1),
      (troop_get_inventory_slot, ":var5", "$restricted_slot3", ek_item_2),
      (this_or_next|is_between, ":var5", "itm_musket", "itm_warplock_pistol"),
      (this_or_next|is_between, ":var5", "itm_cartridges", "itm_small_bolts"),
      (is_between, ":var5", "itm_warplock_pistol", "itm_pilgrim_disguise"),
      (troop_get_inventory_slot_modifier, ":var3", "$restricted_slot3", ek_item_2),
      (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
      (troop_set_inventory_slot, "$restricted_slot3", ek_item_2, -1),
      (store_free_inventory_capacity, ":var4", "trp_player"),
      (try_begin),
        (ge, ":var4", 1),
        (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
        (troop_add_item, "trp_player", ":var5", ":var3"),
      (else_try),
        (display_message, "@No inventory space! Restricted item destroyed."),
      (try_end),
      (store_current_hours, ":var6"),
      (try_begin),
        (gt, ":var6", 1),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (gt, "$restricted_slot4", -1),
      (troop_slot_eq, "trp_player", 257, 1),
      (troop_get_inventory_slot, ":var5", "$restricted_slot4", ek_item_3),
      (this_or_next|is_between, ":var5", "itm_musket", "itm_warplock_pistol"),
      (this_or_next|is_between, ":var5", "itm_cartridges", "itm_small_bolts"),
      (is_between, ":var5", "itm_warplock_pistol", "itm_pilgrim_disguise"),
      (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
      (troop_get_inventory_slot_modifier, ":var3", "$restricted_slot4", ek_item_3),
      (troop_set_inventory_slot, "$restricted_slot4", ek_item_3, -1),
      (store_free_inventory_capacity, ":var4", "trp_player"),
      (try_begin),
        (ge, ":var4", 1),
        (neg|is_between, ":var5", "itm_player_missile_light", "itm_phas_protection_ammo"),
        (troop_add_item, "trp_player", ":var5", ":var3"),
      (else_try),
        (display_message, "@No inventory space! Restricted item destroyed."),
      (try_end),
      (store_current_hours, ":var6"),
      (try_begin),
        (gt, ":var6", 1),
        (assign, ":var0", 1),
      (try_end),
    (try_end),
    (try_begin),
      (eq, ":var0", 1),
      (dialog_box, "@An equipped restricted item has been moved to your inventory.", "@Restricted Item"),
    (try_end),
    (assign, "$restricted_bodyarmor", -1),
    (assign, "$restricted_handarmor", -1),
    (assign, "$restricted_headarmor", -1),
    (assign, "$restricted_footarmor", -1),
    (assign, "$restricted_slot1", -1),
    (assign, "$restricted_slot2", -1),
    (assign, "$restricted_slot3", -1),
    (assign, "$restricted_slot4", -1),
  ]),

  (1,
  [
    (set_show_messages, 1),
    (try_begin),
      (eq, "$training_ground_position_changed", 0),
      (assign, "$training_ground_position_changed", 1),
      (set_fixed_point_multiplier, 100),
      (position_set_x, pos0, 202),
      (position_set_y, pos0, 160),
      (party_set_position, "p_training_ground", pos0),
    (try_end),
    (gt, "$auto_besiege_town", 0),
    (gt, "$g_player_besiege_town", 0),
    (ge, "$g_siege_method", 1),
    (store_current_hours, ":var0"),
    (eq, "$g_siege_force_wait", 0),
    (ge, ":var0", "$g_siege_method_finish_hours"),
    (neg|is_currently_night),
    (try_begin),
      (assign, ":var1", reg1),
      (call_script, "script_get_max_skill_of_player_party", "skl_engineer"),
      (assign, ":var2", reg1),
      (assign, reg1, ":var1"),
      (neq, ":var2", "trp_player"),
      (store_mul, ":var3", "$g_siege_method", 4),
      (call_script, "script_change_troop_renown", ":var2", ":var3"),
    (try_end),
    (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
  ]),

  (0,
  [
    (try_begin),
      (eq, "$bug_fix_version", 0),
      (disable_party, "p_test_scene"),
      (party_set_slot, "p_town_1", 27, 0),
      (faction_set_note_available, "fac_player_faction", 0),
      (faction_set_note_available, "fac_no_faction", 0),
      (try_begin),
        (neg|check_quest_active, "qst_kidnapped_girl"),
        (party_remove_members, "p_main_party", "trp_kidnapped_girl", 1),
      (try_end),
      (try_for_range, ":var0", "trp_knight_1_1", "trp_kingdom_1_pretender"),
        (try_begin),
          (troop_slot_eq, ":var0", 2, 0),
          (store_faction_of_troop, ":var1", ":var0"),
          (is_between, ":var1", "fac_kingdom_1", "fac_kingdoms_end"),
          (troop_set_slot, ":var0", 2, 2),
        (try_end),
      (try_end),
      (call_script, "script_initialize_item_info"),
      (assign, "$bug_fix_version", 1),
    (try_end),
    (eq, "$g_player_is_captive", 1),
    (gt, "$capturer_party", 0),
    (party_is_active, "$capturer_party"),
    (party_relocate_near_party, "p_main_party", "$capturer_party", 0),
  ]),

  (0,
  [
    (try_begin),
      (gt, "$teleported", 0),
      (party_relocate_near_party, "p_main_party", "$teleported", 2),
      (assign, "$teleported", 0),
    (else_try),
      (store_current_hours, ":var0"),
      (assign, ":var1", 0),
      (try_begin),
        (neq, "$g_check_autos_at_hour", 0),
        (ge, ":var0", "$g_check_autos_at_hour"),
        (assign, ":var1", 1),
        (assign, "$g_check_autos_at_hour", 0),
      (try_end),
      (this_or_next|eq, ":var1", 1),
      (map_free),
      (try_begin),
        (ge, "$auto_menu", 1),
        (jump_to_menu, "$auto_menu"),
        (assign, "$auto_menu", -1),
      (else_try),
        (ge, "$auto_enter_town", 1),
        (start_encounter, "$auto_enter_town"),
      (else_try),
        (ge, "$auto_besiege_town", 1),
        (start_encounter, "$auto_besiege_town"),
      (else_try),
        (ge, "$g_camp_mode", 1),
        (assign, "$g_camp_mode", 0),
        (assign, "$g_infinite_camping", 0),
        (assign, "$g_player_icon_state", 0),
        (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
        (display_message, "@Breaking camp..."),
      (else_try),
        (gt, "$sneaked_into_town", 0),
        (eq, "$g_dplmc_player_disguise", 1),
        (display_message, "@Removing disguise...", 0xF0DD33),
        (try_begin),
          (eq, "$g_dplmc_player_disguise", 1),
          (set_show_messages, 0),
          (try_for_range, ":var2", 0, 10),
            (troop_get_inventory_slot, ":var3", "trp_player", ":var2"),
            (neq, ":var3", -1),
            (troop_get_inventory_slot_modifier, ":var4", "trp_player", ":var2"),
            (troop_add_item, "trp_random_town_sequence", ":var3", ":var4"),
          (try_end),
          (call_script, "script_move_inventory_and_gold", "trp_player", "trp_random_town_sequence", 0),
          (call_script, "script_dplmc_copy_inventory", "trp_random_town_sequence", "trp_player"),
          (call_script, "script_troop_transfer_gold", "trp_random_town_sequence", "trp_player", 0),
          (set_show_messages, 1),
        (try_end),
        (assign, "$sneaked_into_town", 0),
      (try_end),
    (try_end),
  ]),

  (0,
  [
    (troop_slot_ge, "trp_notification_menu_types", 0, 1),
    (troop_get_slot, ":var0", "trp_notification_menu_types", 0),
    (troop_get_slot, "$g_notification_menu_var1", "trp_notification_menu_var1", 0),
    (troop_get_slot, "$g_notification_menu_var2", "trp_notification_menu_var2", 0),
    (jump_to_menu, ":var0"),
    (assign, ":var1", 2),
    (try_for_range, ":var2", 1, ":var1"),
      (try_begin),
        (troop_slot_ge, "trp_notification_menu_types", ":var2", 1),
        (val_add, ":var1", 1),
      (try_end),
      (store_sub, ":var3", ":var2", 1),
      (troop_get_slot, ":var4", "trp_notification_menu_types", ":var2"),
      (troop_set_slot, "trp_notification_menu_types", ":var3", ":var4"),
      (troop_get_slot, ":var4", "trp_notification_menu_var1", ":var2"),
      (troop_set_slot, "trp_notification_menu_var1", ":var3", ":var4"),
      (troop_get_slot, ":var4", "trp_notification_menu_var2", ":var2"),
      (troop_set_slot, "trp_notification_menu_var2", ":var3", ":var4"),
    (try_end),
  ]),

  (1,
  [
    (map_free),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 7),
      (gt, ":var1", "trp_town_walker_1"),
      (troop_get_slot, ":var2", ":var1", 2),
      (eq, ":var2", 14),
      (party_set_slot, ":var0", 7, -1),
      (assign, reg4, ":var0"),
      (display_message, "@center {reg4}->lord exiled"),
    (try_end),
    (try_for_range, ":var3", "p_village_1", "p_salt_mine"),
      (party_get_slot, ":var4", ":var3", 120),
      (try_begin),
        (this_or_next|lt, ":var4", "p_town_1"),
        (ge, ":var4", "p_village_1"),
        (assign, reg4, ":var3"),
        (display_message, "@village {reg4}->no bound loc"),
      (try_end),
    (try_end),
    (call_script, "script_update_all_notes"),
    (call_script, "script_music_set_situation_with_culture", 65536),
  ]),

  (0,
  [
    (try_begin),
      (eq, "$caravan_escort_state", 1),
      (party_is_active, "$caravan_escort_party_id"),
      (store_distance_to_party_from_party, ":var0", "$caravan_escort_destination_town", "$caravan_escort_party_id"),
      (lt, ":var0", 2),
      (store_distance_to_party_from_party, ":var1", "p_main_party", "$caravan_escort_party_id"),
      (lt, ":var1", 5),
      (assign, "$talk_context", 2),
      (assign, "$g_encountered_party", "$caravan_escort_party_id"),
      (party_stack_get_troop_id, ":var2", "$caravan_escort_party_id", 0),
      (party_stack_get_troop_dna, ":var3", "$caravan_escort_party_id", 0),
      (start_map_conversation, ":var2", ":var3"),
    (try_end),
    (try_begin),
      (gt, "$g_reset_mission_participation", 1),
      (try_for_range, ":var4", "trp_npc1", "trp_heroes_end"),
        (troop_set_slot, ":var4", 149, 0),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "fac_kingdom_1", "fac_kingdoms_end"),
      (faction_get_slot, ":var1", ":var0", 99),
      (store_sub, ":var2", 140, "$player_right_to_rule"),
      (val_div, ":var2", 14),
      (val_max, ":var2", 1),
      (store_div, ":var3", ":var1", ":var2"),
      (val_sub, ":var1", ":var3"),
      (faction_set_slot, ":var0", 99, ":var1"),
    (try_end),
    (try_for_range, ":var4", "p_town_1", "p_salt_mine"),
      (try_begin),
        (party_slot_eq, ":var4", 585, 0),
        (party_get_slot, ":var5", "$current_town", 584),
        (try_begin),
          (gt, ":var5", 0),
          (val_add, ":var5", 168),
          (lt, ":var5", "$g_current_hours"),
          (party_set_slot, ":var4", 585, -1),
        (else_try),
          (party_set_slot, ":var4", 585, -1),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (4,
  [
    (try_for_range, ":var0", "trp_knight_1_1_wife", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 6),
      (troop_get_slot, ":var1", ":var0", 10),
      (try_begin),
        (gt, ":var1", 0),
        (neg|party_is_active, ":var1"),
        (assign, ":var1", -1),
      (try_end),
      (lt, ":var1", 1),
      (neg|troop_slot_ge, ":var0", 8, 0),
      (assign, ":var2", reg1),
      (call_script, "script_get_kingdom_lady_social_determinants", ":var0"),
      (assign, ":var3", reg1),
      (assign, reg1, ":var2"),
      (troop_set_slot, ":var0", 12, ":var3"),
    (try_end),
  ]),

  (7,
  [
    (eq, "$cheat_mode", 1),
    (assign, ":var0", 0),
    (try_for_parties, ":var1"),
      (gt, ":var1", "p_spawn_points_end"),
      (party_stack_get_troop_id, ":var2", ":var1", 0),
      (try_begin),
        (party_get_num_companions, ":var3", ":var1"),
        (lt, ":var3", 1),
        (neq, ":var1", "p_main_party"),
        (party_clear, ":var1"),
      (try_end),
      (party_get_template_id, ":var4", ":var1"),
      (try_begin),
        (eq, ":var4", "pt_cattle_herd"),
        (party_get_num_companions, ":var5", ":var1"),
        (party_count_members_of_type, ":var6", ":var1", "trp_cattle"),
        (neq, ":var5", ":var6"),
        (party_clear, ":var1"),
      (try_end),
      (party_get_num_companions, ":var3", ":var1"),
      (gt, ":var3", 0),
      (neq, ":var1", "p_main_party"),
      (party_stack_get_troop_id, ":var2", ":var1", 0),
      (is_between, ":var2", "trp_npc1", "trp_heroes_end"),
      (this_or_next|troop_slot_eq, ":var2", 2, 2),
      (is_between, ":var2", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_get_slot, ":var7", ":var2", 10),
      (neq, ":var1", ":var7"),
      (assign, reg4, ":var1"),
      (assign, reg5, ":var7"),
      (str_store_troop_name, s3, ":var2"),
      (display_message, "@{!}{s3} commander of party #{reg4} which is not his troop leaded party {reg5}"),
      (str_store_string, s65, "str_party_with_commander_mismatch__check_log_for_details_"),
      (try_begin),
        (eq, ":var0", 0),
        (assign, ":var0", 1),
      (try_end),
      (troop_set_slot, ":var2", 10, ":var1"),
    (try_end),
  ]),

  (24,
  [
    (try_begin),
      (neg|check_quest_active, "qst_visit_lady"),
      (neg|troop_slot_ge, "trp_player", 8, 1),
      (neg|troop_slot_ge, "trp_player", 30, "trp_npc1"),
      (assign, ":var0", -1),
      (assign, ":var1", 120),
      (try_for_range, ":var2", "trp_knight_1_1_wife", "trp_heroes_end"),
        (neg|troop_slot_ge, ":var2", 2, 11),
        (neg|troop_slot_eq, "trp_player", 34, ":var2"),
        (troop_slot_ge, ":var2", 5, 2),
        (neg|troop_slot_eq, ":var2", 5, 4),
        (troop_slot_eq, ":var2", 37, 0),
        (troop_slot_eq, ":var2", 30, -1),
        (troop_get_slot, ":var3", ":var2", 12),
        (is_between, ":var3", "p_town_1", "p_village_1"),
        (assign, ":var4", reg0),
        (call_script, "script_troop_get_relation_with_troop", "trp_player", ":var2"),
        (assign, ":var5", reg0),
        (assign, reg0, ":var4"),
        (gt, ":var5", 1),
        (store_current_hours, ":var6"),
        (troop_get_slot, ":var7", ":var2", 4),
        (val_sub, ":var6", ":var7"),
        (gt, ":var6", ":var1"),
        (assign, ":var1", ":var6"),
        (assign, ":var0", ":var2"),
        (assign, ":var8", ":var3"),
      (try_end),
      (try_begin),
        (gt, ":var0", 0),
        (call_script, "script_add_notification_menu", "mnu_notification_lady_requests_visit", ":var0", ":var8"),
      (try_end),
    (try_end),
  ]),

  (1,
  [
    (ge, "$g_player_raiding_village", 1),
    (try_begin),
      (neq, "$g_player_is_captive", 0),
      (assign, "$g_player_raiding_village", 0),
    (else_try),
      (this_or_next|party_slot_eq, "$g_player_raiding_village", 35, 2),
      (party_slot_eq, "$g_player_raiding_village", 35, 4),
      (start_encounter, "$g_player_raiding_village"),
      (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
      (assign, "$g_player_raiding_village", 0),
      (assign, "$g_player_raid_complete", 1),
    (else_try),
      (party_slot_eq, "$g_player_raiding_village", 35, 1),
      (rest_for_hours_interactive, 3, "$g_warsword_wait_multiplier", 1),
    (else_try),
      (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
      (assign, "$g_player_raiding_village", 0),
      (assign, "$g_player_raid_complete", 0),
    (try_end),
  ]),

  (0.25,
  [
    (ge, "$g_player_raiding_village", 1),
    (store_distance_to_party_from_party, ":var0", "$g_player_raiding_village", "p_main_party"),
    (try_begin),
      (gt, ":var0", 4),
      (str_store_party_name_link, s1, "$g_player_raiding_village"),
      (display_message, "@You have broken off your raid of {s1}."),
      (call_script, "script_village_set_state", "$current_town", 0),
      (party_set_slot, "$current_town", 34, -1),
      (assign, "$g_player_raiding_village", 0),
      (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
    (else_try),
      (ge, ":var0", 2),
      (map_free),
      (jump_to_menu, "mnu_village_loot_continue"),
    (try_end),
  ]),

  (169,
  [
    (store_current_hours, "$g_next_pay_time"),
    (val_add, "$g_next_pay_time", 169),
    (assign, "$g_apply_budget_report_to_gold", 1),
    (store_current_hours, ":var0"),
    (val_add, ":var0", 169),
    (assign, "$budget_next_payday", ":var0"),
    (try_begin),
      (eq, "$g_infinite_camping", 0),
      (start_presentation, "prsnt_budget_report"),
      (try_begin),
        (gt, "$g_player_debt_to_party_members", 5000),
        (call_script, "script_add_notification_menu", "mnu_dplmc_deserters", 20, 0),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (le, "$auto_menu", 0),
    (gt, "$players_kingdom", 0),
    (neq, "$players_kingdom", "fac_player_supporters_faction"),
    (eq, "$player_has_homage", 0),
    (troop_get_slot, ":var0", "trp_player", 30),
    (assign, ":var1", 0),
    (try_begin),
      (is_between, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (store_faction_of_troop, ":var2", ":var0"),
      (eq, ":var2", "$players_kingdom"),
      (assign, ":var1", 1),
    (try_end),
    (eq, ":var1", 0),
    (store_current_day, ":var3"),
    (gt, ":var3", "$mercenary_service_next_renew_day"),
    (jump_to_menu, "mnu_oath_fulfilled"),
  ]),

  (71,
  [
    (assign, "$lady_flirtation_location", 0),
    (store_random_in_range, ":var0", 1, 9),
    (assign, "$barkeep_prisoner_roll", ":var0"),
  ]),

  (4,
  [
    (assign, "$g_time_to_spare", 1),
    (try_begin),
      (troop_slot_ge, "trp_player", 30, "trp_npc1"),
      (assign, "$g_player_banner_granted", 1),
    (try_end),
  ]),

  (25,
  [
    (eq, "$g_player_banner_granted", 1),
    (troop_slot_eq, "trp_player", 13, 0),
    (le, "$auto_menu", 0),
    (start_presentation, "prsnt_banner_selection"),
  ]),

  (23,
  [
    (assign, ":var0", reg0),
    (call_script, "script_get_player_party_morale_values"),
    (assign, ":var1", reg0),
    (assign, reg0, ":var0"),
    (party_get_morale, ":var2", "p_main_party"),
    (store_sub, ":var3", ":var1", ":var2"),
    (store_div, ":var4", ":var3", 5),
    (store_mul, ":var5", ":var4", 5),
    (try_begin),
      (neq, ":var5", ":var3"),
      (try_begin),
        (gt, ":var3", 0),
        (val_add, ":var4", 1),
      (else_try),
        (val_sub, ":var4", 1),
      (try_end),
    (try_end),
    (val_add, ":var2", ":var4"),
    (party_set_morale, "p_main_party", ":var2"),
  ]),

  (167,
  [
    (assign, ":var0", "$g_talk_troop"),
    (assign, "$g_talk_troop", "trp_ransom_broker_1"),
    (try_for_range, ":var1", "p_town_1", "p_salt_mine"),
      (party_get_num_prisoner_stacks, ":var2", ":var1"),
      (try_for_range_backwards, ":var3", 0, ":var2"),
        (party_prisoner_stack_get_troop_id, ":var4", ":var1", ":var3"),
        (neg|troop_is_hero, ":var4"),
        (party_prisoner_stack_get_size, ":var5", ":var1", ":var3"),
        (store_random_in_range, ":var6", 0, 25),
        (val_mul, ":var5", ":var6"),
        (val_div, ":var5", 100),
        (party_remove_prisoners, ":var1", ":var4", ":var5"),
        (try_begin),
          (ge, "$g_dplmc_gold_changes", 2),
          (ge, ":var1", 1),
          (this_or_next|party_slot_eq, ":var1", 0, 3),
          (party_slot_eq, ":var1", 0, 2),
          (party_slot_ge, ":var1", 7, 1),
          (party_get_slot, ":var7", ":var1", 49),
          (lt, ":var7", 6000),
          (assign, ":var8", reg0),
          (call_script, "script_game_get_prisoner_price", ":var4"),
          (store_mul, ":var9", ":var5", reg0),
          (assign, reg0, ":var8"),
          (val_div, ":var9", 10),
          (try_begin),
            (party_slot_ge, ":var1", 95, "trp_ransom_broker_1"),
            (val_mul, ":var9", 5),
            (val_div, ":var9", 2),
          (try_end),
          (val_add, ":var7", ":var9"),
          (party_set_slot, ":var1", 49, ":var7"),
        (try_end),
      (try_end),
    (try_end),
    (assign, "$g_talk_troop", ":var0"),
  ]),

  (167,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (this_or_next|is_between, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 21),
      (lt, ":var1", 100000),
      (store_faction_of_troop, ":var2", ":var0"),
      (faction_get_slot, ":var3", ":var2", 242),
      (val_add, ":var3", 205),
      (val_mul, ":var1", ":var3"),
      (val_div, ":var1", 200),
      (troop_set_slot, ":var0", 21, ":var1"),
      (call_script, "script_calculate_hero_weekly_net_income_and_add_to_wealth", ":var0"),
    (try_end),
    (store_current_hours, ":var4"),
    (val_sub, ":var4", 336),
    (try_for_range, ":var5", "p_town_1", "p_village_1"),
      (neg|party_slot_eq, ":var5", 7, "trp_player"),
      (neg|party_slot_eq, ":var5", 7, 0),
      (this_or_next|party_slot_ge, ":var5", 583, ":var4"),
      (party_slot_ge, ":var5", 7, 1),
      (this_or_next|ge, "$g_dplmc_gold_changes", 1),
      (party_slot_ge, ":var5", 7, 1),
      (party_get_slot, ":var6", ":var5", 49),
      (party_get_slot, ":var7", ":var5", 50),
      (store_mul, ":var8", ":var7", 15),
      (val_add, ":var8", 700),
      (try_begin),
        (party_slot_eq, ":var5", 0, 3),
        (val_mul, ":var8", 3),
        (val_div, ":var8", 2),
      (try_end),
      (val_add, ":var6", ":var8"),
      (assign, ":var9", reg0),
      (call_script, "script_calculate_weekly_party_wage", ":var5"),
      (val_sub, ":var6", reg0),
      (try_begin),
        (lt, ":var6", 0),
        (ge, "$g_dplmc_gold_changes", 1),
        (assign, ":var10", reg0),
        (store_party_size_wo_prisoners, ":var11", ":var5"),
        (call_script, "script_party_get_ideal_size", ":var5"),
        (val_mul, reg0, 5),
        (val_div, reg0, 4),
        (ge, ":var11", reg0),
        (store_sub, ":var12", 0, ":var6"),
        (val_mul, ":var12", 100),
        (val_div, ":var12", ":var10"),
        (val_div, ":var12", 5),
        (call_script, "script_party_inflict_attrition", ":var5", ":var12", 1),
      (try_end),
      (assign, reg0, ":var9"),
      (party_slot_ge, ":var5", 7, 1),
      (val_max, ":var6", 0),
      (party_set_slot, ":var5", 49, ":var6"),
    (try_end),
  ]),

  (23,
  [
    (options_get_campaign_ai, ":var0"),
    (try_for_range, ":var1", "trp_npc1", "trp_heroes_end"),
      (troop_slot_eq, ":var1", 2, 2),
      (troop_get_slot, ":var2", ":var1", 10),
      (ge, ":var2", 1),
      (party_is_active, ":var2"),
      (party_get_attached_to, ":var3", ":var2"),
      (is_between, ":var3", "p_town_1", "p_salt_mine"),
      (party_slot_eq, ":var3", 54, -1),
      (store_faction_of_party, ":var4", ":var2"),
      (try_begin),
        (this_or_next|eq, ":var4", "fac_player_supporters_faction"),
        (eq, ":var4", "$players_kingdom"),
        (assign, ":var5", 1),
        (store_random_in_range, ":var6", 0, 2),
        (val_add, ":var5", ":var6"),
      (else_try),
        (try_begin),
          (eq, ":var0", 0),
          (assign, ":var5", 2),
        (else_try),
          (eq, ":var0", 1),
          (assign, ":var5", 1),
          (store_random_in_range, ":var6", 0, 2),
          (val_add, ":var5", ":var6"),
        (else_try),
          (eq, ":var0", 2),
          (assign, ":var5", 1),
        (try_end),
      (try_end),
      (try_begin),
        (faction_slot_eq, ":var4", 8, ":var1"),
        (val_add, ":var5", 1),
      (try_end),
      (try_for_range, ":var7", 0, ":var5"),
        (call_script, "script_hire_men_to_kingdom_hero_party", ":var1"),
      (try_end),
    (try_end),
    (try_for_range, ":var8", "p_town_1", "p_village_1"),
      (party_slot_ge, ":var8", 7, "trp_npc1"),
      (party_slot_eq, ":var8", 54, -1),
      (store_faction_of_party, ":var9", ":var8"),
      (try_begin),
        (gt, ":var9", "fac_commoners"),
        (this_or_next|eq, ":var9", "fac_player_faction"),
        (this_or_next|eq, ":var9", "fac_player_supporters_faction"),
        (eq, ":var9", "$players_kingdom"),
        (neg|is_between, ":var9", "fac_kingdom_1", "fac_kingdoms_end"),
        (is_between, "$g_player_culture", "fac_kingdom_1", "fac_kingdoms_end"),
        (assign, ":var9", "$g_player_culture"),
      (try_end),
      (try_begin),
        (this_or_next|eq, ":var9", "fac_player_supporters_faction"),
        (eq, ":var9", "$players_kingdom"),
        (assign, ":var10", 450),
        (assign, ":var5", 1),
      (else_try),
        (assign, ":var10", 450),
        (try_begin),
          (eq, ":var0", 0),
          (assign, ":var10", 300),
          (store_random_in_range, ":var5", 0, 2),
          (val_add, ":var5", 1),
        (else_try),
          (eq, ":var0", 1),
          (assign, ":var10", 450),
          (assign, ":var5", 1),
        (else_try),
          (eq, ":var0", 2),
          (assign, ":var10", 600),
          (store_random_in_range, ":var5", 0, 2),
        (try_end),
      (try_end),
      (party_get_slot, ":var11", ":var8", 49),
      (faction_get_slot, ":var12", ":var9", 75),
      (faction_get_slot, ":var13", ":var9", 76),
      (faction_get_slot, ":var14", ":var9", 77),
      (try_for_range, ":var15", "p_village_1", "p_salt_mine"),
        (gt, ":var5", 0),
        (party_slot_eq, ":var15", 35, 0),
        (party_slot_eq, ":var15", 120, ":var8"),
        (store_div, ":var16", ":var11", 2),
        (gt, ":var16", ":var10"),
        (party_get_slot, ":var17", ":var15", 60),
        (try_begin),
          (this_or_next|le, ":var17", 0),
          (neg|party_is_active, ":var17"),
          (assign, ":var18", reg0),
          (spawn_around_party, ":var15", "pt_center_reinforcements"),
          (assign, ":var17", reg0),
          (assign, reg0, ":var18"),
        (try_end),
        (store_random_in_range, ":var19", 0, 100),
        (try_begin),
          (is_between, ":var9", "fac_player_supporters_faction", "fac_kingdoms_end"),
          (faction_get_slot, ":var20", ":var9", 244),
          (val_clamp, ":var20", -3, 4),
          (val_add, ":var19", ":var20"),
        (try_end),
        (try_begin),
          (lt, ":var19", 65),
          (party_add_template, ":var17", ":var12"),
        (else_try),
          (lt, ":var19", 100),
          (party_add_template, ":var17", ":var13"),
        (else_try),
          (party_add_template, ":var17", ":var14"),
        (try_end),
        (try_begin),
          (neg|party_slot_eq, ":var15", 60, ":var17"),
          (party_set_faction, ":var17", ":var9"),
          (party_set_slot, ":var17", 0, 6),
          (party_set_slot, ":var17", 5, ":var8"),
          (party_set_slot, ":var17", 123, ":var15"),
          (party_set_slot, ":var15", 60, ":var17"),
          (str_store_party_name, s5, ":var15"),
          (party_set_name, ":var17", "str_s5_reinf"),
          (party_set_ai_behavior, ":var17", ai_bhvr_travel_to_party),
          (party_set_ai_object, ":var17", ":var8"),
          (party_set_flags, ":var17", pf_default_behavior, 1),
        (try_end),
        (val_sub, ":var11", ":var10"),
        (val_sub, ":var5", 1),
      (try_end),
      (try_for_range, ":var7", 0, ":var5"),
        (store_div, ":var16", ":var11", 2),
        (gt, ":var16", ":var10"),
        (call_script, "script_cf_reinforce_party", ":var8"),
        (val_sub, ":var11", ":var10"),
        (party_set_slot, ":var8", 49, ":var11"),
      (try_end),
      (party_set_slot, ":var8", 49, ":var11"),
    (try_end),
    (try_for_range, ":var8", "p_town_1", "p_salt_mine"),
      (store_random_in_range, ":var21", 0, 30),
      (le, ":var21", 10),
      (assign, ":var18", reg0),
      (call_script, "script_get_center_ideal_prosperity", ":var8"),
      (assign, ":var22", reg0),
      (assign, reg0, ":var18"),
      (party_get_slot, ":var23", ":var8", 50),
      (try_begin),
        (eq, ":var21", 0),
        (try_begin),
          (store_random_in_range, ":var21", 0, 2),
          (try_begin),
            (eq, ":var21", 0),
            (neg|is_between, ":var8", "p_castle_1", "p_village_1"),
            (call_script, "script_change_center_prosperity", ":var8", -10),
            (val_add, "$newglob_total_prosperity_from_convergence", -10),
          (else_try),
            (call_script, "script_change_center_prosperity", ":var8", 10),
            (val_add, "$newglob_total_prosperity_from_convergence", 10),
          (try_end),
        (try_end),
      (else_try),
        (gt, ":var23", ":var22"),
        (call_script, "script_change_center_prosperity", ":var8", -1),
        (val_add, "$newglob_total_prosperity_from_convergence", -1),
      (else_try),
        (lt, ":var23", ":var22"),
        (call_script, "script_change_center_prosperity", ":var8", 1),
        (val_add, "$newglob_total_prosperity_from_convergence", 1),
      (try_end),
    (try_end),
  ]),

  (6,
  [
    (call_script, "script_pcamp_ransom_prisoners"),
    (store_current_day, ":var0"),
    (try_begin),
      (neq, ":var0", "$g_last_half_payment_check_day"),
      (assign, "$g_last_half_payment_check_day", ":var0"),
      (try_begin),
        (eq, "$g_half_payment_checkpoint", 1),
        (val_add, "$g_cur_week_half_daily_wage_payments", 1),
      (try_end),
      (assign, "$g_half_payment_checkpoint", 1),
    (try_end),
    (assign, ":var1", 0),
    (try_begin),
      (neg|map_free),
      (is_between, "$g_last_rest_center", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, "$g_last_rest_center", 130, 1),
      (is_between, "$g_last_rest_center", "p_town_1", "p_village_1"),
      (assign, ":var1", 1),
    (try_end),
    (eq, ":var1", 0),
    (assign, "$g_half_payment_checkpoint", 0),
  ]),

  (95,
  [
    (call_script, "script_randomly_start_war_peace_new", 1),
    (try_begin),
      (store_random_in_range, ":var0", "p_village_1", "p_salt_mine"),
      (store_random_in_range, ":var1", "p_village_1", "p_salt_mine"),
      (store_faction_of_party, ":var2", ":var0"),
      (store_faction_of_party, ":var3", ":var1"),
      (neq, ":var0", ":var1"),
      (neq, ":var2", ":var3"),
      (assign, ":var4", reg0),
      (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":var3", ":var2"),
      (assign, ":var5", reg0),
      (assign, reg0, ":var4"),
      (eq, ":var5", 0),
      (assign, ":var6", 0),
      (try_begin),
        (this_or_next|eq, ":var2", "$players_kingdom"),
        (eq, ":var3", "$players_kingdom"),
        (assign, ":var6", 1),
      (try_end),
      (eq, ":var6", 1),
      (try_begin),
        (party_slot_eq, ":var0", 61, ":var3"),
        (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var0", -1),
      (else_try),
        (party_slot_eq, ":var0", 62, ":var3"),
        (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var0", -1),
      (else_try),
        (set_fixed_point_multiplier, 1),
        (store_distance_to_party_from_party, ":var7", ":var0", ":var1"),
        (lt, ":var7", 25),
        (call_script, "script_add_notification_menu", "mnu_notification_border_incident", ":var0", ":var1"),
      (try_end),
    (try_end),
    (try_for_range, ":var8", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var8", 21, 0),
      (try_for_range, ":var9", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neq, ":var8", ":var9"),
        (faction_slot_eq, ":var9", 21, 0),
        (assign, ":var6", 0),
        (try_begin),
          (this_or_next|eq, ":var8", "$players_kingdom"),
          (eq, ":var9", "$players_kingdom"),
          (assign, ":var6", 1),
        (try_end),
        (store_add, ":var10", ":var9", 120),
        (val_sub, ":var10", "fac_player_supporters_faction"),
        (faction_get_slot, ":var11", ":var8", ":var10"),
        (try_begin),
          (ge, ":var11", 1),
          (try_begin),
            (eq, ":var11", 1),
            (call_script, "script_update_faction_notes", ":var8"),
            (lt, ":var8", ":var9"),
            (eq, ":var6", 1),
            (call_script, "script_add_notification_menu", "mnu_notification_truce_expired", ":var8", ":var9"),
          (else_try),
            (eq, ":var11", 61),
            (call_script, "script_update_faction_notes", ":var8"),
            (lt, ":var8", ":var9"),
            (eq, ":var6", 1),
            (call_script, "script_add_notification_menu", "mnu_dplmc_notification_alliance_expired", ":var8", ":var9"),
          (else_try),
            (eq, ":var11", 41),
            (call_script, "script_update_faction_notes", ":var8"),
            (lt, ":var8", ":var9"),
            (eq, ":var6", 1),
            (call_script, "script_add_notification_menu", "mnu_dplmc_notification_defensive_expired", ":var8", ":var9"),
          (else_try),
            (eq, ":var11", 21),
            (call_script, "script_update_faction_notes", ":var8"),
            (lt, ":var8", ":var9"),
            (eq, ":var6", 1),
            (call_script, "script_add_notification_menu", "mnu_dplmc_notification_trade_expired", ":var8", ":var9"),
          (try_end),
          (val_sub, ":var11", 1),
          (faction_set_slot, ":var8", ":var10", ":var11"),
        (try_end),
        (store_add, ":var12", ":var9", 140),
        (val_sub, ":var12", "fac_player_supporters_faction"),
        (faction_get_slot, ":var13", ":var8", ":var12"),
        (try_begin),
          (ge, ":var13", 1),
          (try_begin),
            (store_relation, ":var14", ":var8", ":var9"),
            (lt, ":var14", 0),
            (faction_set_slot, ":var8", ":var12", 0),
          (else_try),
            (eq, ":var13", 1),
            (faction_set_slot, ":var8", ":var12", 0),
            (eq, ":var6", 1),
            (call_script, "script_add_notification_menu", "mnu_notification_casus_belli_expired", ":var8", ":var9"),
          (else_try),
            (val_sub, ":var13", 1),
            (faction_set_slot, ":var8", ":var12", ":var13"),
          (try_end),
        (try_end),
        (try_begin),
          (store_relation, ":var14", ":var8", ":var9"),
          (lt, ":var14", 0),
          (store_add, ":var15", ":var9", 160),
          (val_sub, ":var15", "fac_player_supporters_faction"),
          (faction_get_slot, ":var16", ":var8", ":var15"),
          (val_add, ":var16", 1),
          (faction_set_slot, ":var8", ":var15", ":var16"),
        (try_end),
      (try_end),
      (call_script, "script_update_faction_notes", ":var8"),
    (try_end),
  ]),

  (49,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (gt, ":var1", "p_salt_mine"),
      (party_is_active, ":var1"),
      (store_skill_level, ":var2", 17, ":var0"),
      (val_add, ":var2", 5),
      (store_mul, ":var3", ":var2", 1000),
      (assign, ":var4", 30),
      (try_begin),
        (store_faction_of_troop, ":var5", ":var0"),
        (neq, ":var5", "$players_kingdom"),
        (game_get_reduce_campaign_ai, ":var6"),
        (try_begin),
          (eq, ":var6", 0),
          (assign, ":var4", 35),
          (val_mul, ":var3", 3),
          (val_div, ":var3", 2),
        (else_try),
          (eq, ":var6", 2),
          (assign, ":var4", 25),
          (val_div, ":var3", 2),
        (try_end),
      (try_end),
      (store_random_in_range, ":var7", 0, 100),
      (le, ":var7", ":var4"),
      (party_upgrade_with_xp, ":var1", ":var3"),
    (try_end),
    (try_for_range, ":var8", "p_town_1", "p_village_1"),
      (party_get_slot, ":var9", ":var8", 7),
      (neq, ":var9", "trp_player"),
      (assign, ":var3", 3000),
      (assign, ":var4", 30),
      (try_begin),
        (assign, ":var10", -1),
        (try_begin),
          (ge, ":var9", 0),
          (store_faction_of_troop, ":var10", ":var9"),
        (try_end),
        (neq, ":var10", "$players_kingdom"),
        (game_get_reduce_campaign_ai, ":var6"),
        (try_begin),
          (eq, ":var6", 0),
          (assign, ":var4", 35),
          (val_mul, ":var3", 3),
          (val_div, ":var3", 2),
        (else_try),
          (eq, ":var6", 2),
          (assign, ":var4", 25),
          (val_div, ":var3", 2),
        (try_end),
      (try_end),
      (store_random_in_range, ":var7", 0, 100),
      (le, ":var7", ":var4"),
      (party_upgrade_with_xp, ":var8", ":var3"),
    (try_end),
  ]),

  (23,
  [
    (call_script, "script_process_sieges"),
  ]),

  (2,
  [
    (call_script, "script_process_village_raids"),
  ]),

  (7,
  [
    (call_script, "script_init_ai_calculation"),
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (call_script, "script_calculate_troop_ai", ":var0"),
    (try_end),
  ]),

  (0,
  [
    (try_begin),
      (party_slot_eq, "p_main_party", 87, 2),
      (call_script, "script_weather_restore_proficiencies"),
      (party_set_slot, "p_main_party", 87, 1),
    (try_end),
    (neg|party_slot_eq, "p_main_party", 46, 920),
    (call_script, "script_init_item_score"),
    (call_script, "script_init_all_keys"),
    (try_begin),
      (this_or_next|party_slot_eq, "p_main_party", 72, 0),
      (neg|party_slot_ge, "p_main_party", 46, 88),
      (call_script, "script_prebattle_set_default_prefs"),
      (party_set_slot, "p_main_party", 72, 1),
    (try_end),
    (try_begin),
      (neg|party_slot_eq, "p_main_party", 46, 0),
      (store_div, reg0, 920, 10),
      (store_mod, reg1, 920, 10),
      (try_begin),
        (eq, reg1, 0),
        (str_store_string, s1, "str_reg0"),
      (else_try),
        (str_store_string, s1, "@{reg0}.{reg1}"),
      (try_end),
      (display_message, "@PBOD Updated to version 0.{s1}"),
    (try_end),
    (party_set_slot, "p_main_party", 46, 920),
  ]),

  (24,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (this_or_next|is_between, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 51),
      (val_sub, ":var1", 5),
      (val_max, ":var1", 0),
      (troop_set_slot, ":var0", 51, ":var1"),
    (try_end),
    (store_random_in_range, ":var2", 1, 3),
    (val_min, ":var2", 2),
    (try_for_range, ":var3", "trp_npc1", "trp_heroes_end"),
      (this_or_next|is_between, ":var3", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var3", 2, 2),
      (neg|main_party_has_troop, ":var3"),
      (troop_get_slot, ":var4", ":var3", 150),
      (ge, ":var4", 1),
      (val_sub, ":var4", ":var2"),
      (val_max, ":var4", 0),
      (troop_set_slot, ":var3", 150, ":var4"),
    (try_end),
    (troop_get_slot, ":var4", "trp_player", 150),
    (val_sub, ":var4", ":var2"),
    (val_max, ":var4", 0),
    (troop_set_slot, "trp_player", 150, ":var4"),
  ]),

  (8,
  [
    (call_script, "script_cf_random_political_event"),
    (call_script, "script_cf_random_political_event"),
  ]),

  (0.5,
  [
    (val_add, "$g_lord_long_term_count", 1),
    (try_begin),
      (neg|is_between, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin", "trp_knight_1_1_wife"),
      (assign, "$g_lord_long_term_count", "trp_kingdom_heroes_including_player_begin"),
    (try_end),
    (try_for_range, ":var0", 0, 2),
      (assign, ":var1", "$g_lord_long_term_count"),
      (try_begin),
        (eq, ":var0", 1),
        (val_sub, ":var1", "trp_kingdom_heroes_including_player_begin"),
        (val_add, ":var1", "trp_knight_1_1_wife"),
      (try_end),
      (is_between, ":var1", "trp_kingdom_heroes_including_player_begin", "trp_heroes_end"),
      (try_begin),
        (eq, ":var1", "trp_kingdom_heroes_including_player_begin"),
        (assign, ":var1", "trp_player"),
        (assign, ":var2", "$players_kingdom"),
      (else_try),
        (store_faction_of_troop, ":var2", ":var1"),
      (try_end),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (str_store_troop_name, s9, ":var1"),
        (display_message, "@{!}DEBUG -- Doing political calculations for {s9}"),
      (try_end),
      (try_begin),
        (assign, ":var3", reg0),
        (assign, reg0, 1),
        (try_for_range, ":var4", "p_town_1", "p_salt_mine"),
          (party_slot_eq, ":var4", 7, ":var1"),
          (try_begin),
            (is_between, ":var4", "p_town_1", "p_castle_1"),
            (val_add, reg0, 3),
          (else_try),
            (is_between, ":var4", "p_town_1", "p_village_1"),
            (val_add, reg0, 2),
          (else_try),
            (val_add, reg0, 1),
          (try_end),
        (try_end),
        (troop_set_slot, ":var1", 57, reg0),
        (eq, reg0, 1),
        (troop_slot_eq, ":var1", 2, 2),
        (neq, ":var1", "trp_player"),
        (faction_get_slot, ":var5", ":var2", 11),
        (gt, ":var5", -1),
        (neq, ":var5", ":var1"),
        (neg|troop_slot_eq, ":var5", 30, ":var1"),
        (neg|troop_slot_eq, ":var1", 30, ":var5"),
        (troop_get_slot, ":var6", ":var1", 53),
        (try_begin),
          (this_or_next|eq, ":var6", 2),
          (this_or_next|eq, ":var6", 3),
          (this_or_next|eq, ":var6", 4),
          (eq, ":var6", 5),
        (else_try),
          (this_or_next|eq, ":var6", 24),
          (eq, ":var6", 1),
        (try_end),
        (assign, reg0, ":var3"),
      (try_end),
      (try_begin),
        (this_or_next|troop_slot_eq, ":var1", 2, 2),
        (eq, ":var1", "trp_player"),
        (faction_get_slot, ":var5", ":var2", 11),
        (gt, ":var5", -1),
        (neq, ":var1", ":var5"),
        (neg|troop_slot_eq, ":var1", 30, ":var5"),
        (neg|troop_slot_eq, ":var5", 30, ":var1"),
        (neg|is_between, ":var1", "trp_kingdom_1_lord", "trp_knight_1_1"),
        (neg|is_between, ":var1", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
        (assign, ":var7", 0),
        (try_for_range, ":var8", "p_town_1", "p_village_1"),
          (store_faction_of_party, ":var9", ":var8"),
          (eq, ":var9", ":var2"),
          (val_add, ":var7", 1),
        (try_end),
        (try_begin),
          (this_or_next|eq, ":var2", "$players_kingdom"),
          (eq, ":var2", "fac_player_supporters_faction"),
          (val_add, ":var7", 1),
        (try_end),
        (assign, ":var10", reg0),
        (call_script, "script_troop_get_relation_with_troop", ":var1", ":var5"),
        (assign, ":var11", reg0),
        (assign, reg0, ":var10"),
        (this_or_next|le, ":var11", -5000),
        (eq, ":var7", 1000),
        (call_script, "script_cf_troop_can_intrigue", ":var1", 0),
        (store_random_in_range, ":var12", 0, 2),
        (faction_get_slot, ":var13", ":var2", 241),
        (val_clamp, ":var13", -3, 4),
        (val_add, ":var13", 10),
        (store_random_in_range, ":var14", 0, ":var13"),
        (try_begin),
          (this_or_next|eq, ":var7", 0),
          (neq, ":var12", 0),
          (lt, ":var14", 5),
          (neq, ":var1", "trp_player"),
          (try_begin),
            (neq, ":var7", 0),
            (assign, "$g_give_advantage_to_original_faction", ":var1"),
          (try_end),
        (else_try),
          (neq, ":var5", "trp_player"),
          (assign, ":var10", reg0),
          (call_script, "script_troop_get_relation_with_troop", ":var1", ":var5"),
          (assign, ":var11", reg0),
          (assign, reg0, ":var10"),
          (le, ":var11", -5000),
        (try_end),
        (try_begin),
          (eq, ":var1", "trp_player"),
          (assign, ":var15", "$players_kingdom"),
        (else_try),
          (store_faction_of_troop, ":var15", ":var1"),
        (try_end),
        (neq, ":var15", ":var2"),
        (assign, ":var2", ":var15"),
      (else_try),
        (neq, ":var1", "trp_player"),
        (troop_slot_eq, ":var1", 2, 2),
        (faction_slot_ge, ":var2", 64, 1),
        (neg|troop_slot_ge, ":var1", 154, 1),
        (this_or_next|troop_slot_eq, ":var1", 154, -1),
        (neq, "$players_kingdom", ":var2"),
        (assign, ":var10", reg0),
        (assign, ":var16", reg1),
        (call_script, "script_npc_decision_checklist_take_stand_on_issue", ":var1"),
        (troop_set_slot, ":var1", 154, reg0),
        (assign, reg0, ":var10"),
        (assign, reg1, ":var16"),
      (else_try),
        (ge, "$g_dplmc_ai_changes", 2),
        (faction_slot_eq, ":var2", 11, ":var1"),
        (neq, ":var1", "trp_player"),
        (troop_get_slot, ":var17", ":var1", 57),
        (ge, ":var17", 3),
        (neg|faction_slot_ge, ":var2", 64, 1),
        (assign, ":var18", "trp_heroes_end"),
        (assign, ":var19", -200),
        (assign, ":var20", -1),
        (assign, ":var21", reg3),
        (try_for_range, ":var22", "trp_npc1", ":var18"),
          (neq, ":var22", ":var1"),
          (troop_slot_eq, ":var22", 2, 2),
          (store_faction_of_troop, reg3, ":var22"),
          (eq, reg3, ":var2"),
          (troop_get_slot, reg3, ":var22", 57),
          (try_begin),
            (ge, reg3, ":var17"),
            (assign, ":var18", ":var22"),
          (else_try),
            (lt, reg3, 1),
            (assign, ":var18", ":var22"),
          (else_try),
            (eq, reg3, 1),
            (call_script, "script_troop_get_relation_with_troop", ":var1", ":var22"),
            (gt, reg3, ":var19"),
            (assign, ":var19", reg3),
            (assign, ":var20", ":var22"),
          (try_end),
        (try_end),
        (eq, ":var18", "trp_heroes_end"),
        (is_between, ":var20", "trp_npc1", "trp_heroes_end"),
        (gt, ":var19", -10),
        (assign, ":var17", 101),
        (assign, ":var19", -1),
        (try_for_range, ":var4", "p_village_1", "p_salt_mine"),
          (party_slot_eq, ":var4", 7, ":var1"),
          (party_get_slot, reg3, ":var4", 50),
          (this_or_next|eq, ":var19", -1),
          (lt, reg3, ":var17"),
          (assign, ":var17", reg3),
          (assign, ":var19", ":var4"),
        (try_end),
        (is_between, ":var19", "p_town_1", "p_salt_mine"),
        (party_set_slot, ":var19", 7, -1),
        (troop_get_slot, reg3, ":var1", 57),
        (val_sub, reg3, 1),
        (troop_set_slot, ":var1", 57, reg0),
        (str_store_party_name_link, s4, ":var19"),
        (str_store_troop_name_link, s5, ":var1"),
        (str_store_faction_name_link, s7, ":var2"),
        (faction_get_color, ":var23", ":var2"),
        (display_log_message, "@{s5} has decided to grant {s4} to another lord of the {s7}.", ":var23"),
        (try_for_range, ":var22", "trp_npc1", "trp_heroes_end"),
          (store_faction_of_troop, reg3, ":var22"),
          (eq, reg3, ":var2"),
          (troop_set_slot, ":var1", 154, -1),
        (try_end),
        (store_current_hours, reg3),
        (faction_set_slot, ":var2", 65, reg3),
        (faction_set_slot, ":var2", 64, ":var19"),
        (troop_set_slot, ":var1", 154, ":var20"),
        (assign, reg3, ":var21"),
      (try_end),
      (try_begin),
        (neg|troop_slot_eq, ":var1", 2, 15),
        (neg|troop_slot_eq, ":var1", 2, 6),
        (try_for_range, ":var22", "trp_npc1", "trp_heroes_end"),
          (neq, ":var22", ":var1"),
          (neg|troop_slot_eq, ":var22", 2, 6),
          (neg|troop_slot_eq, ":var22", 2, 15),
          (this_or_next|neq, ":var1", "trp_player"),
          (troop_slot_ge, ":var1", 5, 1),
          (assign, ":var10", reg0),
          (call_script, "script_troop_get_relation_with_troop", ":var1", ":var22"),
          (assign, ":var11", reg0),
          (assign, reg0, ":var10"),
          (lt, ":var11", 0),
          (store_sub, ":var24", 0, reg0),
          (store_random_in_range, ":var14", 0, 300),
          (lt, ":var14", ":var24"),
          (call_script, "script_troop_change_relation_with_troop", ":var1", ":var22", 1),
          (val_add, "$total_relation_changes_through_convergence", 1),
        (try_end),
        (neq, ":var1", "trp_player"),
        (troop_slot_eq, ":var1", 2, 14),
        (troop_get_slot, ":var25", ":var1", 14),
        (gt, ":var25", 0),
        (try_for_range, ":var22", "trp_npc1", "trp_heroes_end"),
          (neq, ":var22", ":var1"),
          (neg|troop_slot_eq, ":var22", 2, 6),
          (neg|troop_slot_eq, ":var22", 2, 15),
          (troop_slot_eq, ":var22", 14, ":var25"),
          (assign, ":var10", reg0),
          (call_script, "script_troop_get_relation_with_troop", ":var1", ":var22"),
          (assign, ":var11", reg0),
          (assign, reg0, ":var10"),
          (lt, ":var11", 0),
          (store_sub, ":var24", 0, reg0),
          (store_random_in_range, ":var14", 0, 300),
          (lt, ":var14", ":var24"),
          (call_script, "script_troop_change_relation_with_troop", ":var1", ":var22", 1),
          (val_add, "$total_relation_changes_through_convergence", 1),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (2,
  []),

  (1,
  [
    (call_script, "script_process_alarms"),
    (call_script, "script_allow_vassals_to_join_indoor_battle"),
    (call_script, "script_process_kingdom_parties_ai"),
    (assign, ":var0", reg0),
    (call_script, "script_get_max_skill_of_player_party", "skl_spotting"),
    (store_add, ":var1", reg0, 3),
    (assign, reg0, ":var0"),
    (val_div, ":var1", 2),
    (try_for_parties, ":var2"),
      (gt, ":var2", "p_spawn_points_end"),
      (party_get_template_id, ":var3", ":var2"),
      (is_between, ":var3", "pt_steppe_bandit_lair", "pt_bandit_lair_templates_end"),
      (store_distance_to_party_from_party, ":var4", "p_main_party", ":var2"),
      (lt, ":var4", ":var1"),
      (party_set_flags, ":var2", pf_disabled, 0),
      (party_set_flags, ":var2", pf_always_visible, 1),
    (try_end),
  ]),

  (3,
  [
    (assign, ":var0", reg0),
    (assign, ":var1", reg1),
    (store_current_hours, ":var2"),
    (try_for_range, ":var3", "p_town_1", "p_village_1"),
      (party_get_slot, ":var4", ":var3", 54),
      (gt, ":var4", 0),
      (party_is_active, ":var4"),
      (store_faction_of_party, ":var5", ":var4"),
      (party_slot_ge, ":var3", 54, 1),
      (party_get_slot, ":var6", ":var3", 64),
      (store_sub, ":var6", ":var2", ":var6"),
      (assign, ":var7", 0),
      (assign, ":var8", 0),
      (assign, ":var9", 0),
      (assign, ":var10", 0),
      (try_for_range, ":var11", "trp_npc1", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var11", 2, 2),
        (neg|troop_slot_ge, ":var11", 8, 0),
        (troop_get_slot, ":var12", ":var11", 10),
        (gt, ":var12", 0),
        (party_is_active, ":var12"),
        (store_faction_of_troop, ":var13", ":var11"),
        (eq, ":var13", ":var5"),
        (assign, ":var14", 0),
        (try_begin),
          (party_slot_eq, ":var12", 4, 1),
          (party_slot_eq, ":var12", 5, ":var3"),
          (assign, ":var14", 1),
        (else_try),
          (party_slot_eq, ":var12", 4, 11),
          (party_get_slot, ":var15", ":var12", 5),
          (gt, ":var15", 0),
          (party_is_active, ":var15"),
          (party_slot_eq, ":var15", 4, 1),
          (party_slot_eq, ":var15", 5, ":var3"),
          (assign, ":var14", 1),
        (try_end),
        (eq, ":var14", 1),
        (party_get_battle_opponent, ":var16", ":var12"),
        (this_or_next|lt, ":var16", 0),
        (eq, ":var16", ":var3"),
        (try_begin),
          (faction_slot_eq, ":var5", 8, ":var11"),
          (assign, ":var10", 1),
        (try_end),
        (call_script, "script_party_calculate_regular_strength", ":var12"),
        (try_begin),
          (ge, "$g_dplmc_terrain_advantage", 0),
          (call_script, "script_dplmc_party_calculate_strength_in_terrain", ":var12", -2, 0, 0),
        (try_end),
        (val_add, ":var9", reg0),
      (try_end),
      (try_begin),
        (gt, ":var9", 0),
        (party_collect_attachments_to_party, ":var3", "p_collective_enemy"),
        (call_script, "script_party_calculate_regular_strength", "p_collective_enemy"),
        (try_begin),
          (ge, "$g_dplmc_terrain_advantage", 0),
          (call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_collective_enemy", -2, 0, 0),
        (try_end),
        (assign, ":var17", reg0),
        (try_begin),
          (eq, "$auto_enter_town", ":var3"),
          (eq, "$g_player_is_captive", 0),
          (call_script, "script_party_calculate_regular_strength", "p_main_party"),
          (try_begin),
            (ge, "$g_dplmc_terrain_advantage", 0),
            (call_script, "script_dplmc_party_calculate_strength_in_terrain", "p_collective_enemy", -2, 0, 0),
          (try_end),
          (val_add, ":var17", reg0),
          (val_mul, ":var9", 2),
        (try_end),
        (party_get_slot, ":var18", ":var3", 65),
        (val_add, ":var18", 100),
        (val_mul, ":var17", ":var18"),
        (val_div, ":var17", 100),
        (val_max, ":var17", 1),
        (try_begin),
          (eq, ":var10", 1),
          (eq, ":var5", "$players_kingdom"),
          (check_quest_active, "qst_follow_army"),
          (val_mul, ":var9", 2),
        (try_end),
        (store_mul, ":var19", ":var9", 100),
        (val_div, ":var19", ":var17"),
        (store_sub, ":var20", ":var19", 250),
        (try_begin),
          (gt, ":var20", -100),
          (store_div, ":var21", ":var6", 2),
          (val_add, ":var20", ":var21"),
        (try_end),
        (val_div, ":var20", 5),
        (val_max, ":var20", 0),
        (store_sub, ":var22", 175, ":var19"),
        (val_max, ":var22", 0),
        (try_begin),
          (store_random_in_range, ":var23", 0, 100),
          (lt, ":var23", ":var20"),
          (gt, ":var6", 24),
          (assign, ":var7", 1),
        (else_try),
          (store_random_in_range, ":var23", 0, 100),
          (lt, ":var23", ":var22"),
          (assign, ":var8", 1),
        (try_end),
      (else_try),
        (assign, ":var8", 1),
      (try_end),
      (try_begin),
        (eq, ":var7", 1),
        (call_script, "script_begin_assault_on_center", ":var3"),
      (else_try),
        (eq, ":var8", 1),
        (try_for_range, ":var11", "trp_npc1", "trp_knight_1_1_wife"),
          (troop_slot_eq, ":var11", 2, 2),
          (neg|troop_slot_ge, ":var11", 8, 0),
          (troop_get_slot, ":var12", ":var11", 10),
          (gt, ":var12", 0),
          (party_is_active, ":var12"),
          (party_slot_eq, ":var12", 4, 1),
          (party_slot_eq, ":var12", 5, ":var3"),
          (party_slot_eq, ":var12", 8, 1),
          (call_script, "script_party_set_ai_state", ":var12", -1, -1),
          (call_script, "script_party_set_ai_state", ":var12", 1, ":var3"),
          (party_set_slot, ":var3", 64, ":var2"),
        (try_end),
      (try_end),
    (try_end),
    (assign, reg0, ":var0"),
    (assign, reg1, ":var1"),
  ]),

  (17,
  [
    (assign, "$g_recalculate_ais", 1),
  ]),

  (0.1,
  [
    (eq, "$g_recalculate_ais", 1),
    (assign, "$g_recalculate_ais", 0),
    (call_script, "script_recalculate_ais"),
  ]),

  (24,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (this_or_next|is_between, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (store_faction_of_troop, ":var1", ":var0"),
      (neg|faction_slot_eq, ":var1", 4, 0),
      (neg|faction_slot_eq, ":var1", 4, 6),
      (neg|faction_slot_eq, ":var1", 4, 1),
      (troop_get_slot, ":var2", ":var0", 10),
      (party_is_active, ":var2"),
      (val_add, "$total_vassal_days_on_campaign", 1),
      (party_slot_eq, ":var2", 4, 11),
      (val_add, "$total_vassal_days_responding_to_campaign", 1),
    (try_end),
  ]),

  (37,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (troop_set_slot, ":var0", 20, 0),
    (try_end),
    (try_for_range, ":var0", "trp_village_1_elder", "trp_merchants_end"),
      (troop_set_slot, ":var0", 20, 0),
    (try_end),
  ]),

  (95,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_refresh_village_merchant_inventory", ":var0"),
    (try_end),
  ]),

  (47,
  [
    (set_show_messages, 1),
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_refresh_village_defenders", ":var0"),
      (party_set_slot, ":var0", 46, 0),
    (try_end),
  ]),

  (169,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (neg|is_between, ":var0", "p_castle_1", "p_village_1"),
      (party_get_slot, ":var1", ":var0", 215),
      (party_get_slot, ":var2", ":var0", 216),
      (party_get_slot, ":var3", ":var0", 218),
      (val_max, ":var3", 1),
      (store_mul, ":var4", ":var1", 400),
      (store_mul, ":var5", ":var2", 200),
      (val_add, ":var4", ":var5"),
      (val_div, ":var4", ":var3"),
      (store_random_in_range, ":var6", 0, 100),
      (try_begin),
        (eq, ":var6", 0),
        (val_min, ":var1", 10),
      (else_try),
        (gt, ":var4", 100),
        (try_begin),
          (lt, ":var6", 2),
          (val_min, ":var1", 10),
          (assign, ":var7", reg4),
          (try_begin),
            (gt, "$g_player_chamberlain", 0),
            (party_slot_eq, ":var0", 7, "trp_player"),
            (party_get_slot, reg4, ":var0", 215),
            (val_sub, reg4, ":var1"),
            (gt, reg4, 0),
            (str_store_party_name_link, s4, ":var0"),
            (display_log_message, "@A livestock epidemic has killed {reg4} cattle in {s4}.", 0x66CCFF),
          (try_end),
          (assign, reg4, ":var7"),
        (else_try),
          (gt, ":var4", 100),
          (val_mul, ":var2", 90),
          (val_div, ":var2", 100),
          (val_mul, ":var1", 90),
          (val_div, ":var1", 100),
        (else_try),
          (lt, ":var4", 30),
          (val_mul, ":var1", 120),
          (val_div, ":var1", 100),
          (val_add, ":var1", 1),
          (val_mul, ":var2", 120),
          (val_div, ":var2", 100),
          (val_add, ":var2", 1),
        (else_try),
          (lt, ":var4", 60),
          (val_mul, ":var1", 110),
          (val_div, ":var1", 100),
          (val_add, ":var1", 1),
          (val_mul, ":var2", 110),
          (val_div, ":var2", 100),
          (val_add, ":var2", 1),
        (else_try),
          (lt, ":var4", 100),
          (lt, ":var6", 50),
          (val_mul, ":var1", 105),
          (val_div, ":var1", 100),
          (try_begin),
            (le, ":var1", 20),
            (val_add, ":var1", 1),
          (try_end),
          (val_mul, ":var2", 105),
          (val_div, ":var2", 100),
          (try_begin),
            (le, ":var2", 20),
            (val_add, ":var2", 1),
          (try_end),
        (try_end),
      (try_end),
      (party_set_slot, ":var0", 215, ":var1"),
      (party_set_slot, ":var0", 216, ":var2"),
    (try_end),
  ]),

  (169,
  [
    (game_get_reduce_campaign_ai, ":var0"),
    (try_for_range, ":var1", "p_town_1", "p_salt_mine"),
      (try_begin),
        (party_slot_ge, ":var1", 7, 0),
        (party_get_slot, ":var2", ":var1", 47),
        (assign, ":var3", 0),
        (try_begin),
          (party_slot_eq, ":var1", 0, 4),
          (try_begin),
            (party_slot_eq, ":var1", 35, 0),
            (assign, ":var3", 1200),
          (try_end),
        (else_try),
          (party_slot_eq, ":var1", 0, 2),
          (assign, ":var3", 1200),
        (else_try),
          (party_slot_eq, ":var1", 0, 3),
          (assign, ":var3", 2400),
        (try_end),
        (party_get_slot, ":var4", ":var1", 50),
        (store_add, ":var5", 20, ":var4"),
        (val_mul, ":var3", ":var5"),
        (val_div, ":var3", 120),
        (try_begin),
          (party_slot_eq, ":var1", 7, "trp_player"),
          (try_begin),
            (eq, ":var0", 0),
            (val_mul, ":var3", 3),
            (val_div, ":var3", 4),
          (else_try),
            (eq, ":var0", 1),
          (else_try),
            (eq, ":var0", 2),
            (val_mul, ":var3", 4),
            (val_div, ":var3", 3),
          (try_end),
        (try_end),
        (val_add, ":var2", ":var3"),
        (try_begin),
          (str_store_party_name, s6, ":var1"),
          (party_get_slot, ":var6", ":var1", 580),
          (neq, ":var6", 0),
          (store_div, ":var7", ":var2", 100),
          (val_mul, ":var7", ":var6"),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (assign, ":var8", reg4),
            (assign, reg4, ":var6"),
            (display_message, "@{!}DEBUG : tax rate in {s6}: {reg4}"),
            (assign, reg4, ":var2"),
            (display_message, "@{!}DEBUG : accumulated rents  in {s6}: {reg4}"),
            (assign, reg4, ":var7"),
            (display_message, "@{!}DEBUG : rent change in {s6}: {reg4}  in {s6}"),
            (assign, reg4, ":var8"),
          (try_end),
          (val_add, ":var2", ":var7"),
          (val_div, ":var6", -25),
          (call_script, "script_change_center_prosperity", ":var1", ":var6"),
          (try_begin),
            (lt, ":var6", 0),
            (val_mul, ":var6", 2),
            (try_begin),
              (eq, "$cheat_mode", 1),
              (assign, ":var8", reg4),
              (assign, reg4, ":var6"),
              (display_message, "@{!}DEBUG : tax rate after modi in {s6}: {reg4}"),
              (assign, reg4, ":var8"),
            (try_end),
            (try_begin),
              (this_or_next|is_between, ":var1", "p_village_1", "p_salt_mine"),
              (is_between, ":var1", "p_town_1", "p_castle_1"),
              (neq, ":var1", "$g_last_rest_center"),
              (party_get_slot, ":var9", ":var1", 26),
              (try_begin),
                (eq, "$cheat_mode", 1),
                (assign, ":var8", reg4),
                (assign, reg4, ":var9"),
                (display_message, "@{!}DEBUG : center relation: {reg4}"),
                (assign, reg4, ":var8"),
              (try_end),
              (le, ":var9", -5),
              (store_random_in_range, ":var10", -100, 0),
              (gt, ":var10", ":var9"),
              (neg|party_slot_eq, ":var1", 39, "trp_peasant_woman"),
              (display_log_message, "@There has been a riot in {s6}!", 0xFF3333),
              (party_set_slot, ":var1", 39, "trp_peasant_woman"),
              (call_script, "script_change_center_prosperity", ":var1", -1),
              (call_script, "script_add_notification_menu", "mnu_dplmc_notification_riot", ":var1", 0),
            (try_end),
          (try_end),
          (call_script, "script_change_player_relation_with_center", ":var1", ":var6"),
        (try_end),
        (try_begin),
          (party_slot_ge, ":var1", 39, 1),
          (assign, ":var2", 0),
        (try_end),
        (party_set_slot, ":var1", 47, ":var2"),
      (try_end),
      (try_begin),
        (is_between, ":var1", "p_village_1", "p_salt_mine"),
        (party_get_slot, ":var11", ":var1", 120),
        (party_slot_ge, ":var11", 7, 0),
        (is_between, ":var11", "p_castle_1", "p_village_1"),
        (party_get_slot, ":var2", ":var11", 47),
        (val_add, ":var2", ":var3"),
        (party_set_slot, ":var11", 47, ":var2"),
      (try_end),
    (try_end),
  ]),

  (13,
  [
    (eq, "$players_kingdom", 0),
    (le, "$g_invite_faction", 0),
    (eq, "$g_player_is_captive", 0),
    (try_begin),
      (eq, "$character_gender", 1),
      (eq, "$npc_with_sisterly_advice", 0),
      (try_for_range, ":var0", "trp_npc1", "trp_kingdom_1_lord"),
        (main_party_has_troop, ":var0"),
        (call_script, "script_get_gender", ":var0"),
        (eq, reg0, 1),
        (troop_slot_ge, "trp_player", 7, 150),
        (troop_slot_ge, ":var0", 139, 1),
        (assign, "$npc_with_sisterly_advice", ":var0"),
      (try_end),
    (else_try),
      (store_random_in_range, ":var1", "fac_kingdom_1", "fac_kingdoms_end"),
      (assign, ":var2", 999999),
      (try_for_range, ":var3", "p_town_1", "p_village_1"),
        (store_faction_of_party, ":var4", ":var3"),
        (eq, ":var4", ":var1"),
        (store_distance_to_party_from_party, ":var5", "p_main_party", ":var3"),
        (val_min, ":var2", ":var5"),
      (try_end),
      (lt, ":var2", 30),
      (store_relation, ":var6", ":var1", "fac_player_supporters_faction"),
      (faction_get_slot, ":var7", ":var1", 11),
      (call_script, "script_troop_get_player_relation", ":var7"),
      (assign, ":var8", reg0),
      (call_script, "script_get_number_of_hero_centers", "trp_player"),
      (assign, ":var9", reg0),
      (eq, "$g_infinite_camping", 0),
      (assign, ":var10", 0),
      (try_begin),
        (ge, "p_main_party", 0),
        (store_party_size_wo_prisoners, ":var10", "p_main_party"),
      (try_end),
      (try_begin),
        (eq, ":var9", 0),
        (troop_get_slot, ":var11", "trp_player", 7),
        (ge, ":var11", 160),
        (ge, ":var6", 0),
        (ge, ":var8", 0),
        (ge, ":var10", 45),
        (store_random_in_range, ":var12", 0, 100),
        (lt, ":var12", 50),
        (call_script, "script_get_poorest_village_of_faction", ":var1"),
        (assign, "$g_invite_offered_center", reg0),
        (ge, "$g_invite_offered_center", 0),
        (assign, "$g_invite_faction", ":var1"),
        (jump_to_menu, "mnu_invite_player_to_faction"),
      (else_try),
        (gt, ":var9", 0),
        (neq, "$players_oath_renounced_against_kingdom", ":var1"),
        (ge, ":var6", -40),
        (ge, ":var8", -20),
        (ge, ":var10", 30),
        (store_random_in_range, ":var12", 0, 100),
        (lt, ":var12", 20),
        (assign, "$g_invite_faction", ":var1"),
        (assign, "$g_invite_offered_center", -1),
        (jump_to_menu, "mnu_invite_player_to_faction_without_center"),
      (try_end),
    (try_end),
  ]),

  (168,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (store_random_in_range, ":var1", 0, 10000),
      (troop_set_slot, ":var0", 49, ":var1"),
    (try_end),
    (store_random_in_range, ":var1", 0, 10000),
    (troop_set_slot, "trp_player", 49, ":var1"),
  ]),

  (0.1,
  [
    (try_begin),
      (eq, "$character_looked_at", 1),
      (try_begin),
        (call_script, "script_cf_update_willpower"),
      (try_end),
      (assign, "$character_looked_at", 0),
    (try_end),
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (ge, ":var1", 1),
      (party_is_active, ":var1"),
      (party_get_attached_to, ":var2", ":var1"),
      (lt, ":var2", 1),
      (party_get_cur_town, ":var3", ":var1"),
      (is_between, ":var3", "p_town_1", "p_salt_mine"),
      (assign, ":var4", reg0),
      (call_script, "script_get_relation_between_parties", ":var3", ":var1"),
      (assign, ":var5", reg0),
      (assign, reg0, ":var4"),
      (try_begin),
        (ge, ":var5", 0),
        (party_attach_to_party, ":var1", ":var3"),
      (else_try),
        (party_set_ai_behavior, ":var1", ai_bhvr_hold),
      (try_end),
      (try_begin),
        (this_or_next|party_slot_eq, ":var3", 0, 3),
        (party_slot_eq, ":var3", 0, 2),
        (store_faction_of_party, ":var6", ":var1"),
        (store_faction_of_party, ":var7", ":var3"),
        (eq, ":var6", ":var7"),
        (party_get_num_prisoner_stacks, ":var8", ":var1"),
        (gt, ":var8", 0),
        (assign, "$g_move_heroes", 1),
        (neq, ":var1", "p_main_party"),
        (call_script, "script_party_prisoners_add_party_prisoners", ":var3", ":var1"),
        (assign, "$g_move_heroes", 1),
        (call_script, "script_party_remove_all_prisoners", ":var1"),
      (try_end),
    (try_end),
    (try_for_parties, ":var9"),
      (gt, ":var9", "p_spawn_points_end"),
      (party_get_template_id, ":var10", ":var9"),
      (ge, ":var10", "pt_steppe_bandit_lair"),
      (store_distance_to_party_from_party, ":var11", "p_main_party", ":var9"),
      (lt, ":var11", 3),
      (party_set_flags, ":var9", pf_disabled, 0),
      (party_set_flags, ":var9", pf_always_visible, 1),
    (try_end),
  ]),

  (47,
  [
    (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", "p_main_party", 50),
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (assign, ":var1", 30),
      (try_begin),
        (party_slot_eq, ":var0", 140, 1),
        (assign, ":var1", 5),
      (try_end),
      (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":var0", ":var1"),
    (try_end),
    (try_for_range, ":var2", "trp_player_camp_chest_1", "trp_player_camp_chest_end"),
      (troop_get_slot, ":var3", ":var2", 60),
      (gt, ":var3", 0),
      (party_is_active, ":var3"),
      (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":var3", 40),
    (try_end),
  ]),

  (47,
  [
    (try_begin),
      (troop_slot_eq, "trp_multiplayer_end", 49, 0),
      (try_for_range, ":var0", "trp_knight_1_1", "trp_heroes_end"),
        (call_script, "script_cf_get_active_original_faction", ":var0"),
        (assign, ":var1", reg3),
        (store_faction_of_troop, ":var2", ":var0"),
        (assign, ":var3", 0),
        (try_begin),
          (this_or_next|eq, ":var2", "fac_outlaws"),
          (eq, ":var2", "fac_commoners"),
          (assign, ":var3", 1),
        (try_end),
        (try_begin),
          (troop_slot_eq, ":var0", 2, 6),
          (try_begin),
            (neq, ":var2", ":var1"),
            (assign, ":var3", 1),
          (try_end),
          (this_or_next|troop_slot_eq, "trp_player", 30, ":var0"),
          (troop_slot_eq, ":var0", 30, "trp_player"),
          (assign, ":var3", 0),
        (try_end),
        (eq, ":var3", 1),
        (assign, ":var4", 0),
        (call_script, "script_change_troop_faction", ":var0", ":var1", ":var4"),
      (try_end),
      (troop_set_slot, "trp_multiplayer_end", 49, 158),
    (try_end),
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (str_store_troop_name, s1, ":var0"),
      (store_faction_of_troop, ":var2", ":var0"),
      (assign, ":var3", 1),
      (try_begin),
        (neg|troop_slot_ge, ":var0", 8, 0),
        (neg|troop_slot_ge, ":var0", 10, 1),
        (troop_get_slot, ":var5", ":var0", 2),
        (try_begin),
          (is_between, ":var0", "trp_knight_1_1", "trp_knight_1_1_wife"),
          (this_or_next|eq, ":var5", 14),
          (eq, ":var5", 0),
          (store_random_in_range, ":var6", 1, 9),
          (eq, ":var6", 3),
          (troop_set_slot, ":var0", 2, 2),
          (display_message, "@{!}returning hero from exile {s1}"),
          (try_begin),
            (this_or_next|eq, ":var2", "fac_outlaws"),
            (this_or_next|eq, ":var2", "fac_commoners"),
            (call_script, "script_cf_get_active_original_faction", ":var0"),
            (assign, ":var7", reg3),
            (faction_slot_eq, ":var7", 21, 0),
            (assign, ":var4", 0),
            (call_script, "script_change_troop_faction", ":var0", ":var7", ":var4"),
          (else_try),
            (neg|faction_slot_eq, ":var2", 21, 0),
            (call_script, "script_cf_get_random_active_compatible_faction_except_player_faction_and_faction", ":var2", ":var0"),
            (assign, ":var7", reg3),
            (is_between, ":var7", "fac_player_supporters_faction", "fac_kingdoms_end"),
            (assign, ":var4", 0),
            (call_script, "script_change_troop_faction", ":var0", ":var7", ":var4"),
          (try_end),
          (store_faction_of_troop, ":var2", ":var0"),
        (try_end),
        (neg|troop_slot_ge, ":var0", 8, 0),
        (neg|troop_slot_ge, ":var0", 10, 1),
        (is_between, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var2", 21, 0),
        (troop_slot_eq, ":var0", 2, 2),
        (try_begin),
          (eq, "$cheat_mode", 2),
          (str_store_troop_name, s4, ":var0"),
          (display_message, "str_debug__attempting_to_spawn_s4"),
        (try_end),
        (assign, ":var8", reg0),
        (try_begin),
          (call_script, "script_cf_select_random_walled_center_with_faction_and_owner_priority_no_siege", ":var2", ":var0"),
          (assign, ":var9", reg0),
          (eq, ":var9", -1),
          (assign, ":var9", "p_four_ways_inn"),
        (try_end),
        (assign, reg0, ":var8"),
        (try_begin),
          (assign, ":var10", 0),
          (try_for_range, ":var11", "p_town_1", "p_village_1"),
            (store_faction_of_party, ":var12", ":var11"),
            (eq, ":var12", ":var2"),
            (val_add, ":var10", 1),
          (try_end),
          (try_begin),
            (le, ":var10", 0),
            (assign, "$g_there_is_no_avaliable_centers", 1),
            (assign, ":var3", 0),
            (try_begin),
              (is_between, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1"),
              (troop_set_slot, ":var0", 56, "fac_outlaws"),
            (try_end),
            (is_between, ":var0", "trp_knight_1_1", "trp_knight_1_1_wife"),
            (call_script, "script_cf_get_random_active_compatible_faction_except_player_faction_and_faction", ":var2", ":var0"),
            (assign, ":var7", reg3),
            (try_begin),
              (is_between, ":var7", "fac_player_supporters_faction", "fac_kingdoms_end"),
              (assign, ":var4", 0),
              (call_script, "script_change_troop_faction", ":var0", ":var7", ":var4"),
            (else_try),
              (assign, ":var4", 0),
              (call_script, "script_change_troop_faction", ":var0", "fac_outlaws", ":var4"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":var3", 1),
          (try_begin),
            (is_between, ":var9", "p_town_1", "p_village_1"),
          (else_try),
            (assign, ":var9", "p_four_ways_inn"),
          (try_end),
          (call_script, "script_create_kingdom_hero_party", ":var0", ":var9"),
          (party_attach_to_party, "$pout_party", ":var9"),
          (troop_get_slot, ":var13", ":var0", 10),
          (call_script, "script_party_set_ai_state", ":var13", 7, ":var9"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (25,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_slot_eq, ":var0", 35, 0),
      (party_get_slot, ":var1", ":var0", 122),
      (this_or_next|eq, ":var1", 0),
      (neg|party_is_active, ":var1"),
      (store_random_in_range, ":var2", 0, 100),
      (lt, ":var2", 60),
      (assign, ":var3", reg0),
      (call_script, "script_create_village_farmer_party", ":var0"),
      (party_set_slot, ":var0", 122, reg0),
      (assign, reg0, ":var3"),
    (try_end),
  ]),

  (73,
  [
    (call_script, "script_update_trade_good_prices"),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 51),
      (try_begin),
        (gt, ":var1", 1000),
        (val_mul, ":var1", 95),
        (val_div, ":var1", 100),
        (val_max, ":var1", 1000),
      (else_try),
        (lt, ":var1", 1000),
        (val_mul, ":var1", 105),
        (val_div, ":var1", 100),
        (val_min, ":var1", 1000),
      (try_end),
      (party_set_slot, ":var0", 51, ":var1"),
    (try_end),
  ]),

  (8,
  [
    (game_get_reduce_campaign_ai, ":var0"),
    (val_sub, ":var0", 1),
    (val_mul, ":var0", 10),
    (try_for_parties, ":var1"),
      (try_begin),
        (party_slot_eq, ":var1", 0, 11),
        (party_is_in_any_town, ":var1"),
        (store_faction_of_party, ":var2", ":var1"),
        (is_between, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var2", 21, 0),
        (faction_get_slot, ":var3", ":var2", 82),
        (try_begin),
          (le, ":var3", 0),
          (remove_party, ":var1"),
        (else_try),
          (party_get_cur_town, ":var4", ":var1"),
          (store_random_in_range, ":var5", 0, 100),
          (assign, ":var6", 45),
          (try_begin),
            (this_or_next|party_slot_eq, ":var4", 7, "trp_player"),
            (eq, ":var2", "$players_kingdom"),
            (val_add, ":var6", ":var0"),
          (try_end),
          (lt, ":var5", ":var6"),
          (assign, ":var7", 1),
          (try_begin),
            (is_between, ":var4", "p_town_1", "p_village_1"),
            (neg|party_slot_eq, ":var4", 54, -1),
            (assign, ":var7", 0),
          (try_end),
          (eq, ":var7", 1),
          (assign, ":var8", 0),
          (try_begin),
            (party_get_slot, ":var9", ":var1", 4),
            (eq, ":var9", 13),
            (party_get_slot, ":var10", ":var1", 5),
            (eq, ":var4", ":var10"),
            (assign, ":var8", 1),
          (try_end),
          (assign, ":var11", -1),
          (try_begin),
            (eq, "$caravan_escort_state", 1),
            (eq, "$caravan_escort_party_id", ":var1"),
            (assign, ":var12", 9999),
            (try_begin),
              (eq, "$caravan_escort_state", 1),
              (eq, ":var4", "$caravan_escort_destination_town"),
              (store_distance_to_party_from_party, ":var12", "p_main_party", "$caravan_escort_party_id"),
              (lt, ":var12", 5),
              (map_free),
              (start_encounter, "$caravan_escort_party_id"),
            (else_try),
              (ge, ":var12", 5),
              (assign, "$caravan_escort_state", 0),
            (else_try),
              (neq, ":var4", "$caravan_escort_destination_town"),
              (assign, ":var11", "$caravan_escort_destination_town"),
            (try_end),
          (else_try),
            (assign, ":var13", reg0),
            (call_script, "script_cf_select_most_profitable_town_at_peace_with_faction_in_trade_route", ":var4", ":var2", -1),
            (assign, ":var11", reg0),
            (assign, reg0, ":var13"),
          (try_end),
          (is_between, ":var11", "p_town_1", "p_castle_1"),
          (neg|party_is_in_town, ":var1", ":var11"),
          (try_begin),
            (eq, ":var8", 1),
            (str_store_party_name, s7, ":var4"),
            (call_script, "script_do_merchant_town_trade", ":var1", ":var4"),
          (try_end),
          (party_set_ai_behavior, ":var1", ai_bhvr_travel_to_party),
          (party_set_ai_object, ":var1", ":var11"),
          (party_set_flags, ":var1", pf_default_behavior, 0),
          (party_set_slot, ":var1", 4, 13),
          (party_set_slot, ":var1", 5, ":var11"),
        (try_end),
      (else_try),
        (party_slot_eq, ":var1", 0, 11),
        (assign, ":var4", -1),
        (try_for_range, ":var14", "p_town_1", "p_castle_1"),
          (party_slot_eq, ":var14", 74, 1),
          (party_get_slot, ":var15", ":var14", 75),
          (store_distance_to_party_from_party, ":var16", ":var1", ":var14"),
          (val_add, ":var15", 3),
          (le, ":var16", ":var15"),
          (assign, ":var4", ":var14"),
          (assign, ":var14", "p_castle_1"),
        (try_end),
        (gt, ":var4", 0),
        (store_faction_of_party, ":var2", ":var1"),
        (store_random_in_range, ":var5", 0, 100),
        (try_begin),
          (party_slot_eq, ":var4", 7, "trp_player"),
          (game_get_reduce_campaign_ai, ":var0"),
          (try_begin),
            (eq, ":var0", 0),
            (assign, ":var6", 35),
          (else_try),
            (eq, ":var0", 1),
            (assign, ":var6", 45),
          (else_try),
            (eq, ":var0", 2),
            (assign, ":var6", 60),
          (try_end),
        (else_try),
          (assign, ":var6", 45),
        (try_end),
        (lt, ":var5", ":var6"),
        (assign, ":var7", 1),
        (try_begin),
          (is_between, ":var4", "p_town_1", "p_village_1"),
          (neg|party_slot_eq, ":var4", 54, -1),
          (assign, ":var7", 0),
        (try_end),
        (eq, ":var7", 1),
        (assign, ":var8", 0),
        (try_begin),
          (party_get_slot, ":var9", ":var1", 4),
          (party_get_slot, ":var10", ":var1", 5),
          (eq, ":var4", ":var10"),
          (store_random_in_range, ":var17", 1, 9),
          (eq, ":var17", 1),
          (assign, ":var8", 1),
        (try_end),
        (eq, ":var8", 1),
        (assign, ":var11", -1),
        (try_begin),
          (call_script, "script_cf_select_most_profitable_coastal_town_at_peace_with_faction_in_trade_route", ":var4", ":var2"),
          (assign, ":var11", reg0),
          (gt, reg0, -1),
          (assign, ":var11", reg0),
        (else_try),
          (remove_party, ":var1"),
        (try_end),
        (is_between, ":var11", "p_town_1", "p_castle_1"),
        (neg|party_is_in_town, ":var1", ":var11"),
        (call_script, "script_do_merchant_town_trade", ":var1", ":var4"),
        (party_set_ai_behavior, ":var1", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var1", ":var11"),
        (party_set_flags, ":var1", pf_default_behavior, 0),
        (party_set_slot, ":var1", 4, 13),
        (party_set_slot, ":var1", 5, ":var11"),
        (str_store_party_name, s7, ":var11"),
        (party_get_position, pos3, ":var11"),
        (party_get_slot, ":var15", ":var11", 75),
        (map_get_water_position_around_position, pos1, pos3, ":var15"),
        (party_set_position, ":var1", pos1),
        (try_begin),
          (party_get_num_companion_stacks, ":var18", ":var1"),
          (lt, ":var18", 5),
          (party_slot_eq, ":var4", 327, 1),
          (store_random_in_range, ":var19", 8, 11),
          (party_add_members, ":var1", "trp_hired_blade", ":var19"),
          (store_random_in_range, ":var19", 8, 11),
          (party_add_members, ":var1", "trp_mercenary_cavalry", ":var19"),
          (store_random_in_range, ":var19", 8, 11),
          (party_add_members, ":var1", "trp_mercenary_swordsman", ":var19"),
          (store_random_in_range, ":var19", 3, 9),
          (party_add_members, ":var1", "trp_amazon_mistress", ":var19"),
          (store_random_in_range, ":var19", 3, 9),
          (party_add_members, ":var1", "trp_amazon_huntress", ":var19"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (8,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 15),
      (party_is_in_any_town, ":var0"),
      (party_get_slot, ":var1", ":var0", 123),
      (party_get_cur_town, ":var2", ":var0"),
      (assign, ":var3", 1),
      (try_begin),
        (is_between, ":var2", "p_town_1", "p_village_1"),
        (neg|party_slot_eq, ":var2", 54, -1),
        (assign, ":var3", 0),
      (try_end),
      (eq, ":var3", 1),
      (try_begin),
        (eq, ":var2", ":var1"),
        (call_script, "script_do_party_center_trade", ":var0", ":var1", 3),
        (store_faction_of_party, ":var4", ":var2"),
        (party_set_faction, ":var0", ":var4"),
        (party_get_slot, ":var5", ":var1", 121),
        (party_set_slot, ":var0", 5, ":var5"),
        (party_set_slot, ":var0", 4, 13),
        (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var0", ":var5"),
        (try_begin),
          (ge, "$g_dplmc_gold_changes", 1),
          (party_get_slot, ":var6", ":var1", 25),
          (try_begin),
            (party_get_slot, ":var7", ":var0", 49),
            (troop_add_gold, ":var6", ":var7"),
            (party_set_slot, ":var0", 49, 0),
          (try_end),
          (party_get_slot, ":var8", ":var0", 109),
          (lt, ":var8", 5),
          (val_add, ":var8", 110),
          (troop_get_inventory_capacity, ":var9", ":var6"),
          (try_for_range, ":var10", 10, ":var9"),
            (troop_get_inventory_slot, ":var11", ":var6", ":var10"),
            (gt, ":var11", -1),
            (item_get_type, ":var12", ":var11"),
            (neq, ":var12", 11),
            (party_set_slot, ":var0", ":var8", ":var11"),
            (store_add, ":var13", ":var8", 5),
            (troop_get_inventory_slot_modifier, ":var14", ":var6", ":var10"),
            (party_set_slot, ":var0", ":var13", ":var14"),
            (troop_set_inventory_slot, ":var6", ":var10", -1),
            (try_begin),
              (ge, ":var8", 115),
              (assign, ":var9", 0),
            (else_try),
              (val_add, ":var8", 1),
            (try_end),
          (try_end),
        (try_end),
      (else_try),
        (try_begin),
          (party_get_slot, ":var15", ":var0", 5),
          (eq, ":var2", ":var15"),
          (assign, ":var16", reg0),
          (call_script, "script_do_party_center_trade", ":var0", ":var15", 3),
          (assign, ":var17", reg0),
          (assign, reg0, ":var16"),
          (party_get_slot, ":var18", ":var15", 48),
          (party_get_slot, ":var19", ":var15", 50),
          (assign, ":var20", ":var17"),
          (val_mul, ":var20", ":var19"),
          (val_add, ":var20", 50),
          (val_div, ":var20", 100),
          (val_div, ":var20", 5),
          (val_div, ":var20", 20),
          (val_add, ":var18", ":var20"),
          (try_begin),
            (party_slot_ge, ":var15", 39, 1),
            (assign, ":var18", 0),
          (try_end),
          (try_begin),
            (assign, ":var21", reg4),
            (assign, ":var22", reg5),
            (ge, "$cheat_mode", 3),
            (assign, reg4, ":var20"),
            (str_store_party_name, s4, ":var15"),
            (assign, reg5, ":var18"),
            (display_message, "@{!}New tariffs at {s4} = {reg4}, total = {reg5}"),
            (assign, reg4, ":var21"),
            (assign, reg5, ":var22"),
          (try_end),
          (party_set_slot, ":var15", 48, ":var18"),
          (party_get_slot, ":var23", ":var15", 53),
          (assign, ":var16", reg0),
          (call_script, "script_center_get_food_store_limit", ":var15"),
          (assign, ":var24", reg0),
          (assign, reg0, ":var16"),
          (val_add, ":var23", 1000),
          (val_min, ":var23", ":var24"),
          (party_set_slot, ":var15", 53, ":var23"),
          (try_begin),
            (store_random_in_range, ":var25", 0, 100),
            (lt, ":var25", 35),
            (call_script, "script_change_center_prosperity", ":var1", 1),
            (val_add, "$newglob_total_prosperity_from_village_trade", 1),
          (try_end),
        (try_end),
        (party_set_slot, ":var0", 5, ":var1"),
        (party_set_slot, ":var0", 4, 13),
        (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var0", ":var1"),
      (try_end),
    (try_end),
  ]),

  (6,
  [
    (try_begin),
      (lt, "$g_dplmc_gold_changes", 0),
      (try_for_range, ":var0", "p_castle_1", "p_village_1"),
        (party_slot_eq, ":var0", 54, -1),
        (party_get_slot, ":var1", ":var0", 53),
        (val_add, ":var1", 100),
        (assign, ":var2", reg0),
        (call_script, "script_center_get_food_store_limit", ":var0"),
        (assign, ":var3", reg0),
        (assign, reg0, ":var2"),
        (val_min, ":var1", ":var3"),
        (party_set_slot, ":var0", 53, ":var1"),
      (try_end),
    (else_try),
      (try_for_range, ":var4", "p_village_1", "p_salt_mine"),
        (neg|party_slot_ge, ":var4", 54, 0),
        (party_slot_eq, ":var4", 35, 0),
        (party_get_slot, ":var0", ":var4", 120),
        (is_between, ":var0", "p_castle_1", "p_village_1"),
        (neg|party_slot_ge, ":var0", 54, 0),
        (party_get_slot, ":var1", ":var0", 53),
        (assign, ":var2", reg0),
        (party_get_slot, reg0, ":var4", 50),
        (val_add, reg0, 75),
        (val_mul, reg0, 100),
        (val_add, reg0, 62),
        (val_div, reg0, 125),
        (val_add, ":var1", reg0),
        (call_script, "script_center_get_food_store_limit", ":var0"),
        (assign, ":var3", reg0),
        (assign, reg0, ":var2"),
        (val_min, ":var1", ":var3"),
        (party_set_slot, ":var0", 53, ":var1"),
      (try_end),
    (try_end),
  ]),

  (0.5,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (gt, ":var1", 0),
      (try_begin),
        (party_is_active, ":var1"),
        (try_begin),
          (get_party_ai_current_behavior, ":var2", ":var1"),
          (eq, ":var2", 5),
          (assign, ":var3", 1),
          (try_begin),
            (this_or_next|troop_slot_eq, ":var0", 53, 7),
            (troop_slot_eq, ":var0", 53, 1),
            (get_party_ai_current_object, ":var4", ":var1"),
            (party_is_active, ":var4"),
            (party_get_battle_opponent, ":var5", ":var4"),
            (party_is_active, ":var5"),
            (assign, ":var3", 0),
          (try_end),
          (eq, ":var3", 1),
          (store_faction_of_party, ":var6", ":var1"),
          (party_get_slot, ":var7", ":var1", 30),
          (faction_get_slot, ":var8", ":var6", 8),
          (neq, ":var8", ":var0"),
          (assign, ":var3", 1),
          (try_begin),
            (ge, ":var8", 0),
            (troop_get_slot, ":var9", ":var8", 10),
            (party_is_active, ":var9", 0),
            (eq, ":var7", ":var9"),
            (assign, ":var3", 0),
          (try_end),
          (eq, ":var3", 1),
          (assign, ":var10", 0),
          (try_for_range, ":var11", "p_town_1", "p_village_1"),
            (eq, ":var10", 0),
            (party_slot_eq, ":var11", 54, -1),
            (store_faction_of_party, ":var12", ":var11"),
            (store_relation, ":var13", ":var12", ":var6"),
            (call_script, "script_evaluate_faction_prejudice", ":var1", ":var12"),
            (assign, ":var14", reg1),
            (try_begin),
              (lt, ":var14", 0),
              (val_add, ":var13", ":var14"),
            (try_end),
            (gt, ":var13", 0),
            (store_distance_to_party_from_party, ":var15", ":var1", ":var11"),
            (lt, ":var15", 20),
            (party_get_position, pos1, ":var1"),
            (party_get_position, pos2, ":var11"),
            (neg|position_is_behind_position, pos2, pos1),
            (call_script, "script_party_set_ai_state", ":var1", 14, ":var11"),
            (assign, ":var10", 1),
          (try_end),
        (try_end),
      (else_try),
        (troop_set_slot, ":var0", 10, -1),
      (try_end),
    (try_end),
  ]),

  (0.5,
  [
    (store_current_hours, ":var0"),
    (store_mod, ":var1", ":var0", 11),
    (store_sub, ":var2", ":var0", 5),
    (party_get_num_companions, ":var3", "p_main_party"),
    (party_get_num_prisoners, ":var4", "p_main_party"),
    (val_add, ":var3", ":var4"),
    (convert_to_fixed_point, ":var3"),
    (store_sqrt, ":var5", ":var3"),
    (convert_from_fixed_point, ":var5"),
    (try_begin),
      (eq, ":var1", 0),
      (try_for_range, ":var6", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_get_slot, ":var7", ":var6", 30),
        (val_sub, ":var7", 1),
        (val_max, ":var7", 0),
        (faction_set_slot, ":var6", 30, ":var7"),
      (try_end),
    (try_end),
    (eq, "$g_player_is_captive", 0),
    (try_for_range, ":var8", "p_town_1", "p_salt_mine"),
      (store_faction_of_party, ":var6", ":var8"),
      (store_relation, ":var9", ":var6", "fac_player_supporters_faction"),
      (lt, ":var9", 0),
      (store_distance_to_party_from_party, ":var10", "p_main_party", ":var8"),
      (lt, ":var10", 5),
      (store_mul, ":var11", ":var10", ":var10"),
      (store_sub, ":var12", 20, ":var11"),
      (store_sub, ":var13", 20, ":var9"),
      (store_mul, ":var14", ":var12", ":var13"),
      (val_mul, ":var14", ":var5"),
      (store_div, ":var15", ":var14", 10),
      (store_random_in_range, ":var16", 0, 1000),
      (lt, ":var16", ":var15"),
      (faction_get_slot, ":var7", ":var6", 30),
      (val_add, ":var7", 1),
      (val_min, ":var7", 100),
      (faction_set_slot, ":var6", 30, ":var7"),
      (try_begin),
        (neg|party_slot_ge, ":var8", 42, ":var2"),
        (str_store_party_name_link, s1, ":var8"),
        (display_message, "@Your party is spotted by {s1}."),
        (party_set_slot, ":var8", 42, ":var0"),
      (try_end),
    (try_end),
  ]),

  (14,
  [
    (eq, "$g_player_is_captive", 0),
    (party_get_num_companion_stacks, ":var0", "p_main_party"),
    (assign, ":var1", 0),
    (try_for_range, ":var2", 0, ":var0"),
      (party_stack_get_size, ":var3", "p_main_party", ":var2"),
      (val_add, ":var1", ":var3"),
    (try_end),
    (try_for_range, ":var2", 0, ":var0"),
      (party_stack_get_troop_id, ":var4", "p_main_party", ":var2"),
      (troop_get_type, ":var5", ":var4"),
      (try_begin),
        (this_or_next|eq, ":var5", 2),
        (eq, ":var5", 19),
        (party_stack_get_size, ":var6", "p_main_party", ":var2"),
        (val_sub, ":var1", ":var6"),
      (try_end),
      (try_begin),
        (eq, ":var5", 7),
        (party_stack_get_size, ":var6", "p_main_party", ":var2"),
        (val_add, ":var1", ":var6"),
      (try_end),
    (try_end),
    (val_div, ":var1", 3),
    (try_begin),
      (eq, ":var1", 0),
      (val_add, ":var1", 1),
    (try_end),
    (try_begin),
      (assign, ":var7", 0),
      (try_for_range, ":var8", "itm_wine", "itm_siege_supply"),
        (call_script, "script_cf_player_has_item_without_modifier", ":var8", 41),
        (val_add, ":var7", 1),
      (try_end),
      (try_begin),
        (ge, ":var7", 6),
        (unlock_achievement, 36),
      (try_end),
    (try_end),
    (assign, ":var9", ":var1"),
    (assign, ":var10", 0),
    (try_for_range, ":var11", 0, ":var9"),
      (assign, ":var12", 0),
      (try_for_range, ":var13", "itm_wine", "itm_siege_supply"),
        (item_set_slot, ":var13", 0, 0),
        (call_script, "script_cf_player_has_item_without_modifier", ":var13", 41),
        (val_add, ":var12", 1),
      (try_end),
      (try_begin),
        (gt, ":var12", 0),
        (store_random_in_range, ":var14", 0, ":var12"),
        (call_script, "script_consume_food", ":var14"),
      (else_try),
        (eq, ":var10", 0),
        (display_message, "@Party has nothing to eat!", 0xFF0000),
        (call_script, "script_change_player_party_morale", -3),
        (assign, ":var10", 1),
        (try_begin),
          (gt, ":var1", 1),
          (call_script, "script_objectionable_action", 2, "str_men_hungry"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (25,
  [
    (troop_get_inventory_capacity, ":var0", "trp_player"),
    (store_skill_level, ":var1", "skl_inventory_management", "trp_player"),
    (val_mul, ":var1", 4),
    (val_div, ":var1", 5),
    (try_for_range, ":var2", 10, ":var0"),
      (troop_get_inventory_slot, ":var3", "trp_player", ":var2"),
      (this_or_next|eq, ":var3", "itm_cattle_meat"),
      (this_or_next|eq, ":var3", "itm_chicken"),
      (eq, ":var3", "itm_pork"),
      (troop_get_inventory_slot_modifier, ":var4", "trp_player", ":var2"),
      (try_begin),
        (ge, ":var4", 37),
        (lt, ":var4", 41),
        (val_add, ":var4", 1),
        (try_begin),
          (eq, ":var4", 41),
          (troop_inventory_slot_get_item_amount, ":var5", "trp_player", ":var2"),
          (troop_inventory_slot_get_item_max_amount, ":var6", "trp_player", ":var2"),
          (store_sub, ":var5", ":var6", ":var5"),
          (val_mul, ":var5", 100),
          (val_div, ":var5", ":var6"),
          (store_random_in_range, ":var6", 0, ":var5"),
          (try_begin),
            (lt, ":var6", ":var1"),
            (ge, "$g_dplmc_gold_changes", 0),
            (assign, ":var4", 40),
          (else_try),
            (call_script, "script_objectionable_action", 1, "str_rotten_food"),
          (try_end),
        (try_end),
        (troop_set_inventory_slot_modifier, "trp_player", ":var2", ":var4"),
      (else_try),
        (lt, ":var4", 37),
        (troop_set_inventory_slot_modifier, "trp_player", ":var2", 37),
      (try_end),
    (try_end),
  ]),

  (72,
  []),

  (0.35,
  [
    (neg|key_is_down, key_space),
    (try_for_parties, ":var0"),
      (party_is_active, ":var0"),
      (party_get_current_terrain, ":var1", ":var0"),
      (party_get_template_id, ":var2", ":var0"),
      (neq, ":var0", "p_main_party"),
      (this_or_next|neq, ":var2", "pt_sea_traders"),
      (this_or_next|neq, ":var2", "pt_sea_raiders_ships"),
      (this_or_next|neq, ":var2", "pt_raiders_ships"),
      (neq, ":var2", "pt_pirate_ships"),
      (assign, ":var3", 1),
      (try_begin),
        (eq, ":var2", "pt_none"),
        (party_get_icon, ":var4", ":var0"),
        (eq, ":var4", "icon_ship_on_land"),
        (assign, ":var3", 0),
      (try_end),
      (eq, ":var3", 1),
      (try_begin),
        (this_or_next|eq, ":var1", 7),
        (this_or_next|eq, ":var1", 8),
        (eq, ":var1", 0),
        (call_script, "script_list_index_of", "trp_list_04", ":var0"),
        (try_begin),
          (eq, reg1, -1),
          (party_get_icon, ":var5", ":var0"),
          (party_set_icon, ":var0", "icon_ship"),
          (call_script, "script_list_add", "trp_list_04", ":var0"),
          (call_script, "script_list_add", "trp_list_05", ":var5"),
        (try_end),
      (try_end),
    (try_end),
    (call_script, "script_list_count", "trp_list_04"),
    (assign, ":var6", reg1),
    (val_add, ":var6", 1),
    (gt, ":var6", 1),
    (try_for_range, ":var7", 1, ":var6"),
      (call_script, "script_list_at_nc", "trp_list_04", ":var7"),
      (assign, ":var0", reg1),
      (try_begin),
        (neg|party_is_active, ":var0"),
        (call_script, "script_list_remove_at", "trp_list_04", ":var7"),
        (call_script, "script_list_remove_at", "trp_list_05", ":var7"),
        (val_sub, ":var6", 1),
        (val_sub, ":var7", 1),
      (else_try),
        (party_get_current_terrain, ":var1", ":var0"),
        (neq, ":var1", 7),
        (neq, ":var1", 8),
        (neq, ":var1", 0),
        (party_get_template_id, ":var2", ":var0"),
        (neq, ":var2", "pt_sea_traders"),
        (call_script, "script_list_at_nc", "trp_list_05", ":var7"),
        (assign, ":var5", reg1),
        (party_set_icon, ":var0", ":var5"),
        (call_script, "script_list_remove_at", "trp_list_04", ":var7"),
        (call_script, "script_list_remove_at", "trp_list_05", ":var7"),
        (val_sub, ":var6", 1),
        (val_sub, ":var7", 1),
      (try_end),
    (try_end),
  ]),

  (1.5,
  []),

  (2,
  [
    (store_troop_gold, ":var0", "trp_player"),
    (store_div, ":var1", ":var0", 100),
    (troop_get_inventory_capacity, ":var2", "trp_player"),
    (try_for_range, ":var3", 0, ":var2"),
      (troop_get_inventory_slot, ":var4", "trp_player", ":var3"),
      (ge, ":var4", 0),
      (try_begin),
        (is_between, ":var4", "itm_spice", "itm_siege_supply"),
        (store_item_value, ":var5", ":var4"),
        (val_add, ":var0", ":var5"),
      (try_end),
    (try_end),
    (val_clamp, ":var1", 0, 100),
    (try_begin),
      (is_between, "$g_player_raiding_village", "p_village_1", "p_salt_mine"),
      (assign, ":var1", 0),
    (try_end),
    (party_set_bandit_attraction, "p_main_party", ":var1"),
  ]),

  (3,
  [
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (faction_slot_eq, "fac_player_supporters_faction", 21, 2),
      (store_faction_of_party, ":var1", ":var0"),
      (eq, ":var1", "fac_player_supporters_faction"),
      (call_script, "script_activate_player_faction", "trp_player"),
    (try_end),
    (try_begin),
      (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (le, "$g_player_minister", 0),
      (faction_get_slot, ":var2", "$players_kingdom", 11),
      (ge, ":var2", 0),
      (try_begin),
        (this_or_next|eq, ":var2", "trp_player"),
        (troop_slot_eq, "trp_player", 30, ":var2"),
        (assign, "$g_player_minister", "trp_temporary_minister"),
        (troop_set_faction, "trp_temporary_minister", "fac_player_supporters_faction"),
      (else_try),
        (is_between, ":var2", "trp_npc1", "trp_heroes_end"),
        (troop_slot_eq, ":var2", 30, "trp_player"),
        (assign, "$g_player_minister", "trp_temporary_minister"),
        (troop_set_faction, "trp_temporary_minister", "fac_player_supporters_faction"),
      (try_end),
    (try_end),
  ]),

  (17,
  [
    (assign, ":var0", reg0),
    (assign, ":var1", reg1),
    (assign, ":var2", reg2),
    (gt, "$g_prisoner_recruit_troop_id", 0),
    (gt, "$g_prisoner_recruit_size", 0),
    (is_currently_night),
    (try_begin),
      (store_skill_level, ":var3", "skl_leadership", "trp_player"),
      (val_mul, ":var3", 8),
      (store_sub, ":var4", 33, ":var3"),
      (gt, ":var4", 0),
      (assign, ":var5", 0),
      (try_for_range, ":var6", 0, "$g_prisoner_recruit_size"),
        (store_random_in_range, ":var7", 0, 100),
        (lt, ":var7", ":var4"),
        (val_add, ":var5", 1),
      (try_end),
      (party_remove_members, "p_main_party", "$g_prisoner_recruit_troop_id", ":var5"),
      (assign, ":var5", reg0),
      (gt, ":var5", 0),
      (try_begin),
        (gt, ":var5", 1),
        (assign, reg2, 1),
      (else_try),
        (assign, reg2, 0),
      (try_end),
      (assign, reg1, ":var5"),
      (str_store_troop_name_by_count, s1, "$g_prisoner_recruit_troop_id", ":var5"),
      (display_log_message, "@{reg1} {s1} {reg2?have:has} escaped from your party during the night."),
    (try_end),
    (assign, "$g_prisoner_recruit_troop_id", 0),
    (assign, "$g_prisoner_recruit_size", 0),
    (assign, reg0, ":var0"),
    (assign, reg1, ":var1"),
    (assign, reg2, ":var2"),
  ]),

  (25,
  [
    (neq, "$g_ransom_offer_rejected", 1),
    (assign, ":var0", reg0),
    (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", "p_main_party"),
    (eq, reg0, 0),
    (assign, ":var1", "p_village_1"),
    (try_for_range, ":var2", "p_town_1", ":var1"),
      (party_slot_eq, ":var2", 7, "trp_player"),
      (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", ":var2"),
      (eq, reg0, 1),
      (assign, ":var1", 0),
    (try_end),
    (assign, reg0, ":var0"),
  ]),

  (73,
  [
    (assign, "$g_ransom_offer_rejected", 0),
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (party_get_slot, ":var1", ":var0", 7),
      (gt, ":var1", 0),
      (party_get_num_prisoner_stacks, ":var2", ":var0"),
      (store_faction_of_troop, ":var3", ":var1"),
      (troop_get_slot, ":var4", ":var1", 11),
      (str_store_faction_name, s2, ":var3"),
      (try_for_range_backwards, ":var5", 0, ":var2"),
        (party_prisoner_stack_get_troop_id, ":var6", ":var0", ":var5"),
        (troop_is_hero, ":var6"),
        (troop_slot_eq, ":var6", 2, 2),
        (store_random_in_range, ":var7", 0, 100),
        (try_begin),
          (le, ":var7", 10),
          (assign, ":var8", reg0),
          (call_script, "script_calculate_ransom_amount_for_troop", ":var6"),
          (assign, ":var9", reg0),
          (assign, reg0, ":var8"),
          (call_script, "script_dplmc_remove_gold_from_lord_and_holdings", ":var9", ":var6"),
          (val_add, ":var4", ":var9"),
          (party_remove_prisoners, ":var0", ":var6", 1),
          (call_script, "script_remove_troop_from_prison", ":var6"),
          (store_faction_of_troop, ":var10", ":var6"),
          (str_store_troop_name, s1, ":var6"),
          (str_store_faction_name, s2, ":var3"),
          (str_store_faction_name, s3, ":var10"),
          (faction_get_color, ":var11", ":var10"),
          (display_log_message, "@{s1} of {s3} has been released from captivity by {s2}.", ":var11"),
        (try_end),
        (troop_set_slot, ":var1", 11, ":var4"),
      (try_end),
    (try_end),
  ]),

  (71,
  [
    (call_script, "script_update_mercenary_units_of_towns"),
    (call_script, "script_update_mercenary_units_of_towns_2"),
    (call_script, "script_update_mercenary_units_of_towns_3"),
    (call_script, "script_update_companion_candidates_in_taverns"),
    (call_script, "script_update_ransom_brokers"),
    (call_script, "script_update_tavern_travellers"),
    (call_script, "script_update_tavern_minstrels"),
    (call_script, "script_update_booksellers"),
    (call_script, "script_update_humanitarians"),
    (call_script, "script_update_tavernmerchants"),
    (call_script, "script_update_cultists"),
    (call_script, "script_update_villages_infested_by_bandits"),
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_update_volunteer_troops_in_village", ":var0"),
      (call_script, "script_update_npc_volunteer_troops_in_village", ":var0"),
    (try_end),
  ]),

  (23,
  [
    (call_script, "script_update_other_taverngoers"),
  ]),

  (36,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, ":var0", 0, 3),
      (party_slot_eq, ":var0", 0, 4),
      (call_script, "script_center_remove_walker_type_from_walkers", ":var0", 1),
      (call_script, "script_center_remove_walker_type_from_walkers", ":var0", 2),
      (store_random_in_range, ":var1", 0, 100),
      (try_begin),
        (lt, ":var1", 70),
        (neg|party_slot_ge, ":var0", 50, 60),
        (assign, ":var2", reg0),
        (call_script, "script_cf_center_get_free_walker", ":var0"),
        (call_script, "script_center_set_walker_to_type", ":var0", reg0, 1),
        (assign, reg0, ":var2"),
      (try_end),
    (try_end),
  ]),

  (12,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 124),
      (gt, ":var1", 0),
      (party_get_slot, ":var2", ":var0", 125),
      (store_current_hours, ":var3"),
      (ge, ":var3", ":var2"),
      (party_set_slot, ":var0", ":var1", 1),
      (party_set_slot, ":var0", 124, 0),
      (call_script, "script_get_improvement_details", ":var1"),
      (try_begin),
        (party_slot_eq, ":var0", 7, "trp_player"),
        (str_store_party_name, s4, ":var0"),
        (display_log_message, "@Building of {s0} in {s4} has been completed."),
      (try_end),
      (try_begin),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 131),
        (call_script, "script_change_center_prosperity", ":var0", 5),
      (else_try),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 136),
        (call_script, "script_change_center_prosperity", ":var0", 10),
      (else_try),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 134),
        (call_script, "script_change_center_prosperity", ":var0", 2),
      (else_try),
        (is_between, ":var0", "p_town_1", "p_salt_mine"),
        (eq, ":var1", 138),
        (call_script, "script_change_center_prosperity", ":var0", 5),
      (else_try),
        (is_between, ":var0", "p_town_1", "p_castle_1"),
        (eq, ":var1", 142),
        (call_script, "script_change_center_prosperity", ":var0", 10),
      (else_try),
        (is_between, ":var0", "p_town_1", "p_castle_1"),
        (eq, ":var1", 143),
        (call_script, "script_change_center_prosperity", ":var0", 20),
      (else_try),
        (is_between, ":var0", "p_town_1", "p_castle_1"),
        (eq, ":var1", 144),
        (call_script, "script_change_center_prosperity", ":var0", 10),
      (else_try),
        (is_between, ":var0", "p_town_1", "p_castle_1"),
        (eq, ":var1", 137),
        (call_script, "script_change_center_prosperity", ":var0", 10),
      (try_end),
    (try_end),
  ]),

  (25,
  [
    (assign, ":var0", reg0),
    (assign, ":var1", 0),
    (try_for_range, ":var2", "p_town_1", "p_castle_1"),
      (party_get_slot, ":var3", ":var2", 166),
      (try_begin),
        (eq, ":var3", 1),
        (call_script, "script_fill_tournament_participants_troop", ":var2", 0),
        (call_script, "script_sort_tournament_participant_troops"),
        (call_script, "script_get_num_tournament_participants"),
        (store_sub, ":var4", reg0, 1),
        (call_script, "script_remove_tournament_participants_randomly", ":var4"),
        (call_script, "script_sort_tournament_participant_troops"),
        (troop_get_slot, ":var5", "trp_tournament_participants", 0),
        (try_begin),
          (is_between, ":var5", "trp_npc1", "trp_knight_1_1_wife"),
          (str_store_troop_name_link, s1, ":var5"),
          (str_store_party_name_link, s2, ":var2"),
          (display_log_message, "@{s1} has won the tournament at {s2}.", 0xF0DD33),
          (call_script, "script_change_troop_renown", ":var5", 20),
          (call_script, "script_dplmc_distribute_gold_to_lord_and_holdings", 1000, ":var5"),
        (try_end),
      (try_end),
      (val_sub, ":var3", 1),
      (val_max, ":var3", 0),
      (party_set_slot, ":var2", 166, ":var3"),
      (try_begin),
        (gt, ":var3", 0),
        (val_add, ":var1", 1),
      (try_end),
    (try_end),
    (assign, reg0, ":var0"),
    (try_for_range, ":var2", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, ":var2", 0, 3),
      (party_slot_eq, ":var2", 0, 4),
      (party_get_slot, ":var6", ":var2", 165),
      (try_begin),
        (le, ":var6", 0),
        (assign, ":var7", 0),
        (try_begin),
          (check_quest_active, "qst_deal_with_night_bandits"),
          (quest_slot_eq, "qst_deal_with_night_bandits", 1, ":var2"),
          (neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
          (assign, ":var7", 1),
        (else_try),
          (store_random_in_range, ":var8", 0, 100),
          (lt, ":var8", 3),
          (assign, ":var7", 1),
        (try_end),
        (try_begin),
          (eq, ":var7", 1),
          (store_random_in_range, ":var8", 0, 3),
          (try_begin),
            (eq, ":var8", 0),
            (assign, ":var9", "trp_bandit"),
          (else_try),
            (eq, ":var8", 1),
            (assign, ":var9", "trp_looter"),
          (else_try),
            (assign, ":var9", "trp_skaven_corsair"),
          (try_end),
          (party_set_slot, ":var2", 165, ":var9"),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var2"),
            (str_store_troop_name_plural, s2, ":var9"),
            (display_message, "@{!}{s1} is infested by {s2} (at night)."),
          (try_end),
        (try_end),
      (else_try),
        (try_begin),
          (assign, ":var10", 40),
          (try_begin),
            (party_slot_eq, ":var2", 0, 3),
            (assign, ":var10", 20),
          (try_end),
          (store_random_in_range, ":var8", 0, 100),
          (lt, ":var8", ":var10"),
          (party_set_slot, ":var2", 165, 0),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var2"),
            (display_message, "@{s1} is no longer infested by bandits (at night)."),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
    (try_for_range, ":var11", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var11", 4, 6),
      (faction_get_slot, ":var12", ":var11", 5),
      (is_between, ":var12", "p_town_1", "p_castle_1"),
      (party_slot_ge, ":var12", 166, 1),
      (party_set_slot, ":var12", 166, 2),
    (try_end),
    (try_begin),
      (lt, ":var1", 3),
      (store_random_in_range, ":var8", 0, 100),
      (lt, ":var8", 30),
      (store_random_in_range, ":var13", "p_town_1", "p_castle_1"),
      (store_random_in_range, ":var14", 12, 15),
      (party_set_slot, ":var13", 166, ":var14"),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (str_store_party_name, s1, ":var13"),
        (display_message, "@{!}{s1} is holding a tournament."),
      (try_end),
    (try_end),
  ]),

  (3,
  [
    (assign, "$g_player_tournament_placement", 0),
  ]),

  (8,
  []),

  (1,
  [
    (neg|map_free),
    (is_currently_night),
    (is_between, "$g_last_rest_center", "p_town_1", "p_salt_mine"),
    (neg|party_slot_eq, "$g_last_rest_center", 7, "trp_player"),
    (party_get_slot, ":var0", "$g_last_rest_center", 7),
    (assign, ":var1", reg0),
    (assign, reg0, 0),
    (try_begin),
      (is_between, ":var0", "trp_knight_1_1", "trp_heroes_end"),
      (call_script, "script_dplmc_is_affiliated_family_member", ":var0"),
      (try_begin),
        (neq, reg0, 0),
        (display_message, "@You are within the walls of an affiliated family member and don't have to pay for accommodation."),
      (try_end),
    (try_end),
    (assign, ":var2", reg0),
    (assign, reg0, ":var1"),
    (eq, ":var2", 0),
    (store_faction_of_party, ":var3", "$g_last_rest_center"),
    (neq, ":var3", "fac_player_supporters_faction"),
    (store_current_hours, ":var4"),
    (ge, ":var4", "$g_last_rest_payment_until"),
    (store_add, "$g_last_rest_payment_until", ":var4", 24),
    (store_troop_gold, ":var5", "trp_player"),
    (party_get_num_companions, ":var6", "p_main_party"),
    (store_div, ":var7", ":var6", 4),
    (val_add, ":var7", 1),
    (try_begin),
      (ge, ":var5", ":var7"),
      (display_message, "@You pay for accommodation."),
      (troop_remove_gold, "trp_player", ":var7"),
      (try_begin),
        (party_get_slot, ":var8", "$g_last_rest_center", 61),
        (party_get_slot, ":var9", "$g_last_rest_center", 26),
        (store_random_in_range, ":var9", ":var9", 1100),
        (ge, ":var9", 900),
        (val_sub, ":var9", ":var7"),
        (val_div, ":var9", 100),
        (val_max, ":var9", 1),
        (call_script, "script_change_faction_troop_morale", ":var8", ":var9", 0),
      (try_end),
    (else_try),
      (gt, ":var5", 0),
      (troop_remove_gold, "trp_player", ":var5"),
      (display_message, "@You are unable to pay for accommodation!", 0xF0DD33),
      (play_sound, "snd_encounter_nobleman"),
      (val_div, ":var7", -10),
      (call_script, "script_change_player_relation_with_center", "$g_last_rest_center", ":var7"),
      (rest_for_hours, 1, "$g_warsword_wait_multiplier", 0),
    (try_end),
  ]),

  (31,
  [
    (call_script, "script_spawn_bandits"),
    (try_for_parties, ":var0"),
      (party_is_active, ":var0"),
      (party_get_template_id, ":var1", ":var0"),
      (this_or_next|eq, ":var1", "pt_looters"),
      (eq, ":var1", "pt_leaded_looters"),
      (get_party_ai_behavior, ":var2", ":var0"),
      (eq, ":var2", 5),
      (get_party_ai_object, ":var3", ":var0"),
      (is_between, ":var3", "p_town_1", "p_salt_mine"),
      (party_set_ai_behavior, ":var0", ai_bhvr_patrol_party),
      (party_set_ai_patrol_radius, ":var0", 22),
    (try_end),
  ]),

  (25,
  [
    (call_script, "script_update_party_creation_random_limits"),
  ]),

  (25,
  [
    (assign, ":var0", 0),
    (assign, ":var1", 0),
    (try_for_range, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_set_slot, ":var2", 20, 0),
    (try_end),
    (try_for_parties, ":var3"),
      (store_faction_of_party, ":var4", ":var3"),
      (party_get_template_id, ":var5", ":var3"),
      (is_between, ":var4", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (this_or_next|is_between, ":var3", "p_town_1", "p_salt_mine"),
      (this_or_next|is_between, ":var5", "pt_mercenary_band_1", "pt_sea_raiders_ships"),
      (this_or_next|party_slot_eq, ":var3", 0, 13),
      (this_or_next|party_slot_eq, ":var3", 0, 5),
      (this_or_next|party_slot_eq, ":var3", 0, 10),
      (party_slot_eq, ":var3", 0, 7),
      (faction_get_slot, ":var6", ":var4", 20),
      (val_add, ":var6", 1),
      (faction_set_slot, ":var4", 20, ":var6"),
    (try_end),
    (try_for_range, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var2", 21, 0),
      (call_script, "script_faction_recalculate_strength", ":var2"),
      (call_script, "script_evaluate_realm_stability", ":var2"),
      (val_add, ":var1", 1),
      (faction_slot_eq, ":var2", 20, 0),
      (assign, ":var7", 0),
      (try_begin),
        (eq, ":var2", "fac_player_supporters_faction"),
        (try_begin),
          (le, "$supported_pretender", 0),
          (faction_set_slot, ":var2", 21, 2),
          (call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":var2", 0),
          (assign, ":var7", 1),
        (try_end),
      (else_try),
        (neq, "$players_kingdom", ":var2"),
        (faction_set_slot, ":var2", 21, 1),
        (try_for_parties, ":var3"),
          (store_faction_of_party, ":var4", ":var3"),
          (eq, ":var4", ":var2"),
          (party_get_slot, ":var8", ":var3", 123),
          (store_faction_of_party, ":var9", ":var8"),
          (party_set_faction, ":var3", ":var9"),
        (try_end),
        (assign, ":var10", -1),
        (try_for_range, ":var11", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
          (troop_slot_eq, ":var11", 14, ":var2"),
          (assign, ":var10", ":var11"),
        (try_end),
        (try_begin),
          (is_between, ":var10", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
          (neq, ":var10", "$supported_pretender"),
          (troop_set_slot, ":var10", 12, 0),
        (try_end),
        (assign, ":var7", 1),
        (try_begin),
          (eq, "$players_oath_renounced_against_kingdom", ":var2"),
          (assign, "$players_oath_renounced_against_kingdom", 0),
          (assign, "$players_oath_renounced_given_center", 0),
          (assign, "$players_oath_renounced_begin_time", 0),
          (call_script, "script_add_notification_menu", "mnu_notification_oath_renounced_faction_defeated", ":var2", 0),
        (try_end),
        (call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":var2", 0),
      (try_end),
      (try_begin),
        (eq, ":var7", 1),
        (val_sub, ":var1", 1),
      (try_end),
      (try_for_range, ":var12", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (call_script, "script_update_faction_notes", ":var12"),
      (try_end),
    (try_end),
    (try_begin),
      (eq, ":var1", 1),
      (eq, "$g_one_faction_left_notification_shown", 0),
      (assign, "$g_one_faction_left_notification_shown", 1),
      (try_for_range, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var2", 21, 0),
        (call_script, "script_add_notification_menu", "mnu_notification_one_faction_left", ":var2", 0),
      (try_end),
    (try_end),
  ]),

  (3,
  [
    (assign, ":var0", reg0),
    (assign, ":var1", "fac_player_supporters_faction"),
    (try_begin),
      (is_between, "$players_kingdom", "fac_kingdom_1", "fac_kingdoms_end"),
      (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
      (ge, reg0, 50),
      (assign, ":var1", "$players_kingdom"),
    (try_end),
    (assign, reg0, ":var0"),
    (try_begin),
      (is_between, "$g_player_court", "p_town_1", "p_salt_mine"),
      (party_slot_eq, "$g_player_court", 39, "trp_peasant_woman"),
      (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (else_try),
      (is_between, "$g_player_court", "p_town_1", "p_salt_mine"),
      (store_faction_of_party, ":var2", "$g_player_court"),
      (neq, ":var2", "fac_player_supporters_faction"),
      (neq, ":var2", ":var1"),
      (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (else_try),
      (lt, "$g_player_court", "p_town_1"),
      (this_or_next|faction_slot_eq, "fac_player_supporters_faction", 11, "trp_player"),
      (gt, "$g_player_minister", 0),
      (assign, ":var3", 0),
      (try_for_range, ":var4", "p_town_1", "p_village_1"),
        (eq, ":var3", 0),
        (store_faction_of_party, ":var2", ":var4"),
        (this_or_next|eq, ":var2", ":var1"),
        (eq, ":var2", "fac_player_supporters_faction"),
        (assign, ":var3", ":var4"),
      (try_end),
      (ge, ":var3", 1),
      (call_script, "script_add_notification_menu", "mnu_notification_court_lost", 0, 0),
    (try_end),
    (try_for_parties, ":var5"),
      (gt, ":var5", "p_spawn_points_end"),
      (party_is_active, ":var5"),
      (neq, ":var5", "p_main_party"),
      (party_get_template_id, ":var6", ":var5"),
      (try_begin),
        (is_between, ":var6", "pt_steppe_bandits", "pt_nurgle_army"),
        (party_template_get_slot, ":var7", ":var6", 4),
        (party_is_active, ":var7"),
        (try_begin),
          (gt, ":var7", "p_spawn_points_end"),
          (store_distance_to_party_from_party, ":var8", ":var5", ":var7"),
          (gt, ":var8", 30),
          (party_set_ai_behavior, ":var5", ai_bhvr_travel_to_point),
          (party_get_position, pos5, ":var7"),
          (party_set_ai_target_position, ":var5", pos5),
        (else_try),
          (get_party_ai_behavior, ":var9", ":var5"),
          (eq, ":var9", 6),
          (try_begin),
            (gt, ":var7", "p_spawn_points_end"),
            (store_distance_to_party_from_party, ":var8", ":var5", ":var7"),
            (lt, ":var8", 3),
            (party_set_ai_behavior, ":var5", ai_bhvr_patrol_party),
            (party_template_get_slot, ":var10", ":var6", 5),
            (is_between, ":var10", "p_steppe_bandit_spawn_point", "p_spawn_points_end"),
            (party_set_ai_object, ":var5", ":var10"),
            (party_set_ai_patrol_radius, ":var5", 25),
          (else_try),
            (lt, ":var7", "p_spawn_points_end"),
            (party_set_ai_behavior, ":var5", ai_bhvr_patrol_party),
            (party_template_get_slot, ":var10", ":var6", 5),
            (is_between, ":var10", "p_steppe_bandit_spawn_point", "p_spawn_points_end"),
            (party_set_ai_object, ":var5", ":var10"),
            (party_set_ai_patrol_radius, ":var5", 25),
          (try_end),
        (try_end),
      (else_try),
        (this_or_next|eq, ":var6", "pt_center_reinforcements"),
        (eq, ":var6", "pt_routed_warriors"),
        (party_slot_eq, ":var5", 0, 6),
        (party_get_cur_town, ":var11", ":var5"),
        (try_begin),
          (eq, ":var6", "pt_center_reinforcements"),
          (party_get_slot, ":var12", ":var5", 5),
          (neq, ":var11", ":var12"),
          (assign, ":var11", -1),
          (party_detach, ":var5"),
          (party_set_ai_behavior, ":var5", ai_bhvr_travel_to_party),
          (party_set_ai_object, ":var5", ":var12"),
          (party_set_flags, ":var5", pf_default_behavior, 0),
        (try_end),
        (is_between, ":var11", "p_town_1", "p_village_1"),
        (try_begin),
          (party_get_num_companion_stacks, ":var13", ":var5"),
          (store_faction_of_party, ":var14", ":var11"),
          (try_begin),
            (this_or_next|eq, ":var14", "fac_player_faction"),
            (this_or_next|eq, ":var14", "fac_player_supporters_faction"),
            (eq, ":var14", "$players_kingdom"),
            (neg|is_between, ":var14", "fac_kingdom_1", "fac_kingdoms_end"),
            (is_between, "$g_player_culture", "fac_kingdom_1", "fac_kingdoms_end"),
            (assign, ":var14", "$g_player_culture"),
          (try_end),
          (try_for_range_backwards, ":var15", 0, ":var13"),
            (party_stack_get_troop_id, ":var16", ":var5", ":var15"),
            (neg|troop_is_hero, ":var16"),
            (assign, ":var17", 100),
            (try_begin),
              (store_faction_of_troop, ":var18", ":var16"),
              (is_between, ":var18", "fac_kingdom_1", "fac_kingdoms_end"),
              (store_relation, ":var17", ":var14", ":var18"),
            (try_end),
            (this_or_next|is_between, ":var16", "trp_looter", "trp_black_khergit_horseman"),
            (lt, ":var17", 0),
            (neq, ":var5", "p_main_party"),
            (party_stack_get_size, ":var19", ":var5", ":var15"),
            (party_remove_members, ":var5", ":var16", ":var19"),
            (party_add_prisoners, ":var5", ":var16", ":var19"),
          (try_end),
        (try_end),
        (call_script, "script_party_add_party", ":var11", ":var5"),
        (try_begin),
          (eq, ":var6", "pt_center_reinforcements"),
          (party_get_slot, ":var20", ":var5", 123),
          (party_set_slot, ":var20", 60, -1),
        (try_end),
        (party_detach, ":var5"),
        (remove_party, ":var5"),
      (try_end),
    (try_end),
    (try_begin),
      (troop_get_slot, ":var21", "trp_player", 34),
      (gt, ":var21", 0),
      (neg|check_quest_active, "qst_wed_betrothed"),
      (neg|check_quest_active, "qst_wed_betrothed_female"),
      (str_store_troop_name, s5, ":var21"),
      (display_message, "@Betrothal to {s5} expires"),
      (troop_set_slot, "trp_player", 34, -1),
      (troop_set_slot, ":var21", 34, -1),
    (try_end),
  ]),

  (165,
  [
    (troop_get_slot, ":var0", "trp_player", 7),
    (store_div, ":var1", ":var0", 200),
    (val_sub, ":var0", ":var1"),
    (troop_set_slot, "trp_player", 7, ":var0"),
    (try_begin),
      (gt, "$g_player_minister", 0),
      (neq, "$g_player_minister", "trp_temporary_minister"),
      (call_script, "script_change_troop_renown", "$g_player_minister", 20),
    (try_end),
  ]),

  (1,
  [
    (neg|map_free),
    (gt, "$g_player_reading_book", 0),
    (player_has_item, "$g_player_reading_book"),
    (store_attribute_level, ":var0", "trp_player", ca_intelligence),
    (item_get_slot, ":var1", "$g_player_reading_book", 4),
    (le, ":var1", ":var0"),
    (item_get_slot, ":var2", "$g_player_reading_book", 2),
    (item_get_slot, ":var3", "$g_player_reading_book", 3),
    (eq, ":var3", 0),
    (val_add, ":var2", 7),
    (item_set_slot, "$g_player_reading_book", 2, ":var2"),
    (ge, ":var2", 1000),
    (item_set_slot, "$g_player_reading_book", 3, 1),
    (str_store_item_name, s1, "$g_player_reading_book"),
    (str_clear, s2),
    (try_begin),
      (eq, "$g_player_reading_book", "itm_book_tactics"),
      (troop_raise_skill, "trp_player", "skl_tactics", 1),
      (str_store_string, s2, "@ Your tactics skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_persuasion"),
      (troop_raise_skill, "trp_player", "skl_persuasion", 1),
      (str_store_string, s2, "@ Your persuasion skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_leadership"),
      (troop_raise_skill, "trp_player", "skl_leadership", 1),
      (str_store_string, s2, "@ Your leadership skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_intelligence"),
      (troop_raise_attribute, "trp_player", ca_intelligence, 1),
      (str_store_string, s2, "@ Your intelligence has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_trade"),
      (troop_raise_skill, "trp_player", "skl_trade", 1),
      (str_store_string, s2, "@ Your trade skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_weapon_mastery"),
      (troop_raise_skill, "trp_player", "skl_weapon_master", 1),
      (str_store_string, s2, "@ Your weapon master skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_engineering"),
      (troop_raise_skill, "trp_player", "skl_engineer", 1),
      (str_store_string, s2, "@ Your engineer skill has increased by 1."),
    (try_end),
    (unlock_achievement, 37),
    (try_begin),
      (eq, "$g_infinite_camping", 0),
      (dialog_box, "@You have finished reading {s1}.{s2}", "@Book Read"),
    (try_end),
    (assign, "$g_player_reading_book", 0),
  ]),

  (13,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 17),
      (store_distance_to_party_from_party, ":var1", ":var0", "p_main_party"),
      (try_begin),
        (gt, ":var1", 30),
        (remove_party, ":var0"),
        (try_begin),
          (check_quest_active, "qst_move_cattle_herd"),
          (neg|check_quest_concluded, "qst_move_cattle_herd"),
          (quest_slot_eq, "qst_move_cattle_herd", 8, ":var0"),
          (call_script, "script_fail_quest", "qst_move_cattle_herd"),
        (try_end),
      (else_try),
        (gt, ":var1", 10),
        (party_set_slot, ":var0", 7, 0),
        (party_set_ai_behavior, ":var0", ai_bhvr_hold),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 7),
      (store_faction_of_party, ":var2", ":var0"),
      (assign, ":var3", reg0),
      (try_begin),
        (eq, ":var2", "$players_kingdom"),
        (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", ":var2"),
        (ge, reg0, 50),
        (assign, ":var1", "trp_player"),
      (try_end),
      (assign, reg0, ":var3"),
      (eq, ":var1", "trp_player"),
      (party_slot_eq, ":var0", 133, 1),
      (party_get_slot, ":var4", ":var0", 26),
      (val_add, ":var4", 1),
      (val_min, ":var4", 100),
      (party_set_slot, ":var0", 26, ":var4"),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", 0, "qst_quests_end"),
      (try_begin),
        (check_quest_active, ":var0"),
        (try_begin),
          (neg|check_quest_concluded, ":var0"),
          (quest_slot_ge, ":var0", 23, 1),
          (quest_get_slot, ":var1", ":var0", 23),
          (val_sub, ":var1", 1),
          (try_begin),
            (eq, ":var1", 0),
            (call_script, "script_abort_quest", ":var0", 1),
          (else_try),
            (quest_set_slot, ":var0", 23, ":var1"),
            (assign, ":var2", reg2),
            (assign, reg2, ":var1"),
            (add_quest_note_from_sreg, ":var0", 7, "@You have {reg2} days to finish this quest.", 0),
            (assign, reg2, ":var2"),
          (try_end),
        (try_end),
      (else_try),
        (quest_slot_ge, ":var0", 25, 1),
        (quest_get_slot, ":var3", ":var0", 25),
        (val_sub, ":var3", 1),
        (quest_set_slot, ":var0", 25, ":var3"),
      (try_end),
    (try_end),
  ]),

  (2,
  [
    (eq, "$g_infinite_camping", 0),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (eq, "$g_player_is_captive", 0),
    (try_begin),
      (check_quest_active, "qst_report_to_army"),
      (faction_slot_eq, "$players_kingdom", 8, -1),
      (call_script, "script_abort_quest", "qst_report_to_army", 0),
    (try_end),
    (faction_get_slot, ":var0", "$players_kingdom", 5),
    (neg|faction_slot_eq, "$players_kingdom", 4, 0),
    (neg|faction_slot_eq, "$players_kingdom", 4, 6),
    (assign, ":var1", 1),
    (try_begin),
      (this_or_next|faction_slot_eq, "$players_kingdom", 4, 5),
      (this_or_next|faction_slot_eq, "$players_kingdom", 4, 2),
      (faction_slot_eq, "$players_kingdom", 4, 3),
      (neg|is_between, ":var0", "p_town_1", "p_village_1"),
      (assign, ":var1", 0),
    (try_end),
    (eq, ":var1", 1),
    (assign, ":var2", 0),
    (try_for_range, ":var3", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (neq, ":var3", "$players_kingdom"),
      (store_relation, ":var4", ":var3", "$players_kingdom"),
      (lt, ":var4", 0),
      (assign, ":var2", 1),
    (try_end),
    (eq, ":var2", 1),
    (neg|check_quest_active, "qst_report_to_army"),
    (neg|check_quest_active, "qst_follow_army"),
    (neg|quest_slot_ge, "qst_report_to_army", 25, 1),
    (faction_get_slot, ":var5", "$players_kingdom", 8),
    (gt, ":var5", 0),
    (troop_get_slot, ":var6", ":var5", 10),
    (gt, ":var6", 0),
    (party_is_active, ":var6"),
    (store_distance_to_party_from_party, ":var7", ":var6", "p_main_party"),
    (le, ":var7", 96),
    (assign, ":var8", 1),
    (try_for_range, ":var9", "qst_deliver_message", "qst_follow_army"),
      (check_quest_active, ":var9"),
      (quest_slot_eq, ":var9", 6, ":var5"),
      (assign, ":var8", 0),
    (try_end),
    (eq, ":var8", 1),
    (try_for_range, ":var9", "qst_destroy_bandit_lair", "qst_blank_quest_2"),
      (check_quest_active, ":var9"),
      (quest_slot_eq, ":var9", 6, ":var5"),
      (assign, ":var8", 0),
    (try_end),
    (eq, ":var8", 1),
    (try_for_range, ":var9", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
      (check_quest_active, ":var9"),
      (assign, ":var8", 0),
    (try_end),
    (eq, ":var8", 1),
    (store_character_level, ":var10", "trp_player"),
    (ge, ":var10", 8),
    (assign, ":var11", 2),
    (try_for_range, ":var12", "p_town_1", "p_salt_mine"),
      (party_slot_eq, ":var12", 7, "trp_player"),
      (try_begin),
        (party_slot_eq, ":var12", 0, 3),
        (val_add, ":var11", 3),
      (else_try),
        (party_slot_eq, ":var12", 0, 2),
        (val_add, ":var11", 1),
      (else_try),
        (val_add, ":var11", 1),
      (try_end),
    (try_end),
    (val_mul, ":var11", 4),
    (val_min, ":var11", 60),
    (quest_set_slot, "qst_report_to_army", 6, ":var5"),
    (quest_set_slot, "qst_report_to_army", 2, ":var5"),
    (quest_set_slot, "qst_report_to_army", 10, ":var11"),
    (quest_set_slot, "qst_report_to_army", 23, 4),
    (quest_set_slot, "qst_report_to_army", 24, 22),
    (jump_to_menu, "mnu_kingdom_army_quest_report_to_army"),
  ]),

  (3,
  [
    (assign, "$g_random_army_quest", -1),
    (check_quest_active, "qst_follow_army", 1),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (neg|faction_slot_eq, "$players_kingdom", 4, 0),
    (faction_get_slot, ":var0", "$players_kingdom", 8),
    (neq, ":var0", "trp_player"),
    (gt, ":var0", 0),
    (troop_get_slot, ":var1", ":var0", 10),
    (gt, ":var1", 0),
    (party_is_active, ":var1"),
    (store_distance_to_party_from_party, ":var2", ":var1", "p_main_party"),
    (try_begin),
      (lt, ":var2", 15),
      (assign, "$g_player_follow_army_warnings", 0),
      (store_current_hours, ":var3"),
      (faction_get_slot, ":var4", "$players_kingdom", 95),
      (store_sub, ":var5", ":var3", ":var4"),
      (assign, ":var6", -1),
      (try_begin),
        (store_random_in_range, ":var7", 0, 100),
        (lt, ":var7", 30),
        (troop_slot_eq, ":var0", 20, 0),
        (try_for_range, ":var8", 0, 20),
          (eq, ":var6", -1),
          (store_random_in_range, ":var9", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
          (neg|quest_slot_ge, ":var9", 25, 1),
          (try_begin),
            (eq, ":var9", "qst_deliver_cattle_to_army"),
            (try_begin),
              (faction_slot_eq, "$players_kingdom", 4, 2),
              (gt, ":var5", 120),
              (store_random_in_range, ":var10", 5, 10),
              (assign, ":var6", "qst_deliver_cattle_to_army"),
              (quest_set_slot, ":var6", 10, ":var10"),
              (quest_set_slot, ":var6", 23, 10),
              (quest_set_slot, ":var6", 24, 30),
            (try_end),
          (else_try),
            (eq, ":var9", "qst_join_siege_with_army"),
            (eq, 1, 0),
            (try_begin),
              (faction_slot_eq, "$players_kingdom", 4, 2),
              (faction_get_slot, ":var11", "$players_kingdom", 5),
              (is_between, ":var11", "p_town_1", "p_village_1"),
              (party_get_battle_opponent, ":var12", ":var1"),
              (eq, ":var12", ":var11"),
              (assign, ":var6", ":var9"),
              (quest_set_slot, ":var6", 1, ":var11"),
              (quest_set_slot, ":var6", 23, 2),
              (quest_set_slot, ":var6", 24, 15),
            (try_end),
          (else_try),
            (eq, ":var9", "qst_scout_waypoints"),
            (try_begin),
              (assign, ":var13", 100),
              (assign, "$qst_scout_waypoints_wp_1", -1),
              (assign, "$qst_scout_waypoints_wp_2", -1),
              (assign, "$qst_scout_waypoints_wp_3", -1),
              (assign, ":var14", 0),
              (assign, ":var15", reg0),
              (try_for_range, ":var8", 0, ":var13"),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_1", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (assign, "$qst_scout_waypoints_wp_1", reg0),
                (try_end),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_2", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (neq, "$qst_scout_waypoints_wp_1", reg0),
                  (assign, "$qst_scout_waypoints_wp_2", reg0),
                (try_end),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_3", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (neq, "$qst_scout_waypoints_wp_1", reg0),
                  (neq, "$qst_scout_waypoints_wp_2", reg0),
                  (assign, "$qst_scout_waypoints_wp_3", reg0),
                (try_end),
                (neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                (neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                (neq, "$qst_scout_waypoints_wp_2", "$qst_scout_waypoints_wp_3"),
                (ge, "$qst_scout_waypoints_wp_1", 0),
                (ge, "$qst_scout_waypoints_wp_2", 0),
                (ge, "$qst_scout_waypoints_wp_3", 0),
                (assign, ":var13", 0),
                (assign, ":var14", 1),
              (try_end),
              (assign, reg0, ":var15"),
              (eq, ":var14", 1),
              (assign, "$qst_scout_waypoints_wp_1_visited", 0),
              (assign, "$qst_scout_waypoints_wp_2_visited", 0),
              (assign, "$qst_scout_waypoints_wp_3_visited", 0),
              (assign, ":var6", "qst_scout_waypoints"),
              (quest_set_slot, ":var6", 23, 7),
              (quest_set_slot, ":var6", 24, 25),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (neq, ":var6", -1),
          (quest_set_slot, ":var6", 11, 0),
          (quest_set_slot, ":var6", 6, ":var0"),
          (try_begin),
            (eq, ":var6", "qst_join_siege_with_army"),
            (jump_to_menu, "mnu_kingdom_army_quest_join_siege_order"),
          (else_try),
            (assign, "$g_random_army_quest", ":var6"),
            (quest_set_slot, "$g_random_army_quest", 6, ":var0"),
            (jump_to_menu, "mnu_kingdom_army_quest_messenger"),
          (try_end),
        (try_end),
      (try_end),
    (else_try),
      (val_add, "$g_player_follow_army_warnings", 1),
      (try_begin),
        (lt, "$g_player_follow_army_warnings", 15),
        (try_begin),
          (store_mod, ":var16", "$g_player_follow_army_warnings", 3),
          (eq, ":var16", 0),
          (str_store_troop_name_link, s1, ":var0"),
          (try_begin),
            (lt, "$g_player_follow_army_warnings", 8),
          (else_try),
            (display_message, "str_marshal_warning"),
          (try_end),
        (try_end),
      (else_try),
        (jump_to_menu, "mnu_kingdom_army_follow_failed"),
      (try_end),
    (try_end),
  ]),

  (0.5,
  [
    (check_quest_active, "qst_move_cattle_herd"),
    (neg|check_quest_concluded, "qst_move_cattle_herd"),
    (quest_get_slot, ":var0", "qst_move_cattle_herd", 8),
    (quest_get_slot, ":var1", "qst_move_cattle_herd", 1),
    (store_distance_to_party_from_party, ":var2", ":var0", ":var1"),
    (lt, ":var2", 3),
    (remove_party, ":var0"),
    (call_script, "script_succeed_quest", "qst_move_cattle_herd"),
  ]),

  (2,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (ge, ":var1", 1),
      (party_is_active, ":var1"),
      (party_slot_eq, ":var1", 31, 1),
      (store_current_hours, ":var2"),
      (neg|party_slot_ge, ":var1", 32, ":var2"),
      (party_set_slot, ":var1", 30, -1),
      (party_set_slot, ":var1", 31, 0),
      (assign, ":var3", 200),
      (store_add, ":var4", ":var2", ":var3"),
      (party_set_slot, ":var1", 33, ":var4"),
    (try_end),
  ]),

  (0.5,
  [
    (assign, ":var0", reg0),
    (try_begin),
      (check_quest_active, "qst_deliver_cattle"),
      (neg|check_quest_succeeded, "qst_deliver_cattle"),
      (quest_get_slot, ":var1", "qst_deliver_cattle", 1),
      (quest_get_slot, ":var2", "qst_deliver_cattle", 10),
      (quest_get_slot, ":var3", "qst_deliver_cattle", 11),
      (store_sub, ":var4", ":var2", ":var3"),
      (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var1", ":var4"),
      (val_add, ":var3", reg0),
      (quest_set_slot, "qst_deliver_cattle", 11, ":var3"),
      (le, ":var2", ":var3"),
      (call_script, "script_succeed_quest", "qst_deliver_cattle"),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_deliver_cattle_to_army"),
      (neg|check_quest_succeeded, "qst_deliver_cattle_to_army"),
      (quest_get_slot, ":var5", "qst_deliver_cattle_to_army", 6),
      (troop_get_slot, ":var6", ":var5", 10),
      (try_begin),
        (gt, ":var6", 0),
        (quest_get_slot, ":var2", "qst_deliver_cattle_to_army", 10),
        (quest_get_slot, ":var3", "qst_deliver_cattle_to_army", 11),
        (store_sub, ":var4", ":var2", ":var3"),
        (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var6", ":var4"),
        (val_add, ":var3", reg0),
        (quest_set_slot, "qst_deliver_cattle_to_army", 11, ":var3"),
        (try_begin),
          (le, ":var2", ":var3"),
          (call_script, "script_succeed_quest", "qst_deliver_cattle_to_army"),
        (try_end),
      (else_try),
        (call_script, "script_abort_quest", "qst_deliver_cattle_to_army", 0),
      (try_end),
    (try_end),
    (assign, reg0, ":var0"),
  ]),

  (1,
  [
    (neg|map_free),
    (check_quest_active, "qst_train_peasants_against_bandits"),
    (neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
    (eq, "$qst_train_peasants_against_bandits_currently_training", 1),
    (val_add, "$qst_train_peasants_against_bandits_num_hours_trained", 1),
    (assign, ":var0", reg0),
    (call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
    (assign, ":var1", reg0),
    (assign, reg0, ":var0"),
    (store_sub, ":var2", 16, ":var1"),
    (val_mul, ":var2", 3),
    (val_div, ":var2", 5),
    (ge, "$qst_train_peasants_against_bandits_num_hours_trained", ":var2"),
    (assign, "$qst_train_peasants_against_bandits_num_hours_trained", 0),
    (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
    (jump_to_menu, "mnu_train_peasants_against_bandits_ready"),
  ]),

  (1,
  [
    (check_quest_active, "qst_scout_waypoints"),
    (neg|check_quest_succeeded, "qst_scout_waypoints"),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_1_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_1", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_1_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_1"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_2_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_2", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_2_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_2"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_3_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_3", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_3_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_3"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (eq, "$qst_scout_waypoints_wp_1_visited", 1),
    (eq, "$qst_scout_waypoints_wp_2_visited", 1),
    (eq, "$qst_scout_waypoints_wp_3_visited", 1),
    (call_script, "script_succeed_quest", "qst_scout_waypoints"),
  ]),

  (3,
  [
    (neg|map_free),
    (check_quest_active, "qst_kill_local_merchant"),
    (quest_slot_eq, "qst_kill_local_merchant", 11, 0),
    (quest_set_slot, "qst_kill_local_merchant", 11, 1),
    (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
    (assign, "$auto_enter_town", "$qst_kill_local_merchant_center"),
    (assign, "$quest_auto_menu", "mnu_kill_local_merchant_begin"),
  ]),

  (1,
  [
    (neg|map_free),
    (check_quest_active, "qst_collect_taxes"),
    (eq, "$g_player_is_captive", 0),
    (eq, "$qst_collect_taxes_currently_collecting", 1),
    (quest_get_slot, ":var0", "qst_collect_taxes", 11),
    (this_or_next|eq, ":var0", 1),
    (this_or_next|eq, ":var0", 2),
    (eq, ":var0", 3),
    (quest_get_slot, ":var1", "qst_collect_taxes", 10),
    (val_sub, ":var1", 1),
    (quest_set_slot, "qst_collect_taxes", 10, ":var1"),
    (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
    (try_begin),
      (lt, ":var1", 0),
      (assign, ":var0", 4),
      (quest_set_slot, "qst_collect_taxes", 11, 4),
      (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
      (jump_to_menu, "mnu_collect_taxes_complete"),
    (else_try),
      (assign, ":var2", "$qst_collect_taxes_hourly_income"),
      (party_get_slot, ":var3", "$g_encountered_party", 50),
      (store_add, ":var4", 30, ":var3"),
      (val_mul, ":var2", ":var4"),
      (val_div, ":var2", 80),
      (try_begin),
        (eq, "$qst_collect_taxes_halve_taxes", 1),
        (val_div, ":var2", 2),
      (try_end),
      (val_max, ":var2", 2),
      (store_random_in_range, ":var5", 1, ":var2"),
      (quest_get_slot, ":var6", "qst_collect_taxes", 22),
      (val_add, ":var6", ":var5"),
      (quest_set_slot, "qst_collect_taxes", 22, ":var6"),
      (call_script, "script_troop_add_gold", "trp_player", ":var5"),
    (try_end),
    (try_begin),
      (eq, ":var0", 1),
      (val_sub, "$qst_collect_taxes_menu_counter", 1),
      (le, "$qst_collect_taxes_menu_counter", 0),
      (quest_set_slot, "qst_collect_taxes", 11, 2),
      (jump_to_menu, "mnu_collect_taxes_revolt_warning"),
    (else_try),
      (eq, ":var0", 2),
      (val_sub, "$qst_collect_taxes_unrest_counter", 1),
      (le, "$qst_collect_taxes_unrest_counter", 0),
      (eq, "$qst_collect_taxes_halve_taxes", 0),
      (quest_set_slot, "qst_collect_taxes", 11, 3),
      (store_div, ":var7", 10000, "$qst_collect_taxes_total_hours"),
      (val_add, ":var7", 30),
      (store_random_in_range, ":var8", 0, 1000),
      (try_begin),
        (lt, ":var8", ":var7"),
        (jump_to_menu, "mnu_collect_taxes_revolt"),
      (try_end),
    (try_end),
  ]),

  (71,
  [
    (is_between, "$g_force_peace_faction_1", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (is_between, "$g_force_peace_faction_2", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (try_begin),
      (store_relation, ":var0", "$g_force_peace_faction_1", "$g_force_peace_faction_2"),
      (lt, ":var0", 0),
      (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_force_peace_faction_1", "$g_force_peace_faction_2", 1),
    (try_end),
    (assign, "$g_force_peace_faction_1", 0),
    (assign, "$g_force_peace_faction_2", 0),
  ]),

  (1,
  [
    (str_store_string, s51, "str_no_trigger_noted"),
    (try_begin),
      (gt, "$npc_to_rejoin_party", 0),
      (eq, "$g_infinite_camping", 0),
      (try_begin),
        (this_or_next|eq, "$npc_to_rejoin_party", "trp_hired_blade"),
        (this_or_next|is_between, "$npc_to_rejoin_party", "trp_town_walker_1", "trp_village_walker_1"),
        (neg|main_party_has_troop, "$npc_to_rejoin_party"),
        (neq, "$g_player_is_captive", 1),
        (str_store_string, s51, "str_triggered_by_npc_to_rejoin_party"),
        (assign, "$npc_map_talk_context", 150),
        (start_map_conversation, "$npc_to_rejoin_party", -1),
      (else_try),
        (is_between, "$npc_to_rejoin_party", "trp_npc1", "trp_kingdom_1_lord"),
        (troop_set_slot, "$npc_to_rejoin_party", 151, 8),
        (assign, "$npc_to_rejoin_party", 0),
      (try_end),
    (else_try),
      (gt, "$npc_is_quitting", 0),
      (eq, "$g_infinite_camping", 0),
      (try_begin),
        (main_party_has_troop, "$npc_is_quitting"),
        (neq, "$g_player_is_captive", 1),
        (neg|troop_slot_eq, "trp_player", 30, "$npc_is_quitting"),
        (neg|troop_slot_eq, "$npc_is_quitting", 30, "trp_player"),
        (str_store_string, s51, "str_triggered_by_npc_is_quitting"),
        (start_map_conversation, "$npc_is_quitting", -1),
      (else_try),
        (assign, "$npc_is_quitting", 0),
      (try_end),
    (else_try),
      (gt, "$npc_with_grievance", 0),
      (eq, "$g_infinite_camping", 0),
      (eq, "$disable_npc_complaints", 0),
      (try_begin),
        (main_party_has_troop, "$npc_with_grievance"),
        (neq, "$g_player_is_captive", 1),
        (str_store_string, s51, "str_triggered_by_npc_has_grievance"),
        (assign, "$npc_map_talk_context", 61),
        (start_map_conversation, "$npc_with_grievance", -1),
      (else_try),
        (assign, "$npc_with_grievance", 0),
      (try_end),
    (else_try),
      (gt, "$npc_with_personality_clash", 0),
      (eq, "$g_infinite_camping", 0),
      (eq, "$disable_npc_complaints", 0),
      (troop_get_slot, ":var0", "$npc_with_personality_clash", 71),
      (try_begin),
        (main_party_has_troop, "$npc_with_personality_clash"),
        (main_party_has_troop, ":var0"),
        (neq, "$g_player_is_captive", 1),
        (assign, "$npc_map_talk_context", 72),
        (str_store_string, s51, "str_triggered_by_npc_has_personality_clash"),
        (start_map_conversation, "$npc_with_personality_clash", -1),
      (else_try),
        (assign, "$npc_with_personality_clash", 0),
      (try_end),
    (else_try),
      (gt, "$npc_with_political_grievance", 0),
      (eq, "$g_infinite_camping", 0),
      (eq, "$disable_npc_complaints", 0),
      (try_begin),
        (main_party_has_troop, "$npc_with_political_grievance"),
        (neq, "$g_player_is_captive", 1),
        (str_store_string, s51, "str_triggered_by_npc_has_political_grievance"),
        (assign, "$npc_map_talk_context", 145),
        (start_map_conversation, "$npc_with_political_grievance", -1),
      (else_try),
        (assign, "$npc_with_political_grievance", 0),
      (try_end),
    (else_try),
      (eq, "$disable_sisterly_advice", 0),
      (eq, "$g_infinite_camping", 0),
      (gt, "$npc_with_sisterly_advice", 0),
      (try_begin),
        (main_party_has_troop, "$npc_with_sisterly_advice"),
        (neq, "$g_player_is_captive", 1),
        (troop_slot_ge, "$npc_with_sisterly_advice", 139, 1),
        (assign, "$npc_map_talk_context", 139),
        (start_map_conversation, "$npc_with_sisterly_advice", -1),
      (else_try),
        (assign, "$npc_with_sisterly_advice", 0),
      (try_end),
    (else_try),
      (eq, "$disable_local_histories", 0),
      (eq, "$g_infinite_camping", 0),
      (try_for_range, ":var1", "trp_npc1", "trp_kingdom_1_lord"),
        (main_party_has_troop, ":var1"),
        (troop_slot_eq, ":var1", 78, 0),
        (troop_get_slot, ":var2", ":var1", 60),
        (gt, ":var2", 0),
        (store_distance_to_party_from_party, ":var3", ":var2", "p_main_party"),
        (lt, ":var3", 7),
        (assign, "$npc_map_talk_context", 60),
        (str_store_string, s51, "str_triggered_by_local_histories"),
        (start_map_conversation, ":var1", -1),
      (try_end),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_rebel_against_kingdom"),
      (is_between, "$supported_pretender", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
      (neg|main_party_has_troop, "$supported_pretender"),
      (neg|troop_slot_eq, "$supported_pretender", 2, 2),
      (party_add_members, "p_main_party", "$supported_pretender", 1),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_rebel_against_kingdom"),
      (is_between, "$supported_pretender", "trp_kingdom_1_pretender", "trp_knight_1_1_wife"),
      (main_party_has_troop, "$supported_pretender"),
      (neg|faction_slot_eq, "fac_player_supporters_faction", 8, "trp_player"),
      (call_script, "script_appoint_faction_marshall", "fac_player_supporters_faction", "trp_player"),
    (try_end),
  ]),

  (4,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_heroes_end"),
      (this_or_next|is_between, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_slot_ge, ":var0", 56, 1),
      (store_faction_of_troop, ":var1", ":var0"),
      (troop_get_slot, ":var2", ":var0", 56),
      (troop_get_slot, ":var3", ":var0", 10),
      (assign, ":var4", 0),
      (try_begin),
        (le, ":var3", 0),
        (neg|troop_slot_ge, ":var0", 8, 0),
        (assign, ":var4", 1),
      (else_try),
        (gt, ":var3", 0),
        (party_get_attached_to, ":var5", ":var3"),
        (try_begin),
          (lt, ":var5", 0),
          (party_get_cur_town, ":var5", ":var3"),
        (try_end),
        (neg|this_or_next|is_between, ":var5", "p_town_1", "p_salt_mine"),
        (party_slot_eq, ":var5", 7, ":var0"),
        (assign, ":var6", "trp_heroes_end"),
        (try_for_range, ":var7", "trp_npc1", ":var6"),
          (neq, ":var7", ":var0"),
          (troop_slot_eq, ":var7", 2, 2),
          (troop_get_slot, ":var8", ":var7", 10),
          (party_is_active, ":var8"),
          (store_faction_of_party, ":var9", ":var8"),
          (eq, ":var9", ":var1"),
          (store_distance_to_party_from_party, ":var10", ":var3", ":var8"),
          (lt, ":var10", 4),
          (assign, ":var6", 0),
        (try_end),
        (neq, ":var6", 0),
        (assign, ":var4", 1),
      (try_end),
      (eq, ":var4", 1),
      (try_begin),
        (ge, "$cheat_mode", 1),
        (str_store_troop_name, s4, ":var0"),
        (display_message, "@{!}DEBUG - {s4} faction changed from slot troop change to faction"),
      (try_end),
      (assign, ":var11", 0),
      (call_script, "script_change_troop_faction", ":var0", ":var2", ":var11"),
      (troop_set_slot, ":var0", 56, 0),
      (try_begin),
        (is_between, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (str_store_troop_name_link, s1, ":var0"),
        (str_store_faction_name_link, s2, ":var1"),
        (str_store_faction_name_link, s3, ":var2"),
        (faction_get_color, ":var12", ":var2"),
        (display_log_message, "@{s1} has switched from {s2} to {s3}.", ":var12"),
        (try_begin),
          (eq, ":var1", "$players_kingdom"),
          (call_script, "script_add_notification_menu", "mnu_notification_troop_left_players_faction", ":var0", ":var2"),
        (else_try),
          (eq, ":var2", "$players_kingdom"),
          (call_script, "script_add_notification_menu", "mnu_notification_troop_joined_players_faction", ":var0", ":var1"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (1,
  []),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_1_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_1_lord", 8),
      (troop_slot_eq, "trp_kingdom_1_lord", 2, 2),
      (lt, ":var1", 0),
      (ge, ":var0", 1),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_demigryph_knight", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_demigryph_knight", 2),
      (else_try),
        (party_add_members, ":var0", "trp_demigryph_knight", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_2_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_2_lord", 8),
      (troop_slot_eq, "trp_kingdom_2_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_dwarf_daemon_slayer", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_dwarf_daemon_slayer", 2),
      (else_try),
        (party_add_members, ":var0", "trp_dwarf_daemon_slayer", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_3_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_3_lord", 8),
      (troop_slot_eq, "trp_kingdom_3_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_white_lion_rider", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_white_lion_rider", 2),
      (else_try),
        (party_add_members, ":var0", "trp_white_lion_rider", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_4_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_4_lord", 8),
      (troop_slot_eq, "trp_kingdom_4_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_kdaai", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_kdaai", 2),
      (else_try),
        (party_add_members, ":var0", "trp_kdaai", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_5_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_5_lord", 8),
      (troop_slot_eq, "trp_kingdom_5_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_undivided_troll", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_undivided_troll", 2),
      (else_try),
        (party_add_members, ":var0", "trp_undivided_troll", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_6_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_6_lord", 8),
      (troop_slot_eq, "trp_kingdom_6_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_ushabti", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_ushabti", 2),
      (else_try),
        (party_add_members, ":var0", "trp_ushabti", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_8_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_8_lord", 8),
      (troop_slot_eq, "trp_kingdom_8_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_goblin_troll", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_goblin_troll", 2),
      (else_try),
        (party_add_members, ":var0", "trp_goblin_troll", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_7_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_7_lord", 8),
      (troop_slot_eq, "trp_kingdom_7_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_kroxigor", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_kroxigor", 2),
      (else_try),
        (party_add_members, ":var0", "trp_kroxigor", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_9_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_9_lord", 8),
      (troop_slot_eq, "trp_kingdom_9_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_sand_wraith", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_sand_wraith", 2),
      (else_try),
        (party_add_members, ":var0", "trp_sand_wraith", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_10_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_10_lord", 8),
      (troop_slot_eq, "trp_kingdom_10_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_orc_troll", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_orc_troll", 2),
      (else_try),
        (party_add_members, ":var0", "trp_orc_troll", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_11_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_11_lord", 8),
      (troop_slot_eq, "trp_kingdom_11_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_paladin", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_paladin", 2),
      (else_try),
        (party_add_members, ":var0", "trp_paladin", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_12_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_12_lord", 8),
      (troop_slot_eq, "trp_kingdom_12_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_dreadmaster", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_dreadmaster", 2),
      (else_try),
        (party_add_members, ":var0", "trp_dreadmaster", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_13_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_13_lord", 8),
      (troop_slot_eq, "trp_kingdom_13_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_rat_ogre", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_rat_ogre", 2),
      (else_try),
        (party_add_members, ":var0", "trp_rat_ogre", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_14_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_14_lord", 8),
      (troop_slot_eq, "trp_kingdom_14_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_sons_of_ursun", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_sons_of_ursun", 2),
      (else_try),
        (party_add_members, ":var0", "trp_sons_of_ursun", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_15_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_15_lord", 8),
      (troop_slot_eq, "trp_kingdom_15_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_doombull", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_doombull", 2),
      (else_try),
        (party_add_members, ":var0", "trp_doombull", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_16_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_16_lord", 8),
      (troop_slot_eq, "trp_kingdom_16_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_great_guard", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_great_guard", 2),
      (else_try),
        (party_add_members, ":var0", "trp_great_guard", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_17_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_17_lord", 8),
      (troop_slot_eq, "trp_kingdom_17_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_blood_knight", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_blood_knight", 2),
      (else_try),
        (party_add_members, ":var0", "trp_blood_knight", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_kingdom_18_lord", 10),
      (troop_get_slot, ":var1", "trp_kingdom_18_lord", 8),
      (troop_slot_eq, "trp_kingdom_18_lord", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 50),
        (party_add_members, ":var0", "trp_glade_captain", 1),
      (else_try),
        (lt, ":var2", 95),
        (party_add_members, ":var0", "trp_glade_captain", 2),
      (else_try),
        (party_add_members, ":var0", "trp_glade_captain", 3),
      (try_end),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_9", 10),
      (troop_get_slot, ":var1", "trp_knight_1_9", 8),
      (troop_slot_eq, "trp_knight_1_9", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_11", 10),
      (troop_get_slot, ":var1", "trp_knight_1_11", 8),
      (troop_slot_eq, "trp_knight_1_11", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_2", 10),
      (troop_get_slot, ":var1", "trp_knight_1_2", 8),
      (troop_slot_eq, "trp_knight_1_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_15", 10),
      (troop_get_slot, ":var1", "trp_knight_1_15", 8),
      (troop_slot_eq, "trp_knight_1_15", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_16", 10),
      (troop_get_slot, ":var1", "trp_knight_1_16", 8),
      (troop_slot_eq, "trp_knight_1_16", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_1_17", 10),
      (troop_get_slot, ":var1", "trp_knight_1_17", 8),
      (troop_slot_eq, "trp_knight_1_17", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_demigryph_knight", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_2_2", 10),
      (troop_get_slot, ":var1", "trp_knight_2_2", 8),
      (troop_slot_eq, "trp_knight_2_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dwarf_daemon_slayer", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_2_3", 10),
      (troop_get_slot, ":var1", "trp_knight_2_3", 8),
      (troop_slot_eq, "trp_knight_2_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dwarf_master_engineer", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_2_11", 10),
      (troop_get_slot, ":var1", "trp_knight_2_11", 8),
      (troop_slot_eq, "trp_knight_2_11", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dwarf_master_engineer", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_2_14", 10),
      (troop_get_slot, ":var1", "trp_knight_2_14", 8),
      (troop_slot_eq, "trp_knight_2_14", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dwarf_master_engineer", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_2_15", 10),
      (troop_get_slot, ":var1", "trp_knight_2_15", 8),
      (troop_slot_eq, "trp_knight_2_15", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dwarf_master_engineer", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_1", 10),
      (troop_get_slot, ":var1", "trp_knight_3_1", 8),
      (troop_slot_eq, "trp_knight_3_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_2", 10),
      (troop_get_slot, ":var1", "trp_knight_3_2", 8),
      (troop_slot_eq, "trp_knight_3_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_3", 10),
      (troop_get_slot, ":var1", "trp_knight_3_3", 8),
      (troop_slot_eq, "trp_knight_3_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_4", 10),
      (troop_get_slot, ":var1", "trp_knight_3_4", 8),
      (troop_slot_eq, "trp_knight_3_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_white_lion_rider", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_5", 10),
      (troop_get_slot, ":var1", "trp_knight_3_5", 8),
      (troop_slot_eq, "trp_knight_3_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_6", 10),
      (troop_get_slot, ":var1", "trp_knight_3_6", 8),
      (troop_slot_eq, "trp_knight_3_6", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_3_7", 10),
      (troop_get_slot, ":var1", "trp_knight_3_7", 8),
      (troop_slot_eq, "trp_knight_3_7", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_drakemaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_4_3", 10),
      (troop_get_slot, ":var1", "trp_knight_4_3", 8),
      (troop_slot_eq, "trp_knight_4_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kdaai", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_4_1", 10),
      (troop_get_slot, ":var1", "trp_knight_4_1", 8),
      (troop_slot_eq, "trp_knight_4_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kdaai", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_4_14", 10),
      (troop_get_slot, ":var1", "trp_knight_4_14", 8),
      (troop_slot_eq, "trp_knight_4_14", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kdaai", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_4_7", 10),
      (troop_get_slot, ":var1", "trp_knight_4_7", 8),
      (troop_slot_eq, "trp_knight_4_7", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kdaai", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_5_1", 10),
      (troop_get_slot, ":var1", "trp_knight_5_1", 8),
      (troop_slot_eq, "trp_knight_5_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_undivided_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_5_2", 10),
      (troop_get_slot, ":var1", "trp_knight_5_2", 8),
      (troop_slot_eq, "trp_knight_5_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_undivided_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_5_3", 10),
      (troop_get_slot, ":var1", "trp_knight_5_3", 8),
      (troop_slot_eq, "trp_knight_5_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_herald", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_5_4", 10),
      (troop_get_slot, ":var1", "trp_knight_5_4", 8),
      (troop_slot_eq, "trp_knight_5_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_herald", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_5_5", 10),
      (troop_get_slot, ":var1", "trp_knight_5_5", 8),
      (troop_slot_eq, "trp_knight_5_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_daemon_prince_slaanesh", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_6_1", 10),
      (troop_get_slot, ":var1", "trp_knight_6_1", 8),
      (troop_slot_eq, "trp_knight_6_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_mummy_king", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_6_3", 10),
      (troop_get_slot, ":var1", "trp_knight_6_3", 8),
      (troop_slot_eq, "trp_knight_6_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_mummy_king", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_6_5", 10),
      (troop_get_slot, ":var1", "trp_knight_6_5", 8),
      (troop_slot_eq, "trp_knight_6_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_mummy_king", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_6_2", 10),
      (troop_get_slot, ":var1", "trp_knight_6_2", 8),
      (troop_slot_eq, "trp_knight_6_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_mummy_king", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_7_1", 10),
      (troop_get_slot, ":var1", "trp_knight_7_1", 8),
      (troop_slot_eq, "trp_knight_7_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kroxigor", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_7_2", 10),
      (troop_get_slot, ":var1", "trp_knight_7_2", 8),
      (troop_slot_eq, "trp_knight_7_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kroxigor", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_7_3", 10),
      (troop_get_slot, ":var1", "trp_knight_7_3", 8),
      (troop_slot_eq, "trp_knight_7_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kroxigor", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_7_4", 10),
      (troop_get_slot, ":var1", "trp_knight_7_4", 8),
      (troop_slot_eq, "trp_knight_7_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kroxigor", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_7_5", 10),
      (troop_get_slot, ":var1", "trp_knight_7_5", 8),
      (troop_slot_eq, "trp_knight_7_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_kroxigor", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_8_1", 10),
      (troop_get_slot, ":var1", "trp_knight_8_1", 8),
      (troop_slot_eq, "trp_knight_8_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_goblin_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_8_2", 10),
      (troop_get_slot, ":var1", "trp_knight_8_2", 8),
      (troop_slot_eq, "trp_knight_8_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_goblin_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_9_1", 10),
      (troop_get_slot, ":var1", "trp_knight_9_1", 8),
      (troop_slot_eq, "trp_knight_9_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sand_wraith", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_9_2", 10),
      (troop_get_slot, ":var1", "trp_knight_9_2", 8),
      (troop_slot_eq, "trp_knight_9_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sand_wraith", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_9_3", 10),
      (troop_get_slot, ":var1", "trp_knight_9_3", 8),
      (troop_slot_eq, "trp_knight_9_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sand_wraith", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_10_1", 10),
      (troop_get_slot, ":var1", "trp_knight_10_1", 8),
      (troop_slot_eq, "trp_knight_10_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_orc_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_10_2", 10),
      (troop_get_slot, ":var1", "trp_knight_10_2", 8),
      (troop_slot_eq, "trp_knight_10_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_orc_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_10_3", 10),
      (troop_get_slot, ":var1", "trp_knight_10_3", 8),
      (troop_slot_eq, "trp_knight_10_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_orc_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_10_4", 10),
      (troop_get_slot, ":var1", "trp_knight_10_4", 8),
      (troop_slot_eq, "trp_knight_10_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_orc_troll", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_1", 10),
      (troop_get_slot, ":var1", "trp_knight_11_1", 8),
      (troop_slot_eq, "trp_knight_11_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_2", 10),
      (troop_get_slot, ":var1", "trp_knight_11_2", 8),
      (troop_slot_eq, "trp_knight_11_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_3", 10),
      (troop_get_slot, ":var1", "trp_knight_11_3", 8),
      (troop_slot_eq, "trp_knight_11_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_4", 10),
      (troop_get_slot, ":var1", "trp_knight_11_4", 8),
      (troop_slot_eq, "trp_knight_11_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_5", 10),
      (troop_get_slot, ":var1", "trp_knight_11_5", 8),
      (troop_slot_eq, "trp_knight_11_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_11_6", 10),
      (troop_get_slot, ":var1", "trp_knight_11_6", 8),
      (troop_slot_eq, "trp_knight_11_6", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_paladin", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_1", 10),
      (troop_get_slot, ":var1", "trp_knight_12_1", 8),
      (troop_slot_eq, "trp_knight_12_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_2", 10),
      (troop_get_slot, ":var1", "trp_knight_12_2", 8),
      (troop_slot_eq, "trp_knight_12_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_3", 10),
      (troop_get_slot, ":var1", "trp_knight_12_3", 8),
      (troop_slot_eq, "trp_knight_12_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_4", 10),
      (troop_get_slot, ":var1", "trp_knight_12_4", 8),
      (troop_slot_eq, "trp_knight_12_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_5", 10),
      (troop_get_slot, ":var1", "trp_knight_12_5", 8),
      (troop_slot_eq, "trp_knight_12_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_6", 10),
      (troop_get_slot, ":var1", "trp_knight_12_6", 8),
      (troop_slot_eq, "trp_knight_12_6", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_12_7", 10),
      (troop_get_slot, ":var1", "trp_knight_12_7", 8),
      (troop_slot_eq, "trp_knight_12_7", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_dreadmaster", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_13_1", 10),
      (troop_get_slot, ":var1", "trp_knight_13_1", 8),
      (troop_slot_eq, "trp_knight_13_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_skryre_ratling", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_13_2", 10),
      (troop_get_slot, ":var1", "trp_knight_13_2", 8),
      (troop_slot_eq, "trp_knight_13_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_skryre_ratling", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_13_3", 10),
      (troop_get_slot, ":var1", "trp_knight_13_3", 8),
      (troop_slot_eq, "trp_knight_13_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_skryre_ratling", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_13_4", 10),
      (troop_get_slot, ":var1", "trp_knight_13_4", 8),
      (troop_slot_eq, "trp_knight_13_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_skryre_ratling", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_13_5", 10),
      (troop_get_slot, ":var1", "trp_knight_13_5", 8),
      (troop_slot_eq, "trp_knight_13_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_skryre_ratling", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_14_1", 10),
      (troop_get_slot, ":var1", "trp_knight_14_1", 8),
      (troop_slot_eq, "trp_knight_14_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sons_of_ursun", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_14_2", 10),
      (troop_get_slot, ":var1", "trp_knight_14_2", 8),
      (troop_slot_eq, "trp_knight_14_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sons_of_ursun", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_14_3", 10),
      (troop_get_slot, ":var1", "trp_knight_14_3", 8),
      (troop_slot_eq, "trp_knight_14_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sons_of_ursun", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_14_4", 10),
      (troop_get_slot, ":var1", "trp_knight_14_4", 8),
      (troop_slot_eq, "trp_knight_14_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sons_of_ursun", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_14_5", 10),
      (troop_get_slot, ":var1", "trp_knight_14_5", 8),
      (troop_slot_eq, "trp_knight_14_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_sons_of_ursun", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_15_1", 10),
      (troop_get_slot, ":var1", "trp_knight_15_1", 8),
      (troop_slot_eq, "trp_knight_15_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_doombull", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_15_2", 10),
      (troop_get_slot, ":var1", "trp_knight_15_2", 8),
      (troop_slot_eq, "trp_knight_15_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_doombull", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_15_3", 10),
      (troop_get_slot, ":var1", "trp_knight_15_3", 8),
      (troop_slot_eq, "trp_knight_15_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_doombull", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_15_4", 10),
      (troop_get_slot, ":var1", "trp_knight_15_4", 8),
      (troop_slot_eq, "trp_knight_15_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_doombull", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_15_5", 10),
      (troop_get_slot, ":var1", "trp_knight_15_5", 8),
      (troop_slot_eq, "trp_knight_15_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_doombull", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_16_1", 10),
      (troop_get_slot, ":var1", "trp_knight_16_1", 8),
      (troop_slot_eq, "trp_knight_16_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_great_guard", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_16_2", 10),
      (troop_get_slot, ":var1", "trp_knight_16_2", 8),
      (troop_slot_eq, "trp_knight_16_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_great_guard", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_16_3", 10),
      (troop_get_slot, ":var1", "trp_knight_16_3", 8),
      (troop_slot_eq, "trp_knight_16_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_great_guard", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_16_4", 10),
      (troop_get_slot, ":var1", "trp_knight_16_4", 8),
      (troop_slot_eq, "trp_knight_16_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_great_guard", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_16_9", 10),
      (troop_get_slot, ":var1", "trp_knight_16_9", 8),
      (troop_slot_eq, "trp_knight_16_9", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_great_guard", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_17_1", 10),
      (troop_get_slot, ":var1", "trp_knight_17_1", 8),
      (troop_slot_eq, "trp_knight_1_9", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_vampire_master", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_17_2", 10),
      (troop_get_slot, ":var1", "trp_knight_17_2", 8),
      (troop_slot_eq, "trp_knight_17_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_vampire_master", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_17_3", 10),
      (troop_get_slot, ":var1", "trp_knight_17_3", 8),
      (troop_slot_eq, "trp_knight_17_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_vampire_master", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_17_4", 10),
      (troop_get_slot, ":var1", "trp_knight_17_4", 8),
      (troop_slot_eq, "trp_knight_17_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_vampire_master", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_17_8", 10),
      (troop_get_slot, ":var1", "trp_knight_17_8", 8),
      (troop_slot_eq, "trp_knight_17_8", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_vampire_master", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_18_1", 10),
      (troop_get_slot, ":var1", "trp_knight_18_1", 8),
      (troop_slot_eq, "trp_knight_18_1", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_glade_captain", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_18_2", 10),
      (troop_get_slot, ":var1", "trp_knight_18_2", 8),
      (troop_slot_eq, "trp_knight_18_2", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_glade_captain", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_18_3", 10),
      (troop_get_slot, ":var1", "trp_knight_18_3", 8),
      (troop_slot_eq, "trp_knight_18_3", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_glade_captain", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_18_4", 10),
      (troop_get_slot, ":var1", "trp_knight_18_4", 8),
      (troop_slot_eq, "trp_knight_18_4", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_glade_captain", 1),
    (try_end),
  ]),

  (167,
  [
    (try_begin),
      (troop_get_slot, ":var0", "trp_knight_18_5", 10),
      (troop_get_slot, ":var1", "trp_knight_18_5", 8),
      (troop_slot_eq, "trp_knight_18_5", 2, 2),
      (lt, ":var1", 0),
      (gt, ":var0", 0),
      (party_is_active, ":var0"),
      (party_add_members, ":var0", "trp_glade_captain", 1),
    (try_end),
  ]),

  (169,
  [
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (try_begin),
        (faction_get_slot, ":var1", "fac_player_supporters_faction", 46),
        (party_slot_eq, ":var0", 7, "trp_player"),
        (party_slot_eq, ":var0", 141, 1),
        (party_add_members, ":var0", ":var1", 1),
      (try_end),
    (try_end),
  ]),

  (73,
  [
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (try_begin),
        (faction_get_slot, ":var1", "fac_player_supporters_faction", 43),
        (party_slot_eq, ":var0", 7, "trp_player"),
        (party_slot_eq, ":var0", 146, 1),
        (party_add_members, ":var0", ":var1", 1),
      (try_end),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 134, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 5),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 135, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 5),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_town_1", "p_castle_1"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 145, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 10),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_town_1", "p_castle_1"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 142, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 10),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_town_1", "p_castle_1"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 144, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 5),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (721,
  [
    (try_for_range, ":var0", "p_town_1", "p_castle_1"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (party_slot_eq, ":var0", 137, 1),
      (party_get_slot, ":var1", ":var0", 26),
      (val_add, ":var1", 3),
      (val_min, ":var1", 100),
      (party_set_slot, ":var0", 26, ":var1"),
    (try_end),
  ]),

  (1,
  [
    (eq, "$cheat_mode", 1),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_battle_opponent, ":var1", ":var0"),
      (try_begin),
        (gt, ":var1", 0),
        (str_store_party_name, s2, ":var0"),
        (str_store_party_name, s3, ":var1"),
        (display_message, "@{!}DEBUG : {s2} is besieging by {s3}"),
      (try_end),
    (try_end),
  ]),

  (1,
  [
    (store_current_day, ":var0"),
    (gt, ":var0", "$g_last_report_control_day"),
    (store_time_of_day, ":var1"),
    (ge, ":var1", 18),
    (store_random_in_range, ":var2", 0, 4),
    (this_or_next|ge, ":var1", 22),
    (eq, ":var2", 0),
    (assign, "$g_last_report_control_day", ":var0"),
    (store_troop_gold, ":var3", "trp_player"),
    (try_begin),
      (lt, ":var3", 0),
      (store_sub, ":var4", 0, ":var3"),
      (troop_add_gold, "trp_player", ":var4"),
    (try_end),
    (party_get_morale, ":var5", "p_main_party"),
    (try_begin),
      (str_store_string, s1, "str_party_morale_is_low"),
      (str_clear, s2),
      (party_get_num_companion_stacks, ":var6", "p_main_party"),
      (assign, ":var7", 0),
      (try_for_range_backwards, ":var8", 0, ":var6"),
        (party_stack_get_troop_id, ":var9", "p_main_party", ":var8"),
        (troop_get_slot, ":var10", ":var9", 175),
        (neq, ":var10", 2),
        (neg|troop_is_hero, ":var9"),
        (party_stack_get_size, ":var11", "p_main_party", ":var8"),
        (store_faction_of_troop, ":var12", ":var9"),
        (assign, ":var13", ":var5"),
        (try_begin),
          (ge, ":var12", "fac_kingdom_1"),
          (lt, ":var12", "fac_kingdoms_end"),
          (faction_get_slot, ":var14", ":var12", 99),
          (val_div, ":var14", 100),
          (val_add, ":var13", ":var14"),
        (try_end),
        (lt, ":var13", 32),
        (store_sub, ":var15", 36, ":var13"),
        (val_div, ":var15", 4),
        (assign, ":var16", 0),
        (try_for_range, ":var17", 0, ":var11"),
          (store_random_in_range, ":var2", 0, 100),
          (lt, ":var2", ":var15"),
          (val_add, ":var16", 1),
          (remove_member_from_party, ":var9", "p_main_party"),
        (try_end),
        (assign, ":var18", reg0),
        (try_begin),
          (ge, ":var16", 1),
          (str_store_troop_name, s2, ":var9"),
          (assign, reg0, ":var16"),
          (try_begin),
            (ge, ":var7", 1),
            (str_store_string, s1, "str_s1_reg0_s2"),
          (else_try),
            (str_store_string, s3, s1),
            (str_store_string, s1, "str_s3_reg0_s2"),
          (try_end),
          (val_add, ":var7", ":var16"),
        (try_end),
      (try_end),
      (try_begin),
        (store_div, ":var15", "$g_player_party_morale_modifier_debt", 4),
        (gt, ":var15", 0),
        (try_for_range, ":var19", "trp_player_camp_chest_1", "trp_player_camp_chest_end"),
          (troop_get_slot, ":var20", ":var19", 60),
          (gt, ":var20", 0),
          (party_is_active, ":var20"),
          (call_script, "script_party_inflict_attrition", ":var20", ":var15", 1),
          (party_get_num_companions, ":var21", "p_temp_casualties"),
          (try_begin),
            (gt, ":var21", 0),
            (str_store_party_name, s3, ":var20"),
            (str_store_string, s2, "str_pcamp_soldiers_from_s3"),
            (assign, reg0, ":var21"),
            (try_begin),
              (ge, ":var7", 1),
              (str_store_string, s1, "str_s1_reg0_s2"),
            (else_try),
              (str_store_string, s3, s1),
              (str_store_string, s1, "str_s3_reg0_s2"),
            (try_end),
            (val_add, ":var7", ":var21"),
          (try_end),
        (try_end),
      (try_end),
      (assign, reg0, ":var18"),
      (try_begin),
        (ge, ":var7", 1),
        (try_begin),
          (ge, ":var7", 2),
          (str_store_string, s2, "str_have_deserted_the_party"),
        (else_try),
          (str_store_string, s2, "str_has_deserted_the_party"),
        (try_end),
        (str_store_string, s1, "str_s1_s2"),
        (eq, "$g_infinite_camping", 0),
        (dialog_box, s1, "str_weekly_report"),
      (try_end),
    (try_end),
  ]),

  (1,
  [
    (call_script, "script_calculate_castle_prosperities_by_using_its_villages"),
    (store_add, ":var0", "fac_kingdom_6", 1),
    (try_for_range, ":var1", "fac_kingdom_1", ":var0"),
      (try_for_range, ":var2", "fac_kingdom_1", ":var0"),
        (store_relation, ":var3", ":var1", ":var2"),
        (str_store_faction_name, s7, ":var1"),
        (str_store_faction_name, s8, ":var2"),
        (neq, ":var1", ":var2"),
        (assign, reg1, ":var3"),
      (try_end),
    (try_end),
  ]),

  (1,
  [
    (try_begin),
      (eq, "$g_player_is_captive", 1),
      (neg|party_is_active, "$capturer_party"),
      (rest_for_hours, 0, "$g_warsword_wait_multiplier", 0),
    (try_end),
    (is_between, "$next_center_will_be_fired", "p_village_1", "p_salt_mine"),
    (assign, ":var0", "$next_center_will_be_fired"),
    (party_get_slot, ":var1", ":var0", 38),
    (eq, ":var1", 0),
    (try_begin),
      (party_get_slot, ":var2", ":var0", 120),
      (party_get_slot, ":var3", ":var2", 250),
      (store_current_hours, ":var4"),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (is_between, ":var0", "p_town_1", "p_salt_mine"),
        (is_between, ":var2", "p_town_1", "p_salt_mine"),
        (str_store_party_name, s4, ":var0"),
        (str_store_party_name, s5, ":var2"),
        (assign, ":var5", reg3),
        (assign, ":var6", reg4),
        (store_current_hours, reg3),
        (party_get_slot, reg4, ":var2", 250),
        (display_message, "@{!}DEBUG - Checking fire at {s4} for {s5} - current time {reg3}, last nearby fire {reg4}"),
        (assign, reg3, ":var5"),
        (assign, reg4, ":var6"),
      (try_end),
      (eq, ":var4", ":var3"),
      (party_add_particle_system, ":var0", "psys_map_village_fire"),
      (party_add_particle_system, ":var0", "psys_map_village_fire_smoke"),
    (else_try),
      (store_add, ":var7", ":var3", 4),
      (eq, ":var7", ":var4"),
      (party_clear_particle_systems, ":var0"),
    (try_end),
  ]),

  (24,
  [
    (val_sub, "$g_dont_give_fief_to_player_days", 1),
    (val_max, "$g_dont_give_fief_to_player_days", -1),
    (val_sub, "$g_dont_give_marshalship_to_player_days", 1),
    (val_max, "$g_dont_give_marshalship_to_player_days", -1),
    (try_begin),
      (check_quest_active, "qst_formal_marriage_proposal"),
      (check_quest_failed, "qst_formal_marriage_proposal"),
      (call_script, "script_end_quest", "qst_formal_marriage_proposal"),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_lend_companion"),
      (quest_get_slot, ":var0", "qst_lend_companion", 6),
      (store_faction_of_troop, ":var1", ":var0"),
      (store_relation, ":var2", ":var1", "$players_kingdom"),
      (this_or_next|lt, ":var2", 0),
      (neg|is_between, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (call_script, "script_abort_quest", "qst_lend_companion", 0),
    (try_end),
    (try_begin),
      (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (neq, "$players_kingdom", "fac_player_supporters_faction"),
      (faction_slot_eq, "$players_kingdom", 8, "trp_player"),
      (val_add, "$g_player_days_as_marshal", 1),
    (else_try),
      (assign, "$g_player_days_as_marshal", 0),
    (try_end),
    (try_for_range, ":var3", "p_town_1", "p_castle_1"),
      (party_get_slot, ":var4", ":var3", 149),
      (ge, ":var4", 1),
      (val_sub, ":var4", 1),
      (party_set_slot, ":var3", 149, ":var4"),
    (try_end),
  ]),

  (24,
  [
    (val_sub, "$g_dont_give_fief_to_player_days", 1),
    (val_max, "$g_dont_give_fief_to_player_days", -1),
    (val_sub, "$g_dont_give_marshalship_to_player_days", 1),
    (val_max, "$g_dont_give_marshalship_to_player_days", -1),
    (try_begin),
      (check_quest_active, "qst_formal_marriage_proposal"),
      (check_quest_failed, "qst_formal_marriage_proposal"),
      (call_script, "script_end_quest", "qst_formal_marriage_proposal"),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_lend_companion"),
      (quest_get_slot, ":var0", "qst_lend_companion", 6),
      (store_faction_of_troop, ":var1", ":var0"),
      (store_relation, ":var2", ":var1", "$players_kingdom"),
      (this_or_next|lt, ":var2", 0),
      (neg|is_between, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (call_script, "script_abort_quest", "qst_lend_companion", 0),
    (try_end),
    (try_begin),
      (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (neq, "$players_kingdom", "fac_player_supporters_faction"),
      (faction_slot_eq, "$players_kingdom", 8, "trp_player"),
      (val_add, "$g_player_days_as_marshal", 1),
    (else_try),
      (assign, "$g_player_days_as_marshal", 0),
    (try_end),
    (try_for_range, ":var3", "p_town_1", "p_castle_1"),
      (party_get_slot, ":var4", ":var3", 149),
      (ge, ":var4", 1),
      (val_sub, ":var4", 1),
      (party_set_slot, ":var3", 149, ":var4"),
    (try_end),
  ]),

  (25,
  [
    (item_set_slot, "itm_bread", 1, 5),
    (item_set_slot, "itm_grain", 1, 3),
    (item_set_slot, "itm_smoked_fish", 1, 5),
    (item_set_slot, "itm_dried_meat", 1, 5),
    (item_set_slot, "itm_cheese", 1, 6),
    (item_set_slot, "itm_sausages", 1, 6),
    (item_set_slot, "itm_butter", 1, 8),
    (item_set_slot, "itm_chicken", 1, 7),
    (item_set_slot, "itm_cattle_meat", 1, 6),
    (item_set_slot, "itm_pork", 1, 7),
    (item_set_slot, "itm_raw_olives", 1, 4),
    (item_set_slot, "itm_cabbages", 1, 2),
    (item_set_slot, "itm_raw_grapes", 1, 5),
    (item_set_slot, "itm_apples", 1, 6),
    (item_set_slot, "itm_raw_date_fruit", 1, 7),
    (item_set_slot, "itm_honey", 1, 10),
    (item_set_slot, "itm_wine", 1, 8),
    (item_set_slot, "itm_ale", 1, 6),
  ]),

  (24,
  []),

  (24,
  []),

  (24,
  []),

  (24,
  []),

  (6,
  [
    (troop_get_slot, ":var0", "trp_player", 30),
    (ge, ":var0", "trp_npc1"),
    (try_for_parties, ":var1"),
      (party_slot_eq, ":var1", 0, 19),
      (party_get_slot, ":var2", ":var1", 256),
      (party_get_slot, ":var3", ":var1", 123),
      (store_distance_to_party_from_party, ":var4", ":var1", ":var2"),
      (try_begin),
        (le, ":var4", 1),
        (try_begin),
          (this_or_next|eq, ":var2", "$g_player_court"),
          (eq, ":var2", ":var3"),
          (remove_party, ":var1"),
          (troop_set_slot, ":var0", 12, ":var2"),
        (else_try),
          (try_begin),
            (is_between, ":var2", "p_village_1", "p_salt_mine"),
            (party_get_slot, ":var5", ":var2", 25),
          (else_try),
            (party_get_slot, ":var5", ":var2", 23),
          (try_end),
          (troop_get_slot, ":var6", ":var0", 210),
          (troop_remove_items, ":var5", "itm_bread", ":var6"),
          (party_set_ai_behavior, ":var1", ai_bhvr_travel_to_party),
          (try_begin),
            (gt, "$g_player_court", 0),
            (party_set_slot, ":var1", 5, "$g_player_court"),
            (party_set_ai_object, ":var1", "$g_player_court"),
          (else_try),
            (party_set_slot, ":var1", 5, ":var3"),
            (party_set_ai_object, ":var1", ":var3"),
          (try_end),
          (troop_add_items, "trp_household_possessions", "itm_bread", ":var6"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (48,
  [
    (assign, "$faction_troops_ready", 1),
  ]),

  (24,
  [
    (set_relation, "fac_player_faction", "fac_outlaws", -15),
    (set_relation, "fac_player_supporters_faction", "fac_outlaws", -15),
    (try_for_range, ":var0", "fac_kingdom_1", "fac_kingdoms_end"),
      (assign, ":var1", 2),
      (try_for_range, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (neq, ":var0", ":var2"),
        (assign, ":var1", 2),
        (assign, ":var3", ":var2"),
        (try_begin),
          (eq, ":var2", "fac_player_supporters_faction"),
          (neq, ":var0", "$players_kingdom"),
          (assign, ":var3", "$players_kingdom"),
        (else_try),
          (eq, ":var2", "$players_kingdom"),
          (assign, ":var3", "fac_player_supporters_faction"),
        (try_end),
        (try_for_range, ":var4", "p_town_1", "p_salt_mine"),
          (store_faction_of_party, ":var5", ":var4"),
          (this_or_next|eq, ":var5", ":var2"),
          (eq, ":var5", ":var3"),
          (party_slot_eq, ":var4", 61, ":var0"),
          (this_or_next|neq, ":var0", "$players_kingdom"),
          (this_or_next|neq, ":var2", "fac_player_supporters_faction"),
          (party_slot_ge, ":var4", 582, 1),
          (val_sub, ":var1", 1),
        (try_end),
        (try_for_range, ":var6", "fac_player_supporters_faction", "fac_kingdoms_end"),
          (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":var2", ":var6"),
          (eq, reg0, -2),
          (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":var0", ":var6"),
          (eq, reg0, -2),
          (val_add, ":var1", 1),
        (try_end),
      (try_end),
      (store_add, ":var7", ":var2", 200),
      (party_set_slot, ":var0", ":var7", ":var1"),
    (try_end),
  ]),

  (24,
  [
    (assign, ":var0", reg1),
    (call_script, "script_list_count", "trp_list_06"),
    (assign, ":var1", reg1),
    (val_div, ":var1", 6),
    (gt, ":var1", 0),
    (try_for_range, ":var2", 0, ":var1"),
      (store_mul, ":var3", ":var2", 6),
      (store_add, ":var4", ":var3", 4),
      (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
      (assign, ":var5", reg1),
      (val_sub, ":var5", 1),
      (try_begin),
        (gt, ":var5", 0),
        (call_script, "script_list_set", "trp_list_06", ":var5", ":var4"),
      (else_try),
        (le, ":var5", 0),
        (str_clear, s10),
        (str_clear, s11),
        (str_clear, s12),
        (str_clear, s13),
        (assign, ":var6", reg59),
        (store_add, ":var4", ":var3", 1),
        (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
        (assign, ":var7", reg1),
        (str_store_party_name, s10, ":var7"),
        (store_add, ":var4", ":var3", 2),
        (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
        (assign, ":var8", reg1),
        (store_add, ":var4", ":var3", 3),
        (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
        (assign, ":var9", reg1),
        (store_add, ":var4", ":var3", 5),
        (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
        (assign, ":var10", reg1),
        (str_store_party_name, s13, ":var10"),
        (store_add, ":var4", ":var3", 6),
        (call_script, "script_list_at_nc", "trp_list_06", ":var4"),
        (try_begin),
          (assign, ":var11", "trp_merc_halfling_militia"),
          (try_begin),
            (is_between, ":var8", "fac_culture_1", "fac_player_faction"),
            (store_sub, ":var12", "fac_kingdom_1", "fac_culture_1"),
            (store_add, ":var13", ":var8", ":var12"),
            (faction_get_slot, ":var11", ":var13", 41),
          (try_end),
          (str_store_troop_name, s11, ":var11"),
          (assign, reg59, ":var9"),
          (display_message, "@{!}{reg59} {s11} from {s10} delivered to {s13} garrison"),
          (party_add_members, ":var10", ":var11", ":var9"),
        (try_end),
        (try_for_range, ":var14", 0, 6),
          (store_add, ":var15", ":var3", 1),
          (call_script, "script_list_remove_at", "trp_list_06", ":var15"),
        (try_end),
        (val_sub, ":var2", 1),
        (val_sub, ":var1", 1),
        (assign, reg59, ":var6"),
      (try_end),
    (try_end),
    (assign, reg1, ":var0"),
  ]),

  (168,
  [
    (assign, ":var0", reg0),
    (assign, ":var1", reg1),
    (assign, ":var2", reg4),
    (assign, reg0, ":var0"),
    (assign, reg1, ":var1"),
    (assign, reg4, ":var2"),
    (is_between, "$g_player_affiliated_troop", "trp_knight_1_1", "trp_heroes_end"),
    (assign, ":var3", -101),
    (assign, ":var4", 101),
    (assign, ":var5", 0),
    (assign, ":var6", 0),
    (assign, ":var7", 0),
    (assign, ":var8", 0),
    (try_for_range, ":var9", "trp_knight_1_1", "trp_heroes_end"),
      (call_script, "script_dplmc_is_affiliated_family_member", ":var9"),
      (gt, reg0, 0),
      (call_script, "script_troop_get_player_relation", ":var9"),
      (try_begin),
        (lt, reg0, 0),
        (val_add, ":var6", 1),
        (le, reg0, ":var4"),
        (assign, ":var8", ":var9"),
      (else_try),
        (ge, reg0, 20),
        (val_add, ":var5", 1),
        (gt, reg0, ":var3"),
        (assign, ":var7", ":var9"),
      (try_end),
      (val_max, ":var3", reg0),
      (val_min, ":var4", reg0),
    (try_end),
    (try_begin),
      (gt, ":var4", -15),
      (assign, ":var8", 0),
    (else_try),
      (gt, ":var4", -20),
      (str_store_troop_name_link, s0, ":var8"),
      (display_message, "@{s0} is grumbling against you.  Your affiliation could be jeopardized if this continues."),
      (str_clear, s0),
    (else_try),
      (neq, ":var8", 0),
      (ge, ":var5", ":var6"),
      (store_add, reg0, ":var4", ":var3"),
      (ge, reg0, 0),
      (str_store_troop_name_link, s0, ":var8"),
      (str_store_troop_name_link, s1, ":var7"),
      (display_message, "@{s0} is grumbling against you, but with {s1}'s support you remain affiliated for now."),
      (str_clear, s0),
      (str_clear, s1),
      (assign, ":var8", 0),
    (try_end),
    (try_begin),
      (eq, ":var8", 0),
      (try_for_range, ":var9", "trp_knight_1_1", "trp_heroes_end"),
        (call_script, "script_dplmc_is_affiliated_family_member", ":var9"),
        (gt, reg0, 0),
        (try_begin),
          (troop_slot_ge, ":var9", 8, 0),
          (neg|troop_slot_ge, "trp_player", 8, 1),
          (neg|troop_is_wounded, "trp_player"),
          (call_script, "script_change_player_relation_with_troop", ":var9", -1),
        (else_try),
          (call_script, "script_change_player_relation_with_troop", ":var9", 1),
        (try_end),
      (try_end),
    (else_try),
      (call_script, "script_add_notification_menu", "mnu_dplmc_affiliate_end", ":var8", 0),
      (call_script, "script_dplmc_affiliate_end", 1),
    (try_end),
    (assign, reg0, ":var0"),
    (assign, reg1, ":var1"),
    (assign, reg4, ":var2"),
  ]),

  (24,
  []),

  (24,
  []),

  (1897,
  [
    (try_for_parties, ":var0"),
      (gt, ":var0", "p_reserved_5"),
      (party_get_template_id, ":var1", ":var0"),
      (eq, ":var1", "pt_none"),
      (party_get_num_companions, ":var2", ":var0"),
      (eq, ":var2", 0),
      (try_begin),
        (call_script, "script_list_index_of", "trp_list_04", ":var0"),
        (assign, ":var3", reg1),
        (gt, ":var3", 0),
        (call_script, "script_list_remove_at", "trp_list_04", ":var3"),
        (call_script, "script_list_remove_at", "trp_list_05", ":var3"),
      (try_end),
      (remove_party, ":var0"),
    (try_end),
  ]),

  (1,
  [
    (assign, "$prisoner_recruiting_avail", 1),
  ]),

  (1,
  [
    (eq, "$g_player_chancellor", "trp_dplmc_chancellor"),
    (assign, ":var0", reg0),
    (assign, ":var1", reg1),
    (game_get_reduce_campaign_ai, ":var2"),
    (try_for_parties, ":var3"),
      (party_is_active, ":var3"),
      (party_slot_eq, ":var3", 0, 21),
      (party_get_slot, ":var4", ":var3", 5),
      (party_get_slot, ":var5", ":var3", 256),
      (try_begin),
        (party_is_active, ":var4"),
        (store_distance_to_party_from_party, ":var6", ":var3", ":var4"),
        (str_store_party_name, s14, ":var3"),
        (str_store_party_name, s15, ":var4"),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (assign, reg0, ":var6"),
          (display_message, "@Distance between {s14} and {s15}: {reg0}"),
        (try_end),
        (try_begin),
          (le, ":var6", 1),
          (party_get_slot, ":var7", ":var3", 41),
          (str_store_item_name, s12, ":var7"),
          (try_begin),
            (gt, ":var5", 0),
            (str_store_troop_name_link, s13, ":var5"),
          (else_try),
            (str_store_party_name_link, s13, ":var4"),
          (try_end),
          (display_log_message, "@Your caravan has brought {s12} to {s13}.", 0x33FF33),
          (assign, ":var8", 0),
          (store_faction_of_party, ":var9", ":var4"),
          (try_begin),
            (gt, ":var5", 0),
            (faction_slot_eq, ":var9", 11, ":var5"),
            (try_begin),
              (eq, ":var7", "itm_wine"),
              (assign, ":var8", 1),
            (else_try),
              (eq, ":var7", "itm_oil"),
              (assign, ":var8", 2),
            (try_end),
          (else_try),
            (store_random_in_range, ":var10", 1, 3),
            (try_begin),
              (eq, ":var7", "itm_ale"),
              (val_add, ":var8", ":var10"),
            (else_try),
              (eq, ":var7", "itm_wine"),
              (store_add, ":var8", 1, ":var10"),
            (else_try),
              (eq, ":var7", "itm_oil"),
              (store_add, ":var8", 2, ":var10"),
            (else_try),
              (eq, ":var7", "itm_raw_dyes"),
              (val_add, ":var8", 1),
            (else_try),
              (eq, ":var7", "itm_raw_silk"),
              (val_add, ":var8", 2),
            (else_try),
              (eq, ":var7", "itm_velvet"),
              (val_add, ":var8", 4),
            (else_try),
              (eq, ":var7", "itm_smoked_fish"),
              (try_begin),
                (party_slot_eq, ":var4", 0, 4),
                (val_add, ":var8", 1),
              (try_end),
            (else_try),
              (eq, ":var7", "itm_cheese"),
              (val_add, ":var8", 1),
              (try_begin),
                (party_slot_eq, ":var4", 0, 4),
                (val_add, ":var8", 1),
              (try_end),
            (else_try),
              (eq, ":var7", "itm_honey"),
              (val_add, ":var8", 2),
              (try_begin),
                (party_slot_eq, ":var4", 0, 4),
                (val_add, ":var8", 2),
              (try_end),
            (try_end),
          (try_end),
          (try_begin),
            (this_or_next|eq, ":var9", "fac_player_supporters_faction"),
            (eq, ":var9", "$players_kingdom"),
            (val_add, ":var8", 1),
          (try_end),
          (store_item_value, ":var11", ":var7"),
          (party_get_slot, ":var12", ":var3", 233),
          (try_begin),
            (gt, ":var12", 0),
            (val_mul, ":var11", ":var12"),
          (else_try),
            (this_or_next|is_between, ":var5", "trp_knight_1_1_wife", "trp_heroes_end"),
            (neg|is_between, ":var7", "itm_spice", "itm_siege_supply"),
          (else_try),
            (is_between, ":var5", "trp_npc1", "trp_knight_1_1_wife"),
            (val_mul, ":var11", 150),
          (else_try),
            (is_between, ":var4", "p_town_1", "p_salt_mine"),
            (val_mul, ":var11", 300),
          (try_end),
          (assign, ":var12", 100),
          (try_begin),
            (neg|is_between, ":var7", "itm_spice", "itm_siege_supply"),
            (try_begin),
              (this_or_next|gt, ":var5", 0),
              (party_slot_eq, ":var4", 0, 3),
              (assign, ":var12", 115),
            (else_try),
              (assign, ":var12", 130),
            (try_end),
          (else_try),
            (gt, ":var5", 0),
            (assign, ":var13", 0),
            (assign, ":var14", 0),
            (assign, ":var15", 0),
            (assign, ":var16", 0),
            (assign, ":var17", 0),
            (try_for_range, ":var18", "p_town_1", "p_castle_1"),
              (call_script, "script_dplmc_get_item_buy_price_factor", ":var7", ":var18", -2, -2),
              (val_add, ":var13", reg0),
              (store_faction_of_party, ":var19", ":var18"),
              (eq, ":var19", ":var9"),
              (val_add, ":var14", reg0),
              (val_add, ":var15", 1),
              (party_slot_eq, ":var18", 7, ":var5"),
              (val_add, ":var16", reg0),
              (val_add, ":var17", 1),
            (try_end),
            (try_begin),
              (eq, ":var17", 0),
              (try_for_range, ":var18", "p_village_1", "p_salt_mine"),
                (try_begin),
                  (party_slot_eq, ":var18", 7, ":var5"),
                  (call_script, "script_dplmc_get_item_buy_price_factor", ":var7", ":var18", -2, -2),
                  (val_add, ":var15", reg0),
                  (val_add, ":var17", 1),
                (try_end),
                (try_begin),
                  (party_get_slot, reg1, ":var18", 120),
                  (gt, reg1, 0),
                  (party_slot_eq, reg1, 0, 2),
                  (party_slot_eq, reg1, 7, ":var5"),
                  (call_script, "script_dplmc_get_item_buy_price_factor", ":var7", ":var18", -2, -2),
                  (val_add, ":var15", reg0),
                  (val_add, ":var17", 1),
                (try_end),
              (try_end),
            (try_end),
            (try_begin),
              (gt, ":var17", 0),
              (store_div, ":var12", ":var16", ":var17"),
            (else_try),
              (gt, ":var15", 0),
              (val_mul, ":var14", 130),
              (val_div, ":var14", 115),
              (store_div, ":var12", ":var14", ":var15"),
            (else_try),
              (gt, "p_castle_1", "p_town_1"),
              (store_sub, reg1, "p_castle_1", "p_town_1"),
              (val_mul, ":var13", 130),
              (val_div, ":var13", 115),
              (store_div, ":var12", ":var13", reg1),
            (try_end),
          (else_try),
            (gt, ":var4", 0),
            (call_script, "script_dplmc_get_item_buy_price_factor", ":var7", ":var18", -2, -2),
            (assign, ":var12", reg0),
          (else_try),
            (assign, ":var12", 115),
          (try_end),
          (try_begin),
            (ge, "$cheat_mode", 1),
            (assign, reg0, ":var12"),
            (store_mul, reg1, ":var11", ":var12"),
            (val_add, reg1, 50),
            (val_div, reg1, 100),
            (val_add, reg1, 50),
            (display_message, "@{!} Gift price factor {reg0}/100, effective value {reg1}"),
          (try_end),
          (val_mul, ":var11", ":var12"),
          (val_add, ":var11", 50),
          (val_div, ":var11", 100),
          (val_add, ":var11", 50),
          (store_random_in_range, ":var10", 0, 1000),
          (assign, reg0, ":var11"),
          (val_add, ":var11", ":var10"),
          (val_div, ":var11", 1000),
          (try_begin),
            (eq, ":var2", 0),
            (val_min, ":var8", ":var11"),
            (try_begin),
              (eq, ":var8", 0),
              (store_random_in_range, ":var10", 0, 1000),
              (lt, ":var10", reg0),
              (assign, ":var8", 1),
            (try_end),
          (else_try),
            (eq, ":var2", 1),
            (lt, ":var11", ":var8"),
            (val_add, ":var8", ":var11"),
            (val_add, ":var8", 1),
            (val_div, ":var8", 2),
          (else_try),
            (eq, ":var2", 2),
          (try_end),
          (val_max, ":var11", 1),
          (val_min, ":var8", ":var11"),
          (try_begin),
            (lt, ":var8", 1),
            (try_begin),
              (gt, ":var5", 0),
              (display_message, "@{s13} is unimpressed by your paltry gift."),
            (else_try),
              (display_message, "@The people of {s13} are unimpressed by your paltry gift."),
            (try_end),
          (else_try),
            (gt, ":var5", 0),
            (call_script, "script_change_player_relation_with_troop", ":var5", ":var8"),
          (else_try),
            (call_script, "script_change_player_relation_with_center", ":var4", ":var8"),
          (try_end),
          (remove_party, ":var3"),
        (try_end),
      (else_try),
        (display_log_message, "@Your caravan has lost it's way and gave up your mission!", 0xFF0000),
        (remove_party, ":var3"),
      (try_end),
    (try_end),
    (assign, reg0, ":var0"),
    (assign, reg1, ":var1"),
  ]),

  (1,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 8),
      (party_get_slot, ":var1", ":var0", 5),
      (party_get_slot, ":var2", ":var0", 256),
      (try_begin),
        (party_is_active, ":var1"),
        (store_distance_to_party_from_party, ":var3", ":var0", ":var1"),
        (str_store_party_name, s14, ":var0"),
        (str_store_party_name, s15, ":var1"),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (assign, reg0, ":var3"),
          (display_message, "@Distance between {s14} and {s15}: {reg0}"),
        (try_end),
        (try_begin),
          (le, ":var3", 1),
          (try_begin),
            (eq, ":var1", "p_main_party"),
            (party_get_slot, ":var4", ":var0", 256),
            (party_get_slot, ":var5", ":var0", 41),
            (call_script, "script_add_notification_menu", "mnu_dplmc_messenger", ":var4", ":var5"),
            (remove_party, ":var0"),
          (else_try),
            (party_slot_eq, ":var1", 0, 7),
            (party_get_slot, ":var6", ":var0", 41),
            (try_begin),
              (eq, ":var6", -1),
              (remove_party, ":var1"),
            (else_try),
              (eq, ":var6", 14),
              (str_store_party_name, s5, ":var2"),
              (party_set_name, ":var1", "str_s5_transfer"),
              (party_set_ai_behavior, ":var1", ai_bhvr_travel_to_party),
              (party_set_ai_object, ":var1", ":var2"),
              (party_set_slot, ":var1", 5, ":var2"),
              (party_set_slot, ":var1", 4, 14),
              (party_set_aggressiveness, ":var1", 0),
              (party_set_courage, ":var1", 3),
              (party_set_ai_initiative, ":var1", 100),
            (else_try),
              (str_store_party_name, s5, ":var2"),
              (party_set_name, ":var1", "str_s5_patrol"),
              (party_set_ai_behavior, ":var1", ai_bhvr_travel_to_party),
              (party_set_ai_object, ":var1", ":var2"),
              (party_set_slot, ":var1", 5, ":var2"),
              (party_set_slot, ":var1", 255, ":var6"),
            (try_end),
            (remove_party, ":var0"),
          (else_try),
            (is_between, ":var1", "p_town_1", "p_village_1"),
            (party_get_slot, ":var7", ":var0", 234),
            (try_begin),
              (troop_get_slot, ":var8", ":var7", 10),
              (gt, ":var8", 0),
              (party_is_active, ":var8"),
              (neg|party_is_in_town, ":var8", ":var1"),
              (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
              (party_set_ai_object, ":var0", ":var8"),
              (party_set_slot, ":var0", 5, ":var8"),
            (try_end),
          (else_try),
            (party_stack_get_troop_id, ":var4", ":var1", 0),
            (str_store_troop_name, s13, ":var4"),
            (try_begin),
              (eq, "$cheat_mode", 1),
              (display_log_message, "@Your messenger reached {s13}.", 0x00FF00),
              (assign, "$g_talk_troop", ":var4"),
            (try_end),
            (party_get_slot, ":var6", ":var0", 41),
            (assign, ":var5", 0),
            (try_begin),
              (party_set_slot, ":var1", 30, "p_main_party"),
              (store_current_hours, ":var9"),
              (party_set_slot, ":var1", 254, "trp_kingdom_heroes_including_player_begin"),
              (party_set_slot, ":var1", 256, ":var2"),
              (party_set_slot, ":var1", 255, ":var6"),
              (party_set_slot, ":var1", 257, ":var9"),
              (call_script, "script_npc_decision_checklist_party_ai", ":var4"),
              (try_begin),
                (eq, "$cheat_mode", 1),
                (display_message, "@{s14}"),
              (try_end),
              (try_begin),
                (eq, reg0, ":var6"),
                (eq, reg1, ":var2"),
                (assign, ":var5", 1),
              (try_end),
              (call_script, "script_party_set_ai_state", ":var1", reg0, reg1),
            (try_end),
            (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
            (party_set_ai_object, ":var0", "p_main_party"),
            (party_set_slot, ":var0", 5, "p_main_party"),
            (party_set_slot, ":var0", 256, ":var4"),
            (party_set_slot, ":var0", 41, ":var5"),
          (try_end),
        (try_end),
      (else_try),
        (display_log_message, "@Your messenger has lost its way and gave up your mission!", 0xFF0000),
        (remove_party, ":var0"),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (eq, "$g_player_constable", "trp_dplmc_constable"),
    (is_between, "$g_constable_training_center", "p_town_1", "p_village_1"),
    (party_slot_eq, "$g_constable_training_center", 7, "trp_player"),
    (store_skill_level, ":var0", 17, "trp_player"),
    (val_add, ":var0", 4),
    (store_div, ":var1", ":var0", 1),
    (try_begin),
      (ge, "$novice_training_difficulty", 1),
      (game_get_reduce_campaign_ai, ":var2"),
      (val_add, ":var2", "$novice_training_difficulty"),
      (val_max, ":var2", 3),
      (val_add, ":var1", ":var2"),
    (try_end),
    (store_mul, ":var3", "$g_constable_training_improved", 2),
    (val_add, ":var3", 8),
    (store_troop_gold, ":var4", "trp_household_possessions"),
    (store_mul, ":var5", "$g_constable_training_improved", 10),
    (gt, ":var4", ":var5"),
    (assign, ":var6", "$g_constable_training_center"),
    (party_get_num_companion_stacks, ":var7", ":var6"),
    (try_for_range, ":var8", 0, ":var7"),
      (gt, ":var1", 0),
      (party_stack_get_troop_id, ":var9", ":var6", ":var8"),
      (neg|troop_is_hero, ":var9"),
      (assign, ":var10", -1),
      (troop_get_upgrade_troop, ":var11", ":var9", 0),
      (gt, ":var11", 0),
      (try_begin),
        (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var11"),
        (assign, ":var10", ":var11"),
      (else_try),
        (troop_get_upgrade_troop, ":var12", ":var9", 1),
        (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var12"),
        (assign, ":var10", ":var12"),
      (else_try),
        (assign, ":var10", ":var12"),
        (try_begin),
          (troop_get_upgrade_troop, ":var13", ":var10", 0),
          (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var13"),
          (assign, ":var10", ":var13"),
        (else_try),
          (troop_get_upgrade_troop, ":var14", ":var10", 1),
          (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var14"),
          (assign, ":var10", ":var14"),
        (try_end),
        (eq, ":var10", ":var12"),
        (try_begin),
          (troop_get_upgrade_troop, ":var13", ":var10", 0),
          (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var13"),
          (assign, ":var10", ":var13"),
        (else_try),
          (troop_get_upgrade_troop, ":var14", ":var10", 1),
          (call_script, "script_cf_troop_is_class", "$g_constable_training_type", ":var14"),
          (assign, ":var10", ":var14"),
        (try_end),
      (try_end),
      (gt, ":var10", 0),
      (store_character_level, ":var15", ":var9"),
      (le, ":var15", ":var3"),
      (party_stack_get_size, ":var2", ":var6", ":var8"),
      (party_stack_get_num_wounded, ":var16", ":var6", ":var8"),
      (val_sub, ":var2", ":var16"),
      (try_begin),
        (ge, "$g_constable_training_improved", 1),
        (le, ":var15", 8),
        (val_add, ":var2", 4),
      (try_end),
      (val_min, ":var2", ":var1"),
      (call_script, "script_game_get_upgrade_cost", ":var9"),
      (store_mul, ":var17", ":var2", reg0),
      (val_add, ":var5", ":var17"),
      (try_begin),
        (lt, ":var4", ":var5"),
        (val_sub, ":var5", ":var17"),
        (val_div, ":var17", ":var2"),
        (store_sub, ":var2", ":var4", ":var5"),
        (val_div, ":var2", ":var17"),
        (val_mul, ":var2", ":var17"),
        (val_add, ":var5", ":var17"),
        (str_store_troop_name_plural, s6, ":var9"),
        (display_message, "@Not enough money in treasury to upgrade {s6}."),
      (try_end),
      (party_remove_members, ":var6", ":var9", ":var2"),
      (party_add_members, ":var6", ":var10", ":var2"),
      (val_sub, ":var1", ":var2"),
      (assign, reg5, ":var2"),
      (str_store_troop_name_by_count, s6, ":var9", ":var2"),
      (str_store_troop_name_by_count, s7, ":var10", ":var2"),
      (str_store_party_name_link, s8, ":var6"),
      (display_log_message, "@Your constable upgraded {reg5} {s6} to {s7} in {s8}"),
    (try_end),
    (call_script, "script_dplmc_withdraw_from_treasury", ":var5"),
  ]),

  (2,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 7),
      (neq, ":var0", "p_main_party"),
      (try_begin),
        (get_party_ai_behavior, ":var1", ":var0"),
        (eq, ":var1", 1),
        (party_get_slot, ":var2", ":var0", 5),
        (try_begin),
          (gt, ":var2", 0),
          (store_distance_to_party_from_party, ":var3", ":var0", ":var2"),
          (le, ":var3", 5),
          (try_begin),
            (le, ":var3", 3),
            (is_between, ":var2", "p_town_1", "p_village_1"),
            (call_script, "script_party_add_party_prisoners", ":var2", ":var0"),
            (call_script, "script_party_remove_all_prisoners", ":var0"),
          (try_end),
          (try_begin),
            (party_get_slot, ":var4", ":var0", 4),
            (eq, ":var4", 14),
            (try_begin),
              (le, ":var3", 1),
              (call_script, "script_party_add_party", ":var2", ":var0"),
              (remove_party, ":var0"),
            (try_end),
          (else_try),
            (party_get_position, pos1, ":var2"),
            (party_set_ai_behavior, ":var0", ai_bhvr_patrol_location),
            (party_set_ai_patrol_radius, ":var0", 1),
            (party_set_ai_target_position, ":var0", pos1),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (0.2,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 10),
      (try_begin),
        (get_party_ai_behavior, ":var1", ":var0"),
        (this_or_next|eq, ":var1", 6),
        (eq, ":var1", 1),
        (party_get_slot, ":var2", ":var0", 5),
        (store_distance_to_party_from_party, ":var3", ":var0", ":var2"),
        (le, ":var3", 1),
        (try_begin),
          (eq, ":var2", "p_main_party"),
          (party_get_slot, ":var4", ":var0", 41),
          (call_script, "script_add_notification_menu", "mnu_dplmc_scout", ":var4", 0),
          (remove_party, ":var0"),
        (else_try),
          (neq, ":var2", "p_main_party"),
          (party_get_slot, ":var5", ":var0", 41),
          (try_begin),
            (le, ":var5", 100),
            (disable_party, ":var0"),
            (val_add, ":var5", 1),
            (party_set_slot, ":var0", 41, ":var5"),
            (try_begin),
              (store_random_in_range, ":var6", 0, 1000),
              (eq, ":var6", 0),
              (str_store_party_name, s11, ":var2"),
              (display_log_message, "@It is rumoured that a spy has been caught in {s11}.", 0xFF0000),
              (remove_party, ":var0"),
            (try_end),
          (else_try),
            (enable_party, ":var0"),
            (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
            (party_set_ai_object, ":var0", "p_main_party"),
            (party_set_slot, ":var0", 5, "p_main_party"),
            (party_set_slot, ":var0", 41, ":var2"),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (0,
  [
    (map_free),
    (this_or_next|key_clicked, key_o),
    (neq, "$g_lco_operation", 0),
    (try_begin),
      (this_or_next|key_clicked, key_o),
      (eq, "$g_lco_operation", 1),
      (assign, "$g_lco_operation", 0),
      (jump_to_menu, "mnu_lco_presentation"),
    (else_try),
      (eq, "$g_lco_operation", 2),
      (jump_to_menu, "mnu_lco_view_character"),
    (try_end),
  ]),

  (720,
  [
    (assign, ":var0", 0),
    (try_begin),
      (neq, "$players_kingdom", "fac_player_supporters_faction"),
      (is_between, "$players_kingdom", "fac_kingdom_1", "fac_kingdoms_end"),
      (call_script, "script_dplmc_get_troop_standing_in_faction", "trp_player", "$players_kingdom"),
      (ge, reg0, 50),
      (assign, ":var0", 1),
      (faction_get_slot, reg0, "$players_kingdom", 243),
      (faction_set_slot, "fac_player_supporters_faction", 243, reg0),
      (faction_get_slot, reg0, "$players_kingdom", 241),
      (faction_set_slot, "fac_player_supporters_faction", 241, reg0),
      (faction_get_slot, reg0, "$players_kingdom", 244),
      (faction_set_slot, "fac_player_supporters_faction", 244, reg0),
      (faction_get_slot, reg0, "$players_kingdom", 242),
      (faction_set_slot, "fac_player_supporters_faction", 242, reg0),
      (faction_get_slot, reg0, "$players_kingdom", 246),
      (faction_set_slot, "fac_player_supporters_faction", 246, reg0),
    (try_end),
    (try_for_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var1", 21, 0),
      (faction_get_slot, ":var2", ":var1", 241),
      (faction_get_slot, ":var3", ":var1", 242),
      (faction_get_slot, ":var4", ":var1", 244),
      (faction_get_slot, ":var5", ":var1", 243),
      (faction_get_slot, ":var6", ":var1", 246),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (str_store_faction_name, s9, ":var1"),
        (assign, reg1, ":var2"),
        (display_message, "@{!}DEBUG - centralization {reg1}"),
        (assign, reg1, ":var3"),
        (display_message, "@{!}DEBUG - aristocracy {reg1}"),
        (assign, reg1, ":var4"),
        (display_message, "@{!}DEBUG - quality {reg1}"),
        (assign, reg1, ":var5"),
        (display_message, "@{!}DEBUG - serfdom {reg1}"),
        (assign, reg1, ":var6"),
        (display_message, "@{!}DEBUG - mercantilism {reg1}"),
      (try_end),
      (try_begin),
        (is_between, ":var1", "fac_kingdom_1", "fac_kingdoms_end"),
        (this_or_next|neq, ":var1", "$players_kingdom"),
        (eq, ":var0", 0),
        (store_random_in_range, ":var7", 0, 10),
        (try_begin),
          (is_between, ":var7", 1, 6),
          (store_random_in_range, ":var8", -1, 2),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_faction_name, s12, ":var1"),
            (assign, reg1, ":var8"),
            (assign, reg2, ":var7"),
            (display_message, "@{!}DEBUG - changing {reg1} of {reg2} for {s12}"),
          (try_end),
          (try_begin),
            (eq, ":var7", 1),
            (val_add, ":var2", ":var8"),
            (val_max, ":var2", -3),
            (val_min, ":var2", 3),
            (faction_set_slot, ":var1", 241, ":var2"),
          (else_try),
            (eq, ":var7", 2),
            (val_add, ":var3", ":var8"),
            (val_max, ":var3", -3),
            (val_min, ":var3", 3),
            (faction_set_slot, ":var1", 242, ":var3"),
          (else_try),
            (eq, ":var7", 3),
            (val_add, ":var4", ":var8"),
            (val_max, ":var4", -3),
            (val_min, ":var4", 3),
            (faction_set_slot, ":var1", 244, ":var4"),
          (else_try),
            (eq, ":var7", 4),
            (val_add, ":var5", ":var8"),
            (val_max, ":var5", -3),
            (val_min, ":var5", 3),
            (faction_set_slot, ":var1", 243, ":var5"),
            (eq, ":var7", 5),
            (val_add, ":var6", ":var8"),
            (val_clamp, ":var6", -3, 4),
            (faction_set_slot, ":var1", 246, ":var6"),
          (try_end),
        (try_end),
      (else_try),
        (store_sub, ":var9", ":var3", ":var2"),
        (store_mul, ":var10", ":var3", -1),
        (val_sub, ":var10", ":var2"),
        (store_mul, ":var11", ":var5", -1),
        (val_sub, ":var10", ":var2"),
        (try_begin),
          (this_or_next|neq, ":var11", 0),
          (this_or_next|neq, ":var10", 0),
          (neq, ":var9", 0),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_faction_name, s9, ":var1"),
            (assign, reg1, ":var9"),
            (display_message, "@{!}DEBUG - relation change =  {reg1} for {s9}"),
          (try_end),
          (try_for_range, ":var12", "trp_npc1", "trp_heroes_end"),
            (troop_slot_eq, ":var12", 2, 2),
            (store_faction_of_troop, ":var13", ":var12"),
            (eq, ":var1", ":var13"),
            (faction_get_slot, ":var14", ":var1", 11),
            (neq, ":var12", ":var14"),
            (assign, ":var15", ":var9"),
            (try_begin),
              (troop_slot_eq, ":var12", 53, 10),
              (assign, ":var15", ":var10"),
            (else_try),
              (troop_slot_eq, ":var12", 53, 9),
              (assign, ":var15", ":var11"),
            (try_end),
            (assign, ":var16", 0),
            (try_begin),
              (is_between, ":var12", "trp_npc1", "trp_kingdom_1_lord"),
              (troop_slot_eq, ":var12", 142, 1),
              (try_begin),
                (troop_slot_eq, ":var12", 143, 5),
                (try_begin),
                  (neg|this_or_next|faction_slot_ge, ":var13", 242, -1),
                  (faction_slot_ge, ":var13", 241, 2),
                  (val_sub, ":var16", 1),
                (else_try),
                  (this_or_next|faction_slot_ge, ":var13", 242, 2),
                  (neg|faction_slot_ge, ":var13", 241, -2),
                  (faction_slot_ge, ":var13", 242, -1),
                  (val_add, ":var16", 1),
                (try_end),
              (else_try),
                (troop_slot_eq, ":var12", 143, 2),
                (try_begin),
                  (faction_slot_ge, ":var13", 243, 2),
                  (val_sub, ":var16", 1),
                (else_try),
                  (neg|faction_slot_ge, ":var13", 243, 0),
                  (store_add, ":var17", ":var5", ":var3"),
                  (lt, ":var17", 0),
                  (val_add, ":var16", 1),
                (try_end),
              (try_end),
            (try_end),
            (try_begin),
              (troop_slot_eq, ":var12", 54, 5),
              (neg|this_or_next|faction_slot_ge, ":var13", 242, -1),
              (faction_slot_ge, ":var13", 241, 2),
              (neg|troop_slot_eq, ":var12", 53, 5),
              (neg|troop_slot_eq, ":var12", 53, 7),
              (val_sub, ":var16", 1),
            (else_try),
              (troop_slot_eq, ":var12", 54, 2),
              (faction_slot_ge, ":var13", 243, 2),
              (neg|troop_slot_eq, ":var12", 53, 2),
              (neg|troop_slot_eq, ":var12", 53, 3),
              (neg|troop_slot_eq, ":var12", 53, 5),
              (val_sub, ":var16", 1),
            (try_end),
            (val_clamp, ":var16", -1, 2),
            (val_add, ":var15", ":var16"),
            (neq, ":var15", 0),
            (call_script, "script_change_player_relation_with_troop", ":var12", ":var15"),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (200,
  [
    (try_begin),
      (party_template_set_slot, "pt_khorne_army", 5, "p_khorne_army_spawn_point"),
      (party_template_set_slot, "pt_khorne_army2", 5, "p_khorne_army2_spawn_point"),
      (party_template_set_slot, "pt_nurgle_army", 5, "p_nurgle_army_spawn_point"),
      (party_template_set_slot, "pt_demon_army", 5, "p_demon_army_spawn_point"),
      (party_template_set_slot, "pt_demon_army2", 5, "p_demon_army2_spawn_point"),
      (party_template_set_slot, "pt_ogre_army", 5, "p_ogre_army_spawn_point"),
      (party_template_set_slot, "pt_chaos_dwarf_army", 5, "p_chaos_dwarf_army_spawn_point"),
      (party_template_set_slot, "pt_chaos_dwarf_army2", 5, "p_chaos_dwarf_army2_spawn_point"),
      (party_template_set_slot, "pt_ninja_army", 5, "p_ninja_army_spawn_point"),
      (party_template_set_slot, "pt_ninja_army2", 5, "p_ninja_army2_spawn_point"),
      (store_random_in_range, ":var0", 0, 100),
      (ge, ":var0", 50),
      (try_begin),
        (store_random_in_range, ":var0", 0, 100),
        (le, ":var0", 10),
        (assign, ":var1", "p_demon_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_demon_army"),
      (else_try),
        (le, ":var0", 20),
        (assign, ":var1", "p_khorne_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_khorne_army"),
      (else_try),
        (le, ":var0", 30),
        (assign, ":var1", "p_khorne_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_nurgle_army"),
      (else_try),
        (le, ":var0", 40),
        (assign, ":var1", "p_chaos_dwarf_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_chaos_dwarf_army"),
      (else_try),
        (le, ":var0", 50),
        (assign, ":var1", "p_ninja_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_ninja_army"),
      (else_try),
        (le, ":var0", 60),
        (assign, ":var1", "p_ninja_army2_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_ninja_army2"),
      (else_try),
        (le, ":var0", 70),
        (assign, ":var1", "p_chaos_dwarf_army2_spawn_point"),
        (set_spawn_radius, 10),
        (spawn_around_party, ":var1", "pt_chaos_dwarf_army2"),
      (else_try),
        (le, ":var0", 80),
        (assign, ":var1", "p_khorne_army2_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_khorne_army2"),
      (else_try),
        (le, ":var0", 90),
        (assign, ":var1", "p_demon_army2_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_demon_army2"),
      (else_try),
        (assign, ":var1", "p_ogre_army_spawn_point"),
        (set_spawn_radius, 50),
        (spawn_around_party, ":var1", "pt_ogre_army"),
      (try_end),
    (try_end),
  ]),

  (28,
  [
    (try_for_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_set_slot, ":var0", 24, 0),
    (try_end),
    (try_for_parties, ":var1"),
      (store_faction_of_party, ":var2", ":var1"),
      (is_between, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (is_between, ":var1", "p_town_1", "p_village_1"),
      (faction_get_slot, ":var3", ":var2", 24),
      (val_add, ":var3", 1),
      (faction_set_slot, ":var2", 24, ":var3"),
    (try_end),
  ]),

  (500,
  [
    (neq, "$g_camp_mode", 1),
    (neq, "$g_town_visit_after_rest", 1),
    (neq, "$g_player_icon_state", 2),
    (neq, "$g_player_is_captive", 1),
    (neg|troop_slot_ge, "trp_player", 8, 0),
    (store_troop_gold, ":var0", "trp_player"),
    (troop_get_type, ":var1", "trp_player"),
    (store_skill_level, ":var2", "skl_athletics", "trp_player"),
    (store_skill_level, ":var3", "skl_weapon_master", "trp_player"),
    (store_free_inventory_capacity, ":var4", "trp_player"),
    (troop_get_slot, ":var5", "trp_player", 226),
    (party_get_num_companion_stacks, ":var6", "p_main_party"),
    (store_random_in_range, ":var7", 1, 42),
    (try_begin),
      (eq, ":var7", 0),
      (jump_to_menu, "mnu_world_event_01"),
    (else_try),
      (eq, ":var7", 1),
      (jump_to_menu, "mnu_world_event_02"),
    (else_try),
      (eq, ":var7", 2),
      (jump_to_menu, "mnu_world_event_03"),
    (else_try),
      (eq, ":var7", 3),
      (jump_to_menu, "mnu_world_event_04"),
    (else_try),
      (eq, ":var7", 4),
      (jump_to_menu, "mnu_world_event_05"),
    (else_try),
      (eq, ":var7", 5),
      (this_or_next|neq, ":var1", 2),
      (this_or_next|neq, ":var1", 9),
      (neq, ":var1", 10),
      (jump_to_menu, "mnu_world_event_06"),
    (else_try),
      (eq, ":var7", 6),
      (jump_to_menu, "mnu_world_event_07"),
    (else_try),
      (eq, ":var7", 7),
      (jump_to_menu, "mnu_world_event_08"),
    (else_try),
      (eq, ":var7", 8),
      (jump_to_menu, "mnu_world_event_09"),
    (else_try),
      (eq, ":var7", 9),
      (jump_to_menu, "mnu_world_event_10"),
    (else_try),
      (eq, ":var7", 10),
      (jump_to_menu, "mnu_world_event_11"),
    (else_try),
      (eq, ":var7", 11),
      (jump_to_menu, "mnu_world_event_12"),
    (else_try),
      (eq, ":var7", 12),
      (jump_to_menu, "mnu_world_event_13"),
    (else_try),
      (eq, ":var7", 13),
      (jump_to_menu, "mnu_world_event_14"),
    (else_try),
      (eq, ":var7", 14),
      (jump_to_menu, "mnu_world_event_15"),
    (else_try),
      (eq, ":var7", 15),
      (neq, ":var5", 4),
      (jump_to_menu, "mnu_world_event_16"),
    (else_try),
      (eq, ":var7", 16),
      (ge, ":var0", 200),
      (jump_to_menu, "mnu_world_event_17"),
    (else_try),
      (eq, ":var7", 17),
      (jump_to_menu, "mnu_world_event_18"),
    (else_try),
      (eq, ":var7", 18),
      (ge, ":var6", 20),
      (jump_to_menu, "mnu_world_event_19"),
    (else_try),
      (eq, ":var7", 19),
      (this_or_next|neq, ":var1", 2),
      (this_or_next|neq, ":var1", 9),
      (neq, ":var1", 10),
      (jump_to_menu, "mnu_world_event_20"),
    (else_try),
      (eq, ":var7", 20),
      (ge, ":var0", 400),
      (jump_to_menu, "mnu_world_event_21"),
    (else_try),
      (eq, ":var7", 21),
      (eq, "$chaosdwarfquest", 0),
      (jump_to_menu, "mnu_world_event_22"),
    (else_try),
      (eq, ":var7", 22),
      (jump_to_menu, "mnu_world_event_23"),
    (else_try),
      (eq, ":var7", 23),
      (ge, ":var2", 3),
      (jump_to_menu, "mnu_world_event_24"),
    (else_try),
      (eq, ":var7", 24),
      (ge, ":var4", 1),
      (jump_to_menu, "mnu_world_event_25"),
    (else_try),
      (eq, ":var7", 25),
      (ge, ":var4", 5),
      (jump_to_menu, "mnu_world_event_26"),
    (else_try),
      (eq, ":var7", 26),
      (is_currently_night),
      (jump_to_menu, "mnu_world_event_27"),
    (else_try),
      (eq, ":var7", 27),
      (jump_to_menu, "mnu_world_event_28"),
    (else_try),
      (eq, ":var7", 28),
      (ge, ":var0", 500),
      (jump_to_menu, "mnu_world_event_29"),
    (else_try),
      (eq, ":var7", 29),
      (this_or_next|neq, ":var1", 2),
      (this_or_next|neq, ":var1", 9),
      (neq, ":var1", 10),
      (jump_to_menu, "mnu_world_event_30"),
    (else_try),
      (eq, ":var7", 30),
      (jump_to_menu, "mnu_world_event_31"),
    (else_try),
      (eq, ":var7", 31),
      (jump_to_menu, "mnu_world_event_25"),
    (else_try),
      (eq, ":var7", 32),
      (ge, ":var6", 3),
      (jump_to_menu, "mnu_world_event_33"),
    (else_try),
      (eq, ":var7", 33),
      (jump_to_menu, "mnu_world_event_34"),
    (else_try),
      (eq, ":var7", 34),
      (neq, ":var5", 4),
      (jump_to_menu, "mnu_world_event_35"),
    (else_try),
      (eq, ":var7", 35),
      (lt, ":var3", 10),
      (jump_to_menu, "mnu_world_event_36"),
    (else_try),
      (eq, ":var7", 36),
      (ge, ":var4", 5),
      (jump_to_menu, "mnu_world_event_37"),
    (else_try),
      (eq, ":var7", 37),
      (jump_to_menu, "mnu_world_event_38"),
    (else_try),
      (eq, ":var7", 38),
      (jump_to_menu, "mnu_world_event_04"),
    (else_try),
      (eq, ":var7", 39),
      (jump_to_menu, "mnu_world_event_39"),
    (else_try),
      (eq, ":var7", 40),
      (jump_to_menu, "mnu_world_event_40"),
    (else_try),
      (eq, ":var7", 41),
      (jump_to_menu, "mnu_world_event_41"),
    (try_end),
  ]),

  (96,
  [
    (eq, "$has_plague", 1),
    (store_skill_level, ":var0", 37, "trp_player"),
    (store_random_in_range, ":var1", 1, 21),
    (val_add, ":var1", ":var0"),
    (try_begin),
      (lt, ":var1", 14),
      (display_message, "@The plague still takes its toll on your body.", 0xFFAAFFAA),
    (else_try),
      (assign, "$has_plague", 0),
      (display_message, "@You have recovered from the plague.", 0xFFAAAAFF),
      (troop_raise_attribute, "trp_player", ca_strength, 3),
      (troop_raise_attribute, "trp_player", ca_agility, 3),
      (try_begin),
        (eq, "$plagueironflesh", 2),
        (troop_raise_skill, "trp_player", "skl_ironflesh", 2),
        (assign, "$plagueironflesh", 0),
      (try_end),
      (try_begin),
        (eq, "$plaguepower_strike", 2),
        (troop_raise_skill, "trp_player", "skl_power_strike", 2),
        (assign, "$plaguepower_strike", 0),
      (try_end),
      (try_begin),
        (eq, "$plagueathletics", 2),
        (troop_raise_skill, "trp_player", "skl_athletics", 2),
        (assign, "$plagueathletics", 0),
      (try_end),
    (try_end),
  ]),

  (77,
  [
    (neq, "$g_player_is_captive", 1),
    (neg|troop_slot_ge, "trp_player", 8, 0),
    (neq, "$g_player_icon_state", 2),
    (try_begin),
      (check_quest_active, "qst_chaos_dwarf"),
      (this_or_next|eq, "$chaosdwarfquest", 2),
      (this_or_next|eq, "$chaosdwarfquest", 3),
      (eq, "$chaosdwarfquest", 4),
      (jump_to_menu, "mnu_josef_end"),
    (else_try),
      (check_quest_active, "qst_rescue_maldrex"),
      (quest_slot_eq, "qst_rescue_maldrex", 11, 5),
      (jump_to_menu, "mnu_josef_end"),
    (else_try),
    (try_end),
  ]),

  (97,
  [
    (eq, "$hasfall", 1),
    (store_skill_level, ":var0", 37, "trp_player"),
    (store_random_in_range, ":var1", 1, 21),
    (val_add, ":var1", ":var0"),
    (try_begin),
      (ge, ":var1", 10),
      (troop_raise_skill, "trp_player", 25, 2),
      (display_message, "@You have recovered from the fall"),
      (assign, "$hasfall", 0),
    (else_try),
    (try_end),
  ]),

  (715,
  [
    (try_for_range, ":var0", "trp_potionseller", "trp_quick_battle_6_player"),
      (troop_set_slot, ":var0", 220, 2),
    (try_end),
    (try_for_range, ":var1", "trp_npc1", "trp_kingdom_1_lord"),
      (troop_slot_eq, ":var1", 2, 12),
      (party_force_add_members, "p_main_party", ":var1", 1),
      (troop_set_slot, ":var1", 2, 5),
      (str_store_troop_name, s1, ":var1"),
      (display_message, "@{s1} has returned to your party", 0xFF6AAA89),
    (try_end),
  ]),

  (33,
  [
    (this_or_next|eq, "$strengthpotion", 1),
    (this_or_next|eq, "$toughnesspotion", 1),
    (this_or_next|eq, "$battlepotion", 1),
    (this_or_next|eq, "$instabilitypotion", 1),
    (this_or_next|eq, "$elementalpotion", 1),
    (this_or_next|eq, "$painpotion", 1),
    (eq, "$disguised", 1),
    (store_skill_level, ":var0", 37, "trp_player"),
    (try_begin),
      (eq, "$strengthpotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (troop_raise_skill, "trp_player", 35, -5),
      (assign, "$strengthpotion", 0),
      (display_message, "@The potion of strength wears off"),
    (try_end),
    (try_begin),
      (eq, "$toughnesspotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (troop_raise_skill, "trp_player", 36, -5),
      (assign, "$toughnesspotion", 0),
      (display_message, "@The potion of toughness wears off"),
    (try_end),
    (try_begin),
      (eq, "$battlepotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (troop_get_slot, ":var2", "trp_player", 245),
      (call_script, "script_troop_set_skill_level", "skl_weapon_master", ":var2", "trp_player"),
      (assign, "$battlepotion", 0),
      (display_message, "@The potion of battle wears off"),
    (try_end),
    (try_begin),
      (eq, "$instabilitypotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (troop_set_slot, "trp_player", 58, 0),
      (assign, "$instabilitypotion", 0),
      (display_message, "@The potion of instability wears off"),
    (try_end),
    (try_begin),
      (eq, "$elementalpotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (call_script, "script_troop_set_skill_level", "skl_athletics", "$originalath1"),
      (assign, "$elementalpotion", 0),
      (display_message, "@The potion of elemental speed wears off"),
    (try_end),
    (try_begin),
      (eq, "$painpotion", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (troop_get_slot, ":var3", "trp_player", 173),
      (try_begin),
        (eq, ":var3", 4),
        (troop_set_slot, "trp_player", 173, 2),
        (assign, "$painpotion", 0),
        (display_message, "@The potion of pain wears off"),
      (else_try),
        (troop_set_slot, "trp_player", 173, 0),
        (assign, "$painpotion", 0),
        (display_message, "@The potion of pain wears off"),
      (try_end),
    (try_end),
    (try_begin),
      (eq, "$disguised", 1),
      (store_random_in_range, ":var1", 1, 21),
      (val_sub, ":var1", ":var0"),
      (ge, ":var1", 4),
      (assign, "$disguised", 0),
      (display_message, "@The potion of disguise wears off"),
    (try_end),
  ]),

  (342,
  [
    (troop_get_slot, ":var0", "trp_player", 7),
    (ge, ":var0", 1000),
    (try_begin),
      (eq, "$disposition", 1),
      (try_begin),
        (eq, "$player_honor", 100),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (ge, "$player_honor", 90),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 10),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (ge, "$player_honor", 80),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 20),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (ge, "$player_honor", 70),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 30),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (ge, "$player_honor", 60),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 40),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (ge, "$player_honor", 50),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 50),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
      (try_end),
    (else_try),
      (eq, "$disposition", 2),
      (try_begin),
        (eq, "$player_honor", -100),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (lt, "$player_honor", -90),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 10),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (lt, "$player_honor", -80),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 20),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (lt, "$player_honor", -70),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 30),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (lt, "$player_honor", -60),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 40),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
        (lt, "$player_honor", -50),
        (store_random_in_range, ":var1", 0, 101),
        (ge, ":var1", 50),
        (val_add, "$player_right_to_rule", 1),
        (val_clamp, "$player_right_to_rule", 0, 100),
        (display_message, "@Your reputation spreads throughout the land. Gain right to rule."),
      (else_try),
      (try_end),
    (try_end),
  ]),

  (17,
  [
    (party_get_num_companion_stacks, ":var0", "p_main_party"),
    (try_for_range, ":var1", 0, ":var0"),
      (party_stack_get_troop_id, ":var2", "p_main_party", ":var1"),
      (troop_is_hero, ":var2"),
      (troop_get_slot, ":var3", ":var2", 222),
      (eq, ":var3", 1),
      (store_skill_level, ":var4", 37, ":var2"),
      (store_random_in_range, ":var5", 1, 21),
      (val_add, ":var5", ":var4"),
      (try_begin),
        (ge, ":var5", 16),
        (troop_set_slot, ":var2", 222, 0),
        (str_store_troop_name, s1, ":var2"),
        (display_message, "@{s1} has recovered from the effects of being poisoned", 0xFFAAAAFF),
      (else_try),
        (store_troop_health, ":var6", ":var2"),
        (val_sub, ":var6", 10),
        (troop_set_health, ":var2", ":var6"),
        (str_store_troop_name, s1, ":var2"),
        (display_message, "@Poison continues to take its toll on {s1} ", 0xFFFFAAAA),
      (try_end),
    (try_end),
  ]),

  (25,
  [
    (eq, "$is_drunk", 0),
    (eq, "$hasfall", 0),
    (eq, "$has_plague", 0),
    (troop_get_slot, ":var0", "trp_player", 222),
    (eq, ":var0", 0),
    (neq, "$g_player_is_captive", 1),
    (neg|troop_slot_ge, "trp_player", 8, 0),
    (store_skill_level, ":var1", 37, "trp_player"),
    (ge, ":var1", 1),
    (store_troop_health, ":var2", "trp_player"),
    (val_add, ":var2", ":var1"),
    (val_clamp, ":var2", 0, 100),
    (troop_set_health, "trp_player", ":var2"),
  ]),

  (25,
  [
    (eq, "$is_drunk", 1),
    (store_current_hours, ":var0"),
    (troop_get_slot, ":var1", "trp_player", 224),
    (store_sub, ":var2", ":var0", ":var1"),
    (ge, ":var2", 18),
    (troop_raise_skill, "trp_player", 35, "$drunkpowerreverse"),
    (troop_raise_skill, "trp_player", 25, "$drunkathleticsreverse"),
    (troop_raise_attribute, "trp_player", ca_agility, "$drunkagilityreverse"),
    (try_begin),
      (neq, "$drunkironreverse", 0),
      (troop_raise_skill, "trp_player", 35, "$drunkironreverse"),
    (try_end),
    (try_begin),
      (neq, "$drunkstrengthreverse", 0),
      (troop_raise_attribute, "trp_player", ca_strength, "$drunkstrengthreverse"),
    (try_end),
    (try_begin),
      (neq, "$drunkmasterreverse", 0),
      (troop_raise_skill, "trp_player", 27, "$drunkmasterreverse"),
    (try_end),
    (try_begin),
      (neq, "$drunkignorereverse", 0),
      (troop_set_slot, "trp_player", 173, 0),
    (try_end),
    (assign, "$drunkpowerreverse", 0),
    (assign, "$drunkathleticsreverse", 0),
    (assign, "$drunkagilityreverse", 0),
    (assign, "$drunkironreverse", 0),
    (assign, "$drunkstrengthreverse", 0),
    (assign, "$drunkmasterreverse", 0),
    (assign, "$drunkignorereverse", 0),
    (assign, "$is_drunk", 0),
    (display_message, "@You are no longer drunk", 0xFF4500),
  ]),

  (250,
  [
    (call_script, "script_magic_reinforcement"),
  ]),

  (6,
  [
    (troop_slot_eq, "trp_player", 225, 1),
    (troop_slot_eq, "trp_player", 226, 20),
    (eq, "$is_drunk", 0),
    (eq, "$hasfall", 0),
    (eq, "$has_plague", 0),
    (troop_get_slot, ":var0", "trp_player", 222),
    (eq, ":var0", 0),
    (neq, "$g_player_is_captive", 1),
    (neg|troop_slot_ge, "trp_player", 8, 0),
    (store_skill_level, ":var1", 18, "trp_player"),
    (store_troop_health, ":var2", "trp_player"),
    (val_add, ":var2", ":var1"),
    (val_clamp, ":var2", 0, 100),
    (troop_set_health, "trp_player", ":var2"),
  ]),

  (719,
  [
    (call_script, "script_refresh_potion_sellers"),
  ]),

  (0.1,
  [
    (neq, "$g_camp_mode", 1),
    (troop_get_inventory_slot, ":var0", "trp_player", ek_horse),
    (party_get_current_terrain, ":var1", "p_main_party"),
    (try_begin),
      (this_or_next|eq, ":var1", 7),
      (this_or_next|eq, ":var1", 8),
      (eq, ":var1", 0),
      (assign, ":var2", "icon_ship"),
    (else_try),
      (troop_get_type, ":var3", "trp_player"),
      (try_begin),
        (this_or_next|eq, ":var3", 0),
        (this_or_next|eq, ":var3", 1),
        (this_or_next|eq, ":var3", 8),
        (eq, ":var3", 5),
        (try_begin),
          (ge, ":var0", 0),
          (assign, ":var2", "icon_player_horseman"),
        (else_try),
          (assign, ":var2", "icon_player"),
        (try_end),
      (else_try),
        (eq, ":var3", 4),
        (assign, ":var2", "icon_lord_faction_2"),
      (else_try),
        (eq, ":var3", 6),
        (assign, ":var2", "icon_lord_faction_5"),
      (else_try),
        (eq, ":var3", 2),
        (assign, ":var2", "icon_lord_faction_6"),
      (else_try),
        (eq, ":var3", 10),
        (assign, ":var2", "icon_lord_faction_7"),
      (else_try),
        (eq, ":var3", 14),
        (assign, ":var2", "icon_lord_faction_8"),
      (else_try),
        (eq, ":var3", 12),
        (assign, ":var2", "icon_lord_faction_10"),
      (else_try),
        (eq, ":var3", 15),
        (assign, ":var2", "icon_lord_faction_13"),
      (else_try),
        (eq, ":var3", 13),
        (assign, ":var2", "icon_lord_faction_15"),
      (else_try),
        (eq, ":var3", 9),
        (troop_get_inventory_slot, ":var0", "trp_player", ek_horse),
        (try_begin),
          (ge, ":var0", 0),
          (assign, ":var2", "icon_lord_faction_17"),
        (else_try),
          (assign, ":var2", "icon_player"),
        (try_end),
      (else_try),
        (assign, ":var2", "icon_player"),
      (try_end),
      (party_set_icon, "p_main_party", ":var2"),
    (try_end),
  ]),

  (0.5,
  [
    (gt, "$auto_besiege_town", 0),
    (gt, "$g_player_besiege_town", 0),
    (ge, "$g_siege_method", 1),
    (store_distance_to_party_from_party, ":var0", "$g_player_besiege_town", "p_main_party"),
    (try_begin),
      (gt, ":var0", 2),
      (str_store_party_name_link, s1, "$g_player_besiege_town"),
      (display_message, "@You have broken off your siege of {s1}.", 0xFFFF00),
      (call_script, "script_lift_siege", "$g_player_besiege_town", 0),
      (assign, "$g_player_besiege_town", -1),
      (rest_for_hours, 0, 0, 0),
    (else_try),
      (ge, ":var0", 1),
      (map_free),
      (str_store_party_name_link, s1, "$g_player_besiege_town"),
      (display_message, "@You cannot maintain your siege of {s1} from this distance. You risk your lines breaking.", 0xFCFCFC),
    (else_try),
      (store_current_hours, ":var1"),
      (ge, ":var1", "$g_siege_method_finish_hours"),
      (neg|is_currently_night),
      (rest_for_hours, 0, 0, 0),
      (start_encounter, "$auto_besiege_town"),
    (try_end),
  ]),

  (0,
  [
    (this_or_next|troop_slot_ge, "trp_player", 266, 1),
    (this_or_next|troop_slot_ge, "trp_player", 267, 1),
    (this_or_next|troop_slot_ge, "trp_player", 268, 1),
    (this_or_next|troop_slot_ge, "trp_player", 269, 1),
    (troop_slot_ge, "trp_player", 270, 1),
    (troop_get_slot, ":var0", "trp_player", 266),
    (val_add, ":var0", 1),
    (try_for_range, ":var1", 1, ":var0"),
      (troop_remove_item, "trp_player", "itm_potion_healing"),
    (try_end),
    (troop_set_slot, "trp_player", 266, 0),
    (troop_get_slot, ":var2", "trp_player", 267),
    (val_add, ":var2", 1),
    (try_for_range, ":var1", 1, ":var2"),
      (troop_remove_item, "trp_player", "itm_potion_mana"),
    (try_end),
    (troop_set_slot, "trp_player", 267, 0),
    (troop_get_slot, ":var3", "trp_player", 268),
    (val_add, ":var3", 1),
    (try_for_range, ":var1", 1, ":var3"),
      (troop_remove_item, "trp_player", "itm_potion_curing"),
    (try_end),
    (troop_set_slot, "trp_player", 268, 0),
    (troop_get_slot, ":var4", "trp_player", 269),
    (val_add, ":var4", 1),
    (try_for_range, ":var1", 1, ":var4"),
      (troop_remove_item, "trp_player", "itm_potion_instability"),
    (try_end),
    (troop_set_slot, "trp_player", 269, 0),
    (troop_get_slot, ":var5", "trp_player", 270),
    (val_add, ":var5", 1),
    (try_for_range, ":var1", 1, ":var5"),
      (troop_remove_item, "trp_player", "itm_potion_pain"),
    (try_end),
    (troop_set_slot, "trp_player", 270, 0),
  ]),

  (13,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (neg|troop_slot_ge, ":var0", 10, 1),
      (store_faction_of_troop, ":var1", ":var0"),
      (faction_set_slot, ":var1", 23, 0),
      (try_for_parties, ":var2"),
        (store_faction_of_party, ":var3", ":var2"),
        (is_between, ":var2", "p_town_1", "p_salt_mine"),
        (faction_get_slot, ":var4", ":var3", 23),
        (val_add, ":var4", 1),
        (faction_set_slot, ":var3", 23, ":var4"),
      (try_end),
      (faction_slot_eq, ":var1", 23, 0),
      (troop_set_slot, ":var0", 2, 3),
    (try_end),
  ]),

  (13,
  [
    (try_for_range, ":var0", "trp_npc1", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 3),
      (store_faction_of_troop, ":var1", ":var0"),
      (faction_set_slot, ":var1", 23, 0),
      (try_for_parties, ":var2"),
        (store_faction_of_party, ":var3", ":var2"),
        (is_between, ":var2", "p_town_1", "p_salt_mine"),
        (faction_get_slot, ":var4", ":var3", 23),
        (val_add, ":var4", 1),
        (faction_set_slot, ":var3", 23, ":var4"),
      (try_end),
      (faction_get_slot, ":var5", ":var1", 23),
      (ge, ":var5", 1),
      (troop_set_slot, ":var0", 2, 2),
    (try_end),
  ]),

  (0.5,
  []),

]